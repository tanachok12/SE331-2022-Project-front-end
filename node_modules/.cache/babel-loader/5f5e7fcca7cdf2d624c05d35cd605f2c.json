{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.timers.js\";\nimport EventService from '@/services/EventService.js';\nimport UploadImages from 'vue-upload-drop-images';\nexport default {\n  inject: ['GStore'],\n  components: {\n    UploadImages: UploadImages\n  },\n  data: function data() {\n    return {\n      event: {\n        category: '',\n        title: '',\n        description: '',\n        location: '',\n        organizer: {\n          id: '',\n          name: ''\n        },\n        imageUrls: []\n      },\n      files: []\n    };\n  },\n  methods: {\n    saveEvent: function saveEvent() {\n      var _this = this;\n\n      Promise.all(this.files.map(function (file) {\n        return EventService.uploadFile(file);\n      })).then(function (response) {\n        _this.event.imageUrls = response.map(function (r) {\n          return r.data;\n        });\n        EventService.saveEvent(_this.event).then(function (response) {\n          console.log(response);\n\n          _this.$router.push({\n            name: 'EventDetails',\n            params: {\n              id: response.data.id\n            }\n          });\n\n          _this.GStore.flashMessage = 'You are successfully add a new event for ' + response.data.title;\n          setTimeout(function () {\n            _this.GStore.flashMessage = '';\n          }, 3000);\n        })[\"catch\"](function () {\n          _this.$router.push('NetworkError');\n        });\n      });\n    },\n    handleImages: function handleImages(files) {\n      this.files = files;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AAyCA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,eAAe;EACbC,MAAM,EAAE,CAAC,QAAD,CADK;EAEbC,UAAU,EAAE;IACVF,YAAW,EAAXA;EADU,CAFC;EAKbG,IALa,kBAKN;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,QAAQ,EAAE,EADL;QAELC,KAAK,EAAE,EAFF;QAGLC,WAAW,EAAE,EAHR;QAILC,QAAQ,EAAE,EAJL;QAKLC,SAAS,EAAE;UAAEC,EAAE,EAAE,EAAN;UAAUC,IAAI,EAAE;QAAhB,CALN;QAMLC,SAAS,EAAE;MANN,CADF;MASLC,KAAK,EAAE;IATF,CAAP;EAWD,CAjBY;EAkBbC,OAAO,EAAE;IACPC,SADO,uBACK;MAAA;;MACVC,OAAO,CAACC,GAAR,CACE,KAAKJ,KAAL,CAAWK,GAAX,CAAe,UAACC,IAAD,EAAU;QACvB,OAAOpB,YAAY,CAACqB,UAAb,CAAwBD,IAAxB,CAAP;MACD,CAFD,CADF,EAIEE,IAJF,CAIO,UAACC,QAAD,EAAc;QACnB,KAAI,CAAClB,KAAL,CAAWQ,SAAX,GAAuBU,QAAQ,CAACJ,GAAT,CAAa,UAACK,CAAD;UAAA,OAAOA,CAAC,CAACpB,IAAT;QAAA,CAAb,CAAvB;QACAJ,YAAY,CAACgB,SAAb,CAAuB,KAAI,CAACX,KAA5B,EACGiB,IADH,CACQ,UAACC,QAAD,EAAc;UAClBE,OAAO,CAACC,GAAR,CAAYH,QAAZ;;UACA,KAAI,CAACI,OAAL,CAAaC,IAAb,CAAkB;YAChBhB,IAAI,EAAE,cADU;YAEhBiB,MAAM,EAAE;cAAElB,EAAE,EAAEY,QAAQ,CAACnB,IAAT,CAAcO;YAApB;UAFQ,CAAlB;;UAIA,KAAI,CAACmB,MAAL,CAAYC,YAAZ,GACE,8CAA8CR,QAAQ,CAACnB,IAAT,CAAcG,KAD9D;UAEAyB,UAAU,CAAC,YAAM;YACf,KAAI,CAACF,MAAL,CAAYC,YAAZ,GAA2B,EAA3B;UACD,CAFS,EAEP,IAFO,CAAV;QAGD,CAZH,WAaS,YAAM;UACX,KAAI,CAACJ,OAAL,CAAaC,IAAb,CAAkB,cAAlB;QACD,CAfH;MAgBD,CAtBD;IAuBD,CAzBM;IA0BPK,YA1BO,wBA0BMnB,KA1BN,EA0Ba;MAClB,KAAKA,KAAL,GAAaA,KAAb;IACF;EA5BO;AAlBI,CAAf","names":["EventService","UploadImages","inject","components","data","event","category","title","description","location","organizer","id","name","imageUrls","files","methods","saveEvent","Promise","all","map","file","uploadFile","then","response","r","console","log","$router","push","params","GStore","flashMessage","setTimeout","handleImages"],"sourceRoot":"","sources":["/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/src/views/EventForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Create an event</h1>\n    <form @submit.prevent=\"saveEvent\">\n      <BaseInput\n        v-model=\"event.category\"\n        type=\"text\"\n        label=\"Category\"\n        class=\"field\"\n      />\n\n      <h3>Name & describe your event</h3>\n\n      <BaseInput v-model=\"event.title\" type=\"text\" label=\"Title\" />\n\n      <BaseInput v-model=\"event.description\" type=\"text\" label=\"Description\" />\n\n      <h3>Where is your event?</h3>\n\n      <label>Location</label>\n\n      <BaseInput v-model=\"event.location\" type=\"text\" label=\"Location\" />\n\n      <h3>Who is your organizer?</h3>\n\n      <BaseSelect\n        :options=\"GStore.organizers\"\n        v-model=\"event.organizer.id\"\n        label=\"Select an Organizer\"\n      />\n      <h3>The image of the Event</h3>\n      <UploadImages @changed=\"handleImages\" />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n\n    <pre>{{ event }}</pre>\n  </div>\n</template>\n\n<script>\nimport EventService from '@/services/EventService.js'\nimport UploadImages from 'vue-upload-drop-images'\nexport default {\n  inject: ['GStore'],\n  components: {\n    UploadImages\n  },\n  data() {\n    return {\n      event: {\n        category: '',\n        title: '',\n        description: '',\n        location: '',\n        organizer: { id: '', name: '' },\n        imageUrls: []\n      },\n      files: []\n    }\n  },\n  methods: {\n    saveEvent() {\n      Promise.all(\n        this.files.map((file) => {\n          return EventService.uploadFile(file)\n        })\n      ).then((response) => {\n        this.event.imageUrls = response.map((r) => r.data)\n        EventService.saveEvent(this.event)\n          .then((response) => {\n            console.log(response)\n            this.$router.push({\n              name: 'EventDetails',\n              params: { id: response.data.id }\n            })\n            this.GStore.flashMessage =\n              'You are successfully add a new event for ' + response.data.title\n            setTimeout(() => {\n              this.GStore.flashMessage = ''\n            }, 3000)\n          })\n          .catch(() => {\n            this.$router.push('NetworkError')\n          })\n      })\n    },\n    handleImages(files) {\n      this.files = files\n    }\n  }\n}\n</script>\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}