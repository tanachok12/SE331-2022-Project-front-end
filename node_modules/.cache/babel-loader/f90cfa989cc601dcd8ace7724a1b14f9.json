{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-int.js\";\n// @ is an alias to /src\nimport EventCard from '@/components/EventCard.vue';\nimport EventService from '@/services/EventService.js';\nexport default {\n  name: 'EventListView',\n  props: {\n    page: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    EventCard: EventCard\n  },\n  data: function data() {\n    return {\n      events: null,\n      totalEvents: 0,\n      keyword: null\n    };\n  },\n  // eslint-disable-next-line no-unused-vars\n  beforeRouteEnter: function beforeRouteEnter(routeTo, routeFrom, next) {\n    EventService.getEvents(3, parseInt(routeTo.query.page) || 1).then(function (response) {\n      next(function (comp) {\n        comp.events = response.data;\n        comp.totalEvents = response.headers['x-total-count'];\n      });\n    })[\"catch\"](function () {\n      next({\n        name: 'NetworkError'\n      });\n    });\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(routeTo) {\n    var _this = this;\n\n    var queryFunction;\n\n    if (this.keyword == null || this.keyword === '') {\n      queryFunction = EventService.getEvents(3, parseInt(routeTo.query.page) || 1);\n    } else {\n      queryFunction = EventService.getEventByKeyword(this.keyword, 3, parseInt(routeTo.query.page) || 1);\n    }\n\n    queryFunction.then(function (response) {\n      _this.events = response.data; // <---\n\n      _this.totalEvents = response.headers['x-total-count']; // <---\n    })[\"catch\"](function () {\n      return {\n        name: 'NetworkError'\n      }; // <---\n    });\n  },\n  methods: {\n    updateKeyword: function updateKeyword() {\n      var _this2 = this;\n\n      var queryFunction;\n\n      if (this.keyword === '') {\n        queryFunction = EventService.getEvents(3, 1);\n      } else {\n        queryFunction = EventService.getEventByKeyword(this.keyword, 3, 1);\n      }\n\n      queryFunction.then(function (response) {\n        _this2.events = response.data;\n        console.log(_this2.events);\n        _this2.totalEvents = response.headers['x-total-count'];\n        console.log(_this2.totalEvents);\n      })[\"catch\"](function () {\n        return {\n          name: 'NetworkError'\n        };\n      });\n    }\n  },\n  computed: {\n    hasNextPage: function hasNextPage() {\n      var totalPages = Math.ceil(this.totalEvents / 3);\n      return this.page < totalPages;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["EventCard","EventService","name","props","page","type","Number","required","components","data","events","totalEvents","keyword","beforeRouteEnter","routeTo","routeFrom","next","getEvents","parseInt","query","then","response","comp","headers","beforeRouteUpdate","queryFunction","getEventByKeyword","methods","updateKeyword","console","log","computed","hasNextPage","totalPages","Math","ceil"],"sourceRoot":"","sources":["/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/src/views/EventListView.vue"],"sourcesContent":["<template>\n  <h1>Events For Good</h1>\n\n  <div class=\"events\">\n    <div class=\"search-box\">\n      <BaseInput\n        v-model=\"keyword\"\n        type=\"text\"\n        label=\"Search...\"\n        @input=\"updateKeyword\"\n      />\n    </div>\n\n    <EventCard\n      v-for=\"event in events\"\n      :key=\"event.id\"\n      :event=\"event\"\n    ></EventCard>\n\n    <div class=\"pagination\">\n      <router-link\n        id=\"page-prev\"\n        :to=\"{ name: 'EventList', query: { page: page - 1 } }\"\n        rel=\"prev\"\n        v-if=\"page != 1\"\n      >\n        Prev Page\n      </router-link>\n\n      <router-link\n        id=\"page-next\"\n        :to=\"{ name: 'EventList', query: { page: page + 1 } }\"\n        rel=\"next\"\n        v-if=\"hasNextPage\"\n      >\n        Next Page\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport EventCard from '@/components/EventCard.vue'\nimport EventService from '@/services/EventService.js'\n\nexport default {\n  name: 'EventListView',\n  props: {\n    page: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    EventCard\n  },\n  data() {\n    return {\n      events: null,\n      totalEvents: 0,\n      keyword: null\n    }\n  },\n  // eslint-disable-next-line no-unused-vars\n  beforeRouteEnter(routeTo, routeFrom, next) {\n    EventService.getEvents(3, parseInt(routeTo.query.page) || 1)\n      .then((response) => {\n        next((comp) => {\n          comp.events = response.data\n          comp.totalEvents = response.headers['x-total-count']\n        })\n      })\n      .catch(() => {\n        next({ name: 'NetworkError' })\n      })\n  },\n  beforeRouteUpdate(routeTo) {\n    var queryFunction\n    if (this.keyword == null || this.keyword === '') {\n      queryFunction = EventService.getEvents(\n        3,\n        parseInt(routeTo.query.page) || 1\n      )\n    } else {\n      queryFunction = EventService.getEventByKeyword(\n        this.keyword,\n        3,\n        parseInt(routeTo.query.page) || 1\n      )\n    }\n\n    queryFunction\n      .then((response) => {\n        this.events = response.data // <---\n        this.totalEvents = response.headers['x-total-count'] // <---\n      })\n      .catch(() => {\n        return { name: 'NetworkError' } // <---\n      })\n  },\n  methods: {\n    updateKeyword() {\n      var queryFunction\n      if (this.keyword === '') {\n        queryFunction = EventService.getEvents(3, 1)\n      } else {\n        queryFunction = EventService.getEventByKeyword(this.keyword, 3, 1)\n      }\n\n      queryFunction\n        .then((response) => {\n          this.events = response.data\n          console.log(this.events)\n          this.totalEvents = response.headers['x-total-count']\n          console.log(this.totalEvents)\n        })\n        .catch(() => {\n          return { name: 'NetworkError' }\n        })\n    }\n  },\n\n  computed: {\n    hasNextPage() {\n      let totalPages = Math.ceil(this.totalEvents / 3)\n      return this.page < totalPages\n    }\n  }\n}\n</script>\n<style scoped>\n.events {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.pagination {\n  display: flex;\n  width: 290px;\n}\n\n.pagination a {\n  flex: 1;\n  text-decoration: none;\n  color: #2c3e50;\n}\n\n#page-prev {\n  text-align: left;\n}\n\n#page-next {\n  text-align: right;\n}\n\n.search-box {\n  width: 300px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}