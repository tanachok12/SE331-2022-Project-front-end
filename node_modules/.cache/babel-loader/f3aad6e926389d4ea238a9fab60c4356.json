{"ast":null,"code":"import _slicedToArray from \"/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _typeof from \"/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.array-buffer.is-view.js\";\nimport \"core-js/modules/es.array-buffer.constructor.js\";\nimport \"core-js/modules/es.array-buffer.slice.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.flags.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.create.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-names.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/web.btoa.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\n\n/**\n  * vee-validate v4.7.0\n  * (c) 2022 Abdelrahman Awad\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, warn as warn$1, ref, unref, computed, reactive, watch, onUnmounted, nextTick, onMounted, provide, isRef, onBeforeUnmount, defineComponent, toRef, resolveDynamicComponent, h, watchEffect, markRaw } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nfunction isCallable(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}\n\nvar isObject = function isObject(obj) {\n  return obj !== null && !!obj && _typeof(obj) === 'object' && !Array.isArray(obj);\n};\n\nfunction isIndex(value) {\n  return Number(value) >= 0;\n}\n\nfunction toNumber(value) {\n  var n = parseFloat(value);\n  return isNaN(n) ? value : n;\n}\n\nvar RULES = {};\n/**\r\n * Adds a custom validator to the list of validation rules.\r\n */\n\nfunction defineRule(id, validator) {\n  // makes sure new rules are properly formatted.\n  guardExtend(id, validator);\n  RULES[id] = validator;\n}\n/**\r\n * Gets an already defined rule\r\n */\n\n\nfunction resolveRule(id) {\n  return RULES[id];\n}\n/**\r\n * Guards from extension violations.\r\n */\n\n\nfunction guardExtend(id, validator) {\n  if (isCallable(validator)) {\n    return;\n  }\n\n  throw new Error(\"Extension Error: The validator '\".concat(id, \"' must be a function.\"));\n}\n\nvar FormContextKey = Symbol('vee-validate-form');\nvar FieldContextKey = Symbol('vee-validate-field-instance');\nvar IS_ABSENT = Symbol('Default empty value');\nvar isClient = typeof window !== 'undefined';\n\nfunction isLocator(value) {\n  return isCallable(value) && !!value.__locatorRef;\n}\n\nfunction isYupValidator(value) {\n  return !!value && isCallable(value.validate);\n}\n\nfunction hasCheckedAttr(type) {\n  return type === 'checkbox' || type === 'radio';\n}\n\nfunction isContainerValue(value) {\n  return isObject(value) || Array.isArray(value);\n}\n/**\r\n * True if the value is an empty object or array\r\n */\n\n\nfunction isEmptyContainer(value) {\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n\n  return isObject(value) && Object.keys(value).length === 0;\n}\n/**\r\n * Checks if the path opted out of nested fields using `[fieldName]` syntax\r\n */\n\n\nfunction isNotNestedPath(path) {\n  return /^\\[.+\\]$/i.test(path);\n}\n/**\r\n * Checks if an element is a native HTML5 multi-select input element\r\n */\n\n\nfunction isNativeMultiSelect(el) {\n  return isNativeSelect(el) && el.multiple;\n}\n/**\r\n * Checks if an element is a native HTML5 select input element\r\n */\n\n\nfunction isNativeSelect(el) {\n  return el.tagName === 'SELECT';\n}\n/**\r\n * Checks if a tag name with attrs object will render a native multi-select element\r\n */\n\n\nfunction isNativeMultiSelectNode(tag, attrs) {\n  // The falsy value array is the values that Vue won't add the `multiple` prop if it has one of these values\n  var hasTruthyBindingValue = ![false, null, undefined, 0].includes(attrs.multiple) && !Number.isNaN(attrs.multiple);\n  return tag === 'select' && 'multiple' in attrs && hasTruthyBindingValue;\n}\n/**\r\n * Checks if a node should have a `:value` binding or not\r\n *\r\n * These nodes should not have a value binding\r\n * For files, because they are not reactive\r\n * For multi-selects because the value binding will reset the value\r\n */\n\n\nfunction shouldHaveValueBinding(tag, attrs) {\n  return !isNativeMultiSelectNode(tag, attrs) && attrs.type !== 'file' && !hasCheckedAttr(attrs.type);\n}\n\nfunction isFormSubmitEvent(evt) {\n  return isEvent(evt) && evt.target && 'submit' in evt.target;\n}\n\nfunction isEvent(evt) {\n  if (!evt) {\n    return false;\n  }\n\n  if (typeof Event !== 'undefined' && isCallable(Event) && evt instanceof Event) {\n    return true;\n  } // this is for IE and Cypress #3161\n\n  /* istanbul ignore next */\n\n\n  if (evt && evt.srcElement) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isPropPresent(obj, prop) {\n  return prop in obj && obj[prop] !== IS_ABSENT;\n}\n/**\r\n * Compares if two values are the same borrowed from:\r\n * https://github.com/epoberezkin/fast-deep-equal\r\n * We added a case for file matching since `Object.keys` doesn't work with Files.\r\n * */\n\n\nfunction isEqual(a, b) {\n  if (a === b) return true;\n\n  if (a && b && _typeof(a) === 'object' && _typeof(b) === 'object') {\n    if (a.constructor !== b.constructor) return false; // eslint-disable-next-line no-var\n\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length; // eslint-disable-next-line eqeqeq\n\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!isEqual(a[i], b[i])) return false;\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false;\n\n      var _iterator = _createForOfIteratorHelper(a.entries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          i = _step.value;\n          if (!b.has(i[0])) return false;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(a.entries()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          i = _step2.value;\n          if (!isEqual(i[1], b.get(i[0]))) return false;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return true;\n    } // We added this part for file comparison, arguably a little naive but should work for most cases.\n    // #3911\n\n\n    if (isFile(a) && isFile(b)) {\n      if (a.size !== b.size) return false;\n      if (a.name !== b.name) return false;\n      if (a.lastModified !== b.lastModified) return false;\n      if (a.type !== b.type) return false;\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false;\n\n      var _iterator3 = _createForOfIteratorHelper(a.entries()),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          i = _step3.value;\n          if (!b.has(i[0])) return false;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length; // eslint-disable-next-line eqeqeq\n\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (a[i] !== b[i]) return false;\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      // eslint-disable-next-line no-var\n      var key = keys[i];\n      if (!isEqual(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n}\n\nfunction isFile(a) {\n  if (!isClient) {\n    return false;\n  }\n\n  return a instanceof File;\n} // do not edit .js files directly - edit src/index.jst\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && _typeof(a) == 'object' && _typeof(b) == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n};\n\nfunction cleanupNonNestedPath(path) {\n  if (isNotNestedPath(path)) {\n    return path.replace(/\\[|\\]/gi, '');\n  }\n\n  return path;\n}\n\nfunction getFromPath(object, path, fallback) {\n  if (!object) {\n    return fallback;\n  }\n\n  if (isNotNestedPath(path)) {\n    return object[cleanupNonNestedPath(path)];\n  }\n\n  var resolvedValue = (path || '').split(/\\.|\\[(\\d+)\\]/).filter(Boolean).reduce(function (acc, propKey) {\n    if (isContainerValue(acc) && propKey in acc) {\n      return acc[propKey];\n    }\n\n    return fallback;\n  }, object);\n  return resolvedValue;\n}\n/**\r\n * Sets a nested property value in a path, creates the path properties if it doesn't exist\r\n */\n\n\nfunction setInPath(object, path, value) {\n  if (isNotNestedPath(path)) {\n    object[cleanupNonNestedPath(path)] = value;\n    return;\n  }\n\n  var keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\n  var acc = object;\n\n  for (var i = 0; i < keys.length; i++) {\n    // Last key, set it\n    if (i === keys.length - 1) {\n      acc[keys[i]] = value;\n      return;\n    } // Key does not exist, create a container for it\n\n\n    if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\n      // container can be either an object or an array depending on the next key if it exists\n      acc[keys[i]] = isIndex(keys[i + 1]) ? [] : {};\n    }\n\n    acc = acc[keys[i]];\n  }\n}\n\nfunction unset(object, key) {\n  if (Array.isArray(object) && isIndex(key)) {\n    object.splice(Number(key), 1);\n    return;\n  }\n\n  if (isObject(object)) {\n    delete object[key];\n  }\n}\n/**\r\n * Removes a nested property from object\r\n */\n\n\nfunction unsetPath(object, path) {\n  if (isNotNestedPath(path)) {\n    delete object[cleanupNonNestedPath(path)];\n    return;\n  }\n\n  var keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\n  var acc = object;\n\n  for (var i = 0; i < keys.length; i++) {\n    // Last key, unset it\n    if (i === keys.length - 1) {\n      unset(acc, keys[i]);\n      break;\n    } // Key does not exist, exit\n\n\n    if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\n      break;\n    }\n\n    acc = acc[keys[i]];\n  }\n\n  var pathValues = keys.map(function (_, idx) {\n    return getFromPath(object, keys.slice(0, idx).join('.'));\n  });\n\n  for (var _i = pathValues.length - 1; _i >= 0; _i--) {\n    if (!isEmptyContainer(pathValues[_i])) {\n      continue;\n    }\n\n    if (_i === 0) {\n      unset(object, keys[0]);\n      continue;\n    }\n\n    unset(pathValues[_i - 1], keys[_i - 1]);\n  }\n}\n/**\r\n * A typed version of Object.keys\r\n */\n\n\nfunction keysOf(record) {\n  return Object.keys(record);\n} // Uses same component provide as its own injections\n// Due to changes in https://github.com/vuejs/vue-next/pull/2424\n\n\nfunction injectWithSelf(symbol) {\n  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var vm = getCurrentInstance();\n  return (vm === null || vm === void 0 ? void 0 : vm.provides[symbol]) || inject(symbol, def);\n}\n\nfunction warn(message) {\n  warn$1(\"[vee-validate]: \".concat(message));\n}\n/**\r\n * Ensures we deal with a singular field value\r\n */\n\n\nfunction normalizeField(field) {\n  if (Array.isArray(field)) {\n    return field[0];\n  }\n\n  return field;\n}\n\nfunction resolveNextCheckboxValue(currentValue, checkedValue, uncheckedValue) {\n  if (Array.isArray(currentValue)) {\n    var newVal = _toConsumableArray(currentValue); // Use isEqual since checked object values can possibly fail the equality check #3883\n\n\n    var idx = newVal.findIndex(function (v) {\n      return fastDeepEqual(v, checkedValue);\n    });\n    idx >= 0 ? newVal.splice(idx, 1) : newVal.push(checkedValue);\n    return newVal;\n  }\n\n  return fastDeepEqual(currentValue, checkedValue) ? uncheckedValue : checkedValue;\n}\n/**\r\n * Creates a throttled function that only invokes the provided function (`func`) at most once per within a given number of milliseconds\r\n * (`limit`)\r\n */\n\n\nfunction throttle(func, limit) {\n  var inThrottle;\n  var lastResult;\n  return function () {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var context = this;\n\n    if (!inThrottle) {\n      inThrottle = true;\n      setTimeout(function () {\n        return inThrottle = false;\n      }, limit);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      lastResult = func.apply(context, args);\n    }\n\n    return lastResult;\n  };\n}\n\nfunction debounceAsync(inner) {\n  var ms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var timer = null;\n  var resolves = [];\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    // Run the function after a certain amount of time\n    if (timer) {\n      window.clearTimeout(timer);\n    }\n\n    timer = window.setTimeout(function () {\n      // Get the result of the inner function, then apply it to the resolve function of\n      // each promise that has been created since the last time the inner function was run\n      var result = inner.apply(void 0, args);\n      resolves.forEach(function (r) {\n        return r(result);\n      });\n      resolves = [];\n    }, ms);\n    return new Promise(function (resolve) {\n      return resolves.push(resolve);\n    });\n  };\n}\n\nfunction applyModelModifiers(value, modifiers) {\n  if (!isObject(modifiers)) {\n    return value;\n  }\n\n  if (modifiers.number) {\n    return toNumber(value);\n  }\n\n  return value;\n}\n\nfunction withLatest(fn, onDone) {\n  var latestRun;\n  return /*#__PURE__*/function () {\n    var _runLatest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _len3,\n          args,\n          _key3,\n          pending,\n          result,\n          _args = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              for (_len3 = _args.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = _args[_key3];\n              }\n\n              pending = fn.apply(void 0, args);\n              latestRun = pending;\n              _context.next = 5;\n              return pending;\n\n            case 5:\n              result = _context.sent;\n\n              if (!(pending !== latestRun)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", result);\n\n            case 8:\n              latestRun = undefined;\n              onDone(result, args);\n              return _context.abrupt(\"return\", result);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function runLatest() {\n      return _runLatest.apply(this, arguments);\n    }\n\n    return runLatest;\n  }();\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar normalizeChildren = function normalizeChildren(tag, context, slotProps) {\n  if (!context.slots[\"default\"]) {\n    return context.slots[\"default\"];\n  }\n\n  if (typeof tag === 'string' || !tag) {\n    return context.slots[\"default\"](slotProps());\n  }\n\n  return {\n    \"default\": function _default() {\n      var _a, _b;\n\n      return (_b = (_a = context.slots)[\"default\"]) === null || _b === void 0 ? void 0 : _b.call(_a, slotProps());\n    }\n  };\n};\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\n\n\nfunction getBoundValue(el) {\n  if (hasValueBinding(el)) {\n    return el._value;\n  }\n\n  return undefined;\n}\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\n\n\nfunction hasValueBinding(el) {\n  return '_value' in el;\n}\n\nfunction normalizeEventValue(value) {\n  if (!isEvent(value)) {\n    return value;\n  }\n\n  var input = value.target; // Vue sets the current bound value on `_value` prop\n  // for checkboxes it it should fetch the value binding type as is (boolean instead of string)\n\n  if (hasCheckedAttr(input.type) && hasValueBinding(input)) {\n    return getBoundValue(input);\n  }\n\n  if (input.type === 'file' && input.files) {\n    var files = Array.from(input.files);\n    return input.multiple ? files : files[0];\n  }\n\n  if (isNativeMultiSelect(input)) {\n    return Array.from(input.options).filter(function (opt) {\n      return opt.selected && !opt.disabled;\n    }).map(getBoundValue);\n  } // makes sure we get the actual `option` bound value\n  // #3440\n\n\n  if (isNativeSelect(input)) {\n    var selectedOption = Array.from(input.options).find(function (opt) {\n      return opt.selected;\n    });\n    return selectedOption ? getBoundValue(selectedOption) : input.value;\n  }\n\n  return input.value;\n}\n/**\r\n * Normalizes the given rules expression.\r\n */\n\n\nfunction normalizeRules(rules) {\n  var acc = {};\n  Object.defineProperty(acc, '_$$isNormalized', {\n    value: true,\n    writable: false,\n    enumerable: false,\n    configurable: false\n  });\n\n  if (!rules) {\n    return acc;\n  } // Object is already normalized, skip.\n\n\n  if (isObject(rules) && rules._$$isNormalized) {\n    return rules;\n  }\n\n  if (isObject(rules)) {\n    return Object.keys(rules).reduce(function (prev, curr) {\n      var params = normalizeParams(rules[curr]);\n\n      if (rules[curr] !== false) {\n        prev[curr] = buildParams(params);\n      }\n\n      return prev;\n    }, acc);\n  }\n  /* istanbul ignore if */\n\n\n  if (typeof rules !== 'string') {\n    return acc;\n  }\n\n  return rules.split('|').reduce(function (prev, rule) {\n    var parsedRule = parseRule(rule);\n\n    if (!parsedRule.name) {\n      return prev;\n    }\n\n    prev[parsedRule.name] = buildParams(parsedRule.params);\n    return prev;\n  }, acc);\n}\n/**\r\n * Normalizes a rule param.\r\n */\n\n\nfunction normalizeParams(params) {\n  if (params === true) {\n    return [];\n  }\n\n  if (Array.isArray(params)) {\n    return params;\n  }\n\n  if (isObject(params)) {\n    return params;\n  }\n\n  return [params];\n}\n\nfunction buildParams(provided) {\n  var mapValueToLocator = function mapValueToLocator(value) {\n    // A target param using interpolation\n    if (typeof value === 'string' && value[0] === '@') {\n      return createLocator(value.slice(1));\n    }\n\n    return value;\n  };\n\n  if (Array.isArray(provided)) {\n    return provided.map(mapValueToLocator);\n  } // #3073\n\n\n  if (provided instanceof RegExp) {\n    return [provided];\n  }\n\n  return Object.keys(provided).reduce(function (prev, key) {\n    prev[key] = mapValueToLocator(provided[key]);\n    return prev;\n  }, {});\n}\n/**\r\n * Parses a rule string expression.\r\n */\n\n\nvar parseRule = function parseRule(rule) {\n  var params = [];\n  var name = rule.split(':')[0];\n\n  if (rule.includes(':')) {\n    params = rule.split(':').slice(1).join(':').split(',');\n  }\n\n  return {\n    name: name,\n    params: params\n  };\n};\n\nfunction createLocator(value) {\n  var locator = function locator(crossTable) {\n    var val = getFromPath(crossTable, value) || crossTable[value];\n    return val;\n  };\n\n  locator.__locatorRef = value;\n  return locator;\n}\n\nfunction extractLocators(params) {\n  if (Array.isArray(params)) {\n    return params.filter(isLocator);\n  }\n\n  return keysOf(params).filter(function (key) {\n    return isLocator(params[key]);\n  }).map(function (key) {\n    return params[key];\n  });\n}\n\nvar DEFAULT_CONFIG = {\n  generateMessage: function generateMessage(_ref) {\n    var field = _ref.field;\n    return \"\".concat(field, \" is not valid.\");\n  },\n  bails: true,\n  validateOnBlur: true,\n  validateOnChange: true,\n  validateOnInput: false,\n  validateOnModelUpdate: true\n};\nvar currentConfig = Object.assign({}, DEFAULT_CONFIG);\n\nvar getConfig = function getConfig() {\n  return currentConfig;\n};\n\nvar setConfig = function setConfig(newConf) {\n  currentConfig = Object.assign(Object.assign({}, currentConfig), newConf);\n};\n\nvar configure = setConfig;\n/**\r\n * Validates a value against the rules.\r\n */\n\nfunction validate(_x, _x2) {\n  return _validate2.apply(this, arguments);\n}\n/**\r\n * Starts the validation process.\r\n */\n\n\nfunction _validate2() {\n  _validate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(value, rules) {\n    var options,\n        shouldBail,\n        field,\n        result,\n        errors,\n        _args12 = arguments;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            options = _args12.length > 2 && _args12[2] !== undefined ? _args12[2] : {};\n            shouldBail = options === null || options === void 0 ? void 0 : options.bails;\n            field = {\n              name: (options === null || options === void 0 ? void 0 : options.name) || '{field}',\n              rules: rules,\n              bails: shouldBail !== null && shouldBail !== void 0 ? shouldBail : true,\n              formData: (options === null || options === void 0 ? void 0 : options.values) || {}\n            };\n            _context12.next = 5;\n            return _validate(field, value);\n\n          case 5:\n            result = _context12.sent;\n            errors = result.errors;\n            return _context12.abrupt(\"return\", {\n              errors: errors,\n              valid: !errors.length\n            });\n\n          case 8:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _validate2.apply(this, arguments);\n}\n\nfunction _validate(_x3, _x4) {\n  return _validate3.apply(this, arguments);\n}\n/**\r\n * Handles yup validation\r\n */\n\n\nfunction _validate3() {\n  _validate3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(field, value) {\n    var ctx, pipeline, _length, _errors2, i, rule, result, isValid, message, normalizedContext, errors, rulesKeys, length, _i2, _rule, _result;\n\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            if (!isYupValidator(field.rules)) {\n              _context13.next = 2;\n              break;\n            }\n\n            return _context13.abrupt(\"return\", validateFieldWithYup(value, field.rules, {\n              bails: field.bails\n            }));\n\n          case 2:\n            if (!(isCallable(field.rules) || Array.isArray(field.rules))) {\n              _context13.next = 24;\n              break;\n            }\n\n            ctx = {\n              field: field.name,\n              form: field.formData,\n              value: value\n            }; // Normalize the pipeline\n\n            pipeline = Array.isArray(field.rules) ? field.rules : [field.rules];\n            _length = pipeline.length;\n            _errors2 = [];\n            i = 0;\n\n          case 8:\n            if (!(i < _length)) {\n              _context13.next = 23;\n              break;\n            }\n\n            rule = pipeline[i];\n            _context13.next = 12;\n            return rule(value, ctx);\n\n          case 12:\n            result = _context13.sent;\n            isValid = typeof result !== 'string' && result;\n\n            if (!isValid) {\n              _context13.next = 16;\n              break;\n            }\n\n            return _context13.abrupt(\"continue\", 20);\n\n          case 16:\n            message = typeof result === 'string' ? result : _generateFieldError(ctx);\n\n            _errors2.push(message);\n\n            if (!field.bails) {\n              _context13.next = 20;\n              break;\n            }\n\n            return _context13.abrupt(\"return\", {\n              errors: _errors2\n            });\n\n          case 20:\n            i++;\n            _context13.next = 8;\n            break;\n\n          case 23:\n            return _context13.abrupt(\"return\", {\n              errors: _errors2\n            });\n\n          case 24:\n            normalizedContext = Object.assign(Object.assign({}, field), {\n              rules: normalizeRules(field.rules)\n            });\n            errors = [];\n            rulesKeys = Object.keys(normalizedContext.rules);\n            length = rulesKeys.length;\n            _i2 = 0;\n\n          case 29:\n            if (!(_i2 < length)) {\n              _context13.next = 41;\n              break;\n            }\n\n            _rule = rulesKeys[_i2];\n            _context13.next = 33;\n            return _test(normalizedContext, value, {\n              name: _rule,\n              params: normalizedContext.rules[_rule]\n            });\n\n          case 33:\n            _result = _context13.sent;\n\n            if (!_result.error) {\n              _context13.next = 38;\n              break;\n            }\n\n            errors.push(_result.error);\n\n            if (!field.bails) {\n              _context13.next = 38;\n              break;\n            }\n\n            return _context13.abrupt(\"return\", {\n              errors: errors\n            });\n\n          case 38:\n            _i2++;\n            _context13.next = 29;\n            break;\n\n          case 41:\n            return _context13.abrupt(\"return\", {\n              errors: errors\n            });\n\n          case 42:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _validate3.apply(this, arguments);\n}\n\nfunction validateFieldWithYup(_x5, _x6, _x7) {\n  return _validateFieldWithYup.apply(this, arguments);\n}\n/**\r\n * Tests a single input value against a rule.\r\n */\n\n\nfunction _validateFieldWithYup() {\n  _validateFieldWithYup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(value, validator, opts) {\n    var _a, errors;\n\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return validator.validate(value, {\n              abortEarly: (_a = opts.bails) !== null && _a !== void 0 ? _a : true\n            }).then(function () {\n              return [];\n            })[\"catch\"](function (err) {\n              // Yup errors have a name prop one them.\n              // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n              if (err.name === 'ValidationError') {\n                return err.errors;\n              } // re-throw the error so we don't hide it\n\n\n              throw err;\n            });\n\n          case 2:\n            errors = _context14.sent;\n            return _context14.abrupt(\"return\", {\n              errors: errors\n            });\n\n          case 4:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _validateFieldWithYup.apply(this, arguments);\n}\n\nfunction _test(_x8, _x9, _x10) {\n  return _test2.apply(this, arguments);\n}\n/**\r\n * Generates error messages.\r\n */\n\n\nfunction _test2() {\n  _test2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(field, value, rule) {\n    var validator, params, ctx, result;\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            validator = resolveRule(rule.name);\n\n            if (validator) {\n              _context15.next = 3;\n              break;\n            }\n\n            throw new Error(\"No such validator '\".concat(rule.name, \"' exists.\"));\n\n          case 3:\n            params = fillTargetValues(rule.params, field.formData);\n            ctx = {\n              field: field.name,\n              value: value,\n              form: field.formData,\n              rule: Object.assign(Object.assign({}, rule), {\n                params: params\n              })\n            };\n            _context15.next = 7;\n            return validator(value, params, ctx);\n\n          case 7:\n            result = _context15.sent;\n\n            if (!(typeof result === 'string')) {\n              _context15.next = 10;\n              break;\n            }\n\n            return _context15.abrupt(\"return\", {\n              error: result\n            });\n\n          case 10:\n            return _context15.abrupt(\"return\", {\n              error: result ? undefined : _generateFieldError(ctx)\n            });\n\n          case 11:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _test2.apply(this, arguments);\n}\n\nfunction _generateFieldError(fieldCtx) {\n  var message = getConfig().generateMessage;\n\n  if (!message) {\n    return 'Field is invalid';\n  }\n\n  return message(fieldCtx);\n}\n\nfunction fillTargetValues(params, crossTable) {\n  var normalize = function normalize(value) {\n    if (isLocator(value)) {\n      return value(crossTable);\n    }\n\n    return value;\n  };\n\n  if (Array.isArray(params)) {\n    return params.map(normalize);\n  }\n\n  return Object.keys(params).reduce(function (acc, param) {\n    acc[param] = normalize(params[param]);\n    return acc;\n  }, {});\n}\n\nfunction validateYupSchema(_x11, _x12) {\n  return _validateYupSchema.apply(this, arguments);\n}\n\nfunction _validateYupSchema() {\n  _validateYupSchema = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(schema, values) {\n    var errorObjects, results, errors, _iterator5, _step5, error, messages;\n\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.next = 2;\n            return schema.validate(values, {\n              abortEarly: false\n            }).then(function () {\n              return [];\n            })[\"catch\"](function (err) {\n              // Yup errors have a name prop one them.\n              // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n              if (err.name !== 'ValidationError') {\n                throw err;\n              } // list of aggregated errors\n\n\n              return err.inner || [];\n            });\n\n          case 2:\n            errorObjects = _context16.sent;\n            results = {};\n            errors = {};\n            _iterator5 = _createForOfIteratorHelper(errorObjects);\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                error = _step5.value;\n                messages = error.errors;\n                results[error.path] = {\n                  valid: !messages.length,\n                  errors: messages\n                };\n\n                if (messages.length) {\n                  errors[error.path] = messages[0];\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n\n            return _context16.abrupt(\"return\", {\n              valid: !errorObjects.length,\n              results: results,\n              errors: errors\n            });\n\n          case 8:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _validateYupSchema.apply(this, arguments);\n}\n\nfunction validateObjectSchema(_x13, _x14, _x15) {\n  return _validateObjectSchema.apply(this, arguments);\n}\n\nfunction _validateObjectSchema() {\n  _validateObjectSchema = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(schema, values, opts) {\n    var paths, validations, isAllValid, validationResults, results, errors, _iterator6, _step6, result;\n\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            paths = keysOf(schema);\n            validations = paths.map( /*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(path) {\n                var _a, _b, _c, fieldResult;\n\n                return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                  while (1) {\n                    switch (_context17.prev = _context17.next) {\n                      case 0:\n                        _context17.next = 2;\n                        return validate(getFromPath(values, path), schema[path], {\n                          name: ((_a = opts === null || opts === void 0 ? void 0 : opts.names) === null || _a === void 0 ? void 0 : _a[path]) || path,\n                          values: values,\n                          bails: (_c = (_b = opts === null || opts === void 0 ? void 0 : opts.bailsMap) === null || _b === void 0 ? void 0 : _b[path]) !== null && _c !== void 0 ? _c : true\n                        });\n\n                      case 2:\n                        fieldResult = _context17.sent;\n                        return _context17.abrupt(\"return\", Object.assign(Object.assign({}, fieldResult), {\n                          path: path\n                        }));\n\n                      case 4:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }\n                }, _callee17);\n              }));\n\n              return function (_x22) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n            isAllValid = true;\n            _context18.next = 5;\n            return Promise.all(validations);\n\n          case 5:\n            validationResults = _context18.sent;\n            results = {};\n            errors = {};\n            _iterator6 = _createForOfIteratorHelper(validationResults);\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                result = _step6.value;\n                results[result.path] = {\n                  valid: result.valid,\n                  errors: result.errors\n                };\n\n                if (!result.valid) {\n                  isAllValid = false;\n                  errors[result.path] = result.errors[0];\n                }\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n\n            return _context18.abrupt(\"return\", {\n              valid: isAllValid,\n              results: results,\n              errors: errors\n            });\n\n          case 11:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _validateObjectSchema.apply(this, arguments);\n}\n\nfunction set(obj, key, val) {\n  if (_typeof(val.value) === 'object') val.value = klona(val.value);\n\n  if (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n    Object.defineProperty(obj, key, val);\n  } else obj[key] = val.value;\n}\n\nfunction klona(x) {\n  if (_typeof(x) !== 'object') return x;\n  var i = 0,\n      k,\n      list,\n      tmp,\n      str = Object.prototype.toString.call(x);\n\n  if (str === '[object Object]') {\n    tmp = Object.create(x.__proto__ || null);\n  } else if (str === '[object Array]') {\n    tmp = Array(x.length);\n  } else if (str === '[object Set]') {\n    tmp = new Set();\n    x.forEach(function (val) {\n      tmp.add(klona(val));\n    });\n  } else if (str === '[object Map]') {\n    tmp = new Map();\n    x.forEach(function (val, key) {\n      tmp.set(klona(key), klona(val));\n    });\n  } else if (str === '[object Date]') {\n    tmp = new Date(+x);\n  } else if (str === '[object RegExp]') {\n    tmp = new RegExp(x.source, x.flags);\n  } else if (str === '[object DataView]') {\n    tmp = new x.constructor(klona(x.buffer));\n  } else if (str === '[object ArrayBuffer]') {\n    tmp = x.slice(0);\n  } else if (str.slice(-6) === 'Array]') {\n    // ArrayBuffer.isView(x)\n    // ~> `new` bcuz `Buffer.slice` => ref\n    tmp = new x.constructor(x);\n  }\n\n  if (tmp) {\n    for (list = Object.getOwnPropertySymbols(x); i < list.length; i++) {\n      set(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n    }\n\n    for (i = 0, list = Object.getOwnPropertyNames(x); i < list.length; i++) {\n      if (Object.hasOwnProperty.call(tmp, k = list[i]) && tmp[k] === x[k]) continue;\n      set(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n    }\n  }\n\n  return tmp || x;\n}\n\nvar ID_COUNTER = 0;\n\nfunction useFieldState(path, init) {\n  var _useFieldValue2 = _useFieldValue(path, init.modelValue, init.form),\n      value = _useFieldValue2.value,\n      initialValue = _useFieldValue2.initialValue,\n      setInitialValue = _useFieldValue2.setInitialValue;\n\n  var _useFieldErrors2 = _useFieldErrors(path, init.form),\n      errorMessage = _useFieldErrors2.errorMessage,\n      errors = _useFieldErrors2.errors,\n      setErrors = _useFieldErrors2.setErrors;\n\n  var meta = _useFieldMeta(value, initialValue, errors);\n\n  var id = ID_COUNTER >= Number.MAX_SAFE_INTEGER ? 0 : ++ID_COUNTER;\n\n  function setState(state) {\n    var _a;\n\n    if ('value' in state) {\n      value.value = state.value;\n    }\n\n    if ('errors' in state) {\n      setErrors(state.errors);\n    }\n\n    if ('touched' in state) {\n      meta.touched = (_a = state.touched) !== null && _a !== void 0 ? _a : meta.touched;\n    }\n\n    if ('initialValue' in state) {\n      setInitialValue(state.initialValue);\n    }\n  }\n\n  return {\n    id: id,\n    path: path,\n    value: value,\n    initialValue: initialValue,\n    meta: meta,\n    errors: errors,\n    errorMessage: errorMessage,\n    setState: setState\n  };\n}\n/**\r\n * Creates the field value and resolves the initial value\r\n */\n\n\nfunction _useFieldValue(path, modelValue, form) {\n  var modelRef = ref(unref(modelValue));\n\n  function resolveInitialValue() {\n    if (!form) {\n      return unref(modelRef);\n    }\n\n    return getFromPath(form.meta.value.initialValues, unref(path), unref(modelRef));\n  }\n\n  function setInitialValue(value) {\n    if (!form) {\n      modelRef.value = value;\n      return;\n    }\n\n    form.stageInitialValue(unref(path), value, true);\n  }\n\n  var initialValue = computed(resolveInitialValue); // if no form is associated, use a regular ref.\n\n  if (!form) {\n    var _value = ref(resolveInitialValue());\n\n    return {\n      value: _value,\n      initialValue: initialValue,\n      setInitialValue: setInitialValue\n    };\n  } // to set the initial value, first check if there is a current value, if there is then use it.\n  // otherwise use the configured initial value if it exists.\n  // prioritize model value over form values\n  // #3429\n\n\n  var currentValue = modelValue ? unref(modelValue) : getFromPath(form.values, unref(path), unref(initialValue));\n  form.stageInitialValue(unref(path), currentValue, true); // otherwise use a computed setter that triggers the `setFieldValue`\n\n  var value = computed({\n    get: function get() {\n      return getFromPath(form.values, unref(path));\n    },\n    set: function set(newVal) {\n      form.setFieldValue(unref(path), newVal);\n    }\n  });\n  return {\n    value: value,\n    initialValue: initialValue,\n    setInitialValue: setInitialValue\n  };\n}\n/**\r\n * Creates meta flags state and some associated effects with them\r\n */\n\n\nfunction _useFieldMeta(currentValue, initialValue, errors) {\n  var meta = reactive({\n    touched: false,\n    pending: false,\n    valid: true,\n    validated: !!unref(errors).length,\n    initialValue: computed(function () {\n      return unref(initialValue);\n    }),\n    dirty: computed(function () {\n      return !isEqual(unref(currentValue), unref(initialValue));\n    })\n  });\n  watch(errors, function (value) {\n    meta.valid = !value.length;\n  }, {\n    immediate: true,\n    flush: 'sync'\n  });\n  return meta;\n}\n/**\r\n * Creates the error message state for the field state\r\n */\n\n\nfunction _useFieldErrors(path, form) {\n  function normalizeErrors(messages) {\n    if (!messages) {\n      return [];\n    }\n\n    return Array.isArray(messages) ? messages : [messages];\n  }\n\n  if (!form) {\n    var _errors = ref([]);\n\n    return {\n      errors: _errors,\n      errorMessage: computed(function () {\n        return _errors.value[0];\n      }),\n      setErrors: function setErrors(messages) {\n        _errors.value = normalizeErrors(messages);\n      }\n    };\n  }\n\n  var errors = computed(function () {\n    return form.errorBag.value[unref(path)] || [];\n  });\n  return {\n    errors: errors,\n    errorMessage: computed(function () {\n      return errors.value[0];\n    }),\n    setErrors: function setErrors(messages) {\n      form.setFieldErrorBag(unref(path), normalizeErrors(messages));\n    }\n  };\n}\n\nfunction installDevtoolsPlugin(app) {\n  if (process.env.NODE_ENV !== 'production') {\n    setupDevtoolsPlugin({\n      id: 'vee-validate-devtools-plugin',\n      label: 'VeeValidate Plugin',\n      packageName: 'vee-validate',\n      homepage: 'https://vee-validate.logaretm.com/v4',\n      app: app,\n      logo: 'https://vee-validate.logaretm.com/v4/logo.png'\n    }, setupApiHooks);\n  }\n}\n\nvar DEVTOOLS_FORMS = {};\nvar DEVTOOLS_FIELDS = {};\nvar API;\nvar refreshInspector = throttle(function () {\n  setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return nextTick();\n\n          case 2:\n            API === null || API === void 0 ? void 0 : API.sendInspectorState(INSPECTOR_ID);\n            API === null || API === void 0 ? void 0 : API.sendInspectorTree(INSPECTOR_ID);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), 100);\n}, 100);\n\nfunction registerFormWithDevTools(form) {\n  var vm = getCurrentInstance();\n\n  if (!API) {\n    var app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\n\n    if (!app) {\n      return;\n    }\n\n    installDevtoolsPlugin(app);\n  }\n\n  DEVTOOLS_FORMS[form.formId] = Object.assign({}, form);\n  DEVTOOLS_FORMS[form.formId]._vm = vm;\n  onUnmounted(function () {\n    delete DEVTOOLS_FORMS[form.formId];\n    refreshInspector();\n  });\n  refreshInspector();\n}\n\nfunction registerSingleFieldWithDevtools(field) {\n  var vm = getCurrentInstance();\n\n  if (!API) {\n    var app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\n\n    if (!app) {\n      return;\n    }\n\n    installDevtoolsPlugin(app);\n  }\n\n  DEVTOOLS_FIELDS[field.id] = Object.assign({}, field);\n  DEVTOOLS_FIELDS[field.id]._vm = vm;\n  onUnmounted(function () {\n    delete DEVTOOLS_FIELDS[field.id];\n    refreshInspector();\n  });\n  refreshInspector();\n}\n\nvar INSPECTOR_ID = 'vee-validate-inspector';\nvar COLORS = {\n  error: 0xbd4b4b,\n  success: 0x06d77b,\n  unknown: 0x54436b,\n  white: 0xffffff,\n  black: 0x000000,\n  blue: 0x035397,\n  purple: 0xb980f0,\n  orange: 0xf5a962,\n  gray: 0xbbbfca\n};\nvar SELECTED_NODE = null;\n\nfunction setupApiHooks(api) {\n  API = api;\n  api.addInspector({\n    id: INSPECTOR_ID,\n    icon: 'rule',\n    label: 'vee-validate',\n    noSelectionText: 'Select a vee-validate node to inspect',\n    actions: [{\n      icon: 'done_outline',\n      tooltip: 'Validate selected item',\n      action: function () {\n        var _action = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n          var result;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (SELECTED_NODE) {\n                    _context3.next = 3;\n                    break;\n                  }\n\n                  console.error('There is not a valid selected vee-validate node or component');\n                  return _context3.abrupt(\"return\");\n\n                case 3:\n                  _context3.next = 5;\n                  return SELECTED_NODE.validate();\n\n                case 5:\n                  result = _context3.sent;\n                  console.log(result);\n\n                case 7:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        function action() {\n          return _action.apply(this, arguments);\n        }\n\n        return action;\n      }()\n    }, {\n      icon: 'delete_sweep',\n      tooltip: 'Clear validation state of the selected item',\n      action: function action() {\n        if (!SELECTED_NODE) {\n          console.error('There is not a valid selected vee-validate node or component');\n          return;\n        }\n\n        if ('id' in SELECTED_NODE) {\n          SELECTED_NODE.resetField();\n          return;\n        }\n\n        SELECTED_NODE.resetForm();\n      }\n    }]\n  });\n  api.on.getInspectorTree(function (payload) {\n    if (payload.inspectorId !== INSPECTOR_ID) {\n      return;\n    }\n\n    var forms = Object.values(DEVTOOLS_FORMS);\n    var fields = Object.values(DEVTOOLS_FIELDS);\n    payload.rootNodes = [].concat(_toConsumableArray(forms.map(mapFormForDevtoolsInspector)), _toConsumableArray(fields.map(function (field) {\n      return mapFieldForDevtoolsInspector(field);\n    })));\n  });\n  api.on.getInspectorState(function (payload, ctx) {\n    if (payload.inspectorId !== INSPECTOR_ID || ctx.currentTab !== \"custom-inspector:\".concat(INSPECTOR_ID)) {\n      return;\n    }\n\n    var _decodeNodeId = decodeNodeId(payload.nodeId),\n        form = _decodeNodeId.form,\n        field = _decodeNodeId.field,\n        type = _decodeNodeId.type;\n\n    if (form && type === 'form') {\n      payload.state = buildFormState(form);\n      SELECTED_NODE = form;\n      return;\n    }\n\n    if (field && type === 'field') {\n      payload.state = buildFieldState(field);\n      SELECTED_NODE = field;\n      return;\n    }\n\n    SELECTED_NODE = null;\n  });\n}\n\nfunction mapFormForDevtoolsInspector(form) {\n  var _getTagTheme = getTagTheme(form),\n      textColor = _getTagTheme.textColor,\n      bgColor = _getTagTheme.bgColor;\n\n  var formTreeNodes = {};\n  Object.values(form.fieldsByPath.value).forEach(function (field) {\n    var fieldInstance = Array.isArray(field) ? field[0] : field;\n\n    if (!fieldInstance) {\n      return;\n    }\n\n    setInPath(formTreeNodes, unref(fieldInstance.name), mapFieldForDevtoolsInspector(fieldInstance, form));\n  });\n\n  function buildFormTree(tree) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var key = _toConsumableArray(path).pop();\n\n    if ('id' in tree) {\n      return Object.assign(Object.assign({}, tree), {\n        label: key || tree.label\n      });\n    }\n\n    if (isObject(tree)) {\n      return {\n        id: \"\".concat(path.join('.')),\n        label: key || '',\n        children: Object.keys(tree).map(function (key) {\n          return buildFormTree(tree[key], [].concat(_toConsumableArray(path), [key]));\n        })\n      };\n    }\n\n    if (Array.isArray(tree)) {\n      return {\n        id: \"\".concat(path.join('.')),\n        label: \"\".concat(key, \"[]\"),\n        children: tree.map(function (c, idx) {\n          return buildFormTree(c, [].concat(_toConsumableArray(path), [String(idx)]));\n        })\n      };\n    }\n\n    return {\n      id: '',\n      label: '',\n      children: []\n    };\n  }\n\n  var _buildFormTree = buildFormTree(formTreeNodes),\n      children = _buildFormTree.children;\n\n  return {\n    id: encodeNodeId(form),\n    label: 'Form',\n    children: children,\n    tags: [{\n      label: 'Form',\n      textColor: textColor,\n      backgroundColor: bgColor\n    }, {\n      label: \"\".concat(Object.keys(form.fieldsByPath.value).length, \" fields\"),\n      textColor: COLORS.white,\n      backgroundColor: COLORS.unknown\n    }]\n  };\n}\n\nfunction mapFieldForDevtoolsInspector(field, form) {\n  var fieldInstance = normalizeField(field);\n\n  var _getTagTheme2 = getTagTheme(fieldInstance),\n      textColor = _getTagTheme2.textColor,\n      bgColor = _getTagTheme2.bgColor;\n\n  var isGroup = Array.isArray(field) && field.length > 1;\n  return {\n    id: encodeNodeId(form, fieldInstance, !isGroup),\n    label: unref(fieldInstance.name),\n    children: Array.isArray(field) ? field.map(function (fieldItem) {\n      return mapFieldForDevtoolsInspector(fieldItem, form);\n    }) : undefined,\n    tags: [isGroup ? undefined : {\n      label: 'Field',\n      textColor: textColor,\n      backgroundColor: bgColor\n    }, !form ? {\n      label: 'Standalone',\n      textColor: COLORS.black,\n      backgroundColor: COLORS.gray\n    } : undefined, !isGroup && fieldInstance.type === 'checkbox' ? {\n      label: 'Checkbox',\n      textColor: COLORS.white,\n      backgroundColor: COLORS.blue\n    } : undefined, !isGroup && fieldInstance.type === 'radio' ? {\n      label: 'Radio',\n      textColor: COLORS.white,\n      backgroundColor: COLORS.purple\n    } : undefined, isGroup ? {\n      label: 'Group',\n      textColor: COLORS.black,\n      backgroundColor: COLORS.orange\n    } : undefined].filter(Boolean)\n  };\n}\n\nfunction encodeNodeId(form, field) {\n  var encodeIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var fieldPath = form ? unref(field === null || field === void 0 ? void 0 : field.name) : field === null || field === void 0 ? void 0 : field.id;\n  var fieldGroup = fieldPath ? form === null || form === void 0 ? void 0 : form.fieldsByPath.value[fieldPath] : undefined;\n  var idx;\n\n  if (encodeIndex && field && Array.isArray(fieldGroup)) {\n    idx = fieldGroup.indexOf(field);\n  }\n\n  var idObject = {\n    f: form === null || form === void 0 ? void 0 : form.formId,\n    ff: fieldPath,\n    idx: idx,\n    type: field ? 'field' : 'form'\n  };\n  return btoa(JSON.stringify(idObject));\n}\n\nfunction decodeNodeId(nodeId) {\n  try {\n    var idObject = JSON.parse(atob(nodeId));\n    var form = DEVTOOLS_FORMS[idObject.f];\n\n    if (!form && idObject.ff) {\n      var field = DEVTOOLS_FIELDS[idObject.ff];\n\n      if (!field) {\n        return {};\n      }\n\n      return {\n        type: idObject.type,\n        field: field\n      };\n    }\n\n    if (!form) {\n      return {};\n    }\n\n    var fieldGroup = form.fieldsByPath.value[idObject.ff];\n    return {\n      type: idObject.type,\n      form: form,\n      field: Array.isArray(fieldGroup) ? fieldGroup[idObject.idx || 0] : fieldGroup\n    };\n  } catch (err) {// console.error(`Devtools: [vee-validate] Failed to parse node id ${nodeId}`);\n  }\n\n  return {};\n}\n\nfunction buildFieldState(field) {\n  var errors = field.errors,\n      meta = field.meta,\n      value = field.value;\n  return {\n    'Field state': [{\n      key: 'errors',\n      value: errors.value\n    }, {\n      key: 'initialValue',\n      value: meta.initialValue\n    }, {\n      key: 'currentValue',\n      value: value.value\n    }, {\n      key: 'touched',\n      value: meta.touched\n    }, {\n      key: 'dirty',\n      value: meta.dirty\n    }, {\n      key: 'valid',\n      value: meta.valid\n    }]\n  };\n}\n\nfunction buildFormState(form) {\n  var errorBag = form.errorBag,\n      meta = form.meta,\n      values = form.values,\n      isSubmitting = form.isSubmitting,\n      submitCount = form.submitCount;\n  return {\n    'Form state': [{\n      key: 'submitCount',\n      value: submitCount.value\n    }, {\n      key: 'isSubmitting',\n      value: isSubmitting.value\n    }, {\n      key: 'touched',\n      value: meta.value.touched\n    }, {\n      key: 'dirty',\n      value: meta.value.dirty\n    }, {\n      key: 'valid',\n      value: meta.value.valid\n    }, {\n      key: 'initialValues',\n      value: meta.value.initialValues\n    }, {\n      key: 'currentValues',\n      value: values\n    }, {\n      key: 'errors',\n      value: keysOf(errorBag.value).reduce(function (acc, key) {\n        var _a;\n\n        var message = (_a = errorBag.value[key]) === null || _a === void 0 ? void 0 : _a[0];\n\n        if (message) {\n          acc[key] = message;\n        }\n\n        return acc;\n      }, {})\n    }]\n  };\n}\n/**\r\n * Resolves the tag color based on the form state\r\n */\n\n\nfunction getTagTheme(fieldOrForm) {\n  // const fallbackColors = {\n  //   bgColor: COLORS.unknown,\n  //   textColor: COLORS.white,\n  // };\n  var isValid = 'id' in fieldOrForm ? fieldOrForm.meta.valid : fieldOrForm.meta.value.valid;\n  return {\n    bgColor: isValid ? COLORS.success : COLORS.error,\n    textColor: isValid ? COLORS.black : COLORS.white\n  };\n}\n/**\r\n * Creates a field composite.\r\n */\n\n\nfunction useField(name, rules, opts) {\n  if (hasCheckedAttr(opts === null || opts === void 0 ? void 0 : opts.type)) {\n    return useCheckboxField(name, rules, opts);\n  }\n\n  return _useField(name, rules, opts);\n}\n\nfunction _useField(name, rules, opts) {\n  var _normalizeOptions = normalizeOptions(unref(name), opts),\n      modelValue = _normalizeOptions.initialValue,\n      validateOnMount = _normalizeOptions.validateOnMount,\n      bails = _normalizeOptions.bails,\n      type = _normalizeOptions.type,\n      checkedValue = _normalizeOptions.checkedValue,\n      label = _normalizeOptions.label,\n      validateOnValueUpdate = _normalizeOptions.validateOnValueUpdate,\n      uncheckedValue = _normalizeOptions.uncheckedValue,\n      controlled = _normalizeOptions.controlled,\n      keepValueOnUnmount = _normalizeOptions.keepValueOnUnmount,\n      modelPropName = _normalizeOptions.modelPropName,\n      syncVModel = _normalizeOptions.syncVModel,\n      controlForm = _normalizeOptions.form;\n\n  var injectedForm = controlled ? injectWithSelf(FormContextKey) : undefined;\n  var form = controlForm || injectedForm; // a flag indicating if the field is about to be removed/unmounted.\n\n  var markedForRemoval = false;\n\n  var _useFieldState = useFieldState(name, {\n    modelValue: modelValue,\n    form: form\n  }),\n      id = _useFieldState.id,\n      value = _useFieldState.value,\n      initialValue = _useFieldState.initialValue,\n      meta = _useFieldState.meta,\n      setState = _useFieldState.setState,\n      errors = _useFieldState.errors,\n      errorMessage = _useFieldState.errorMessage;\n\n  if (syncVModel) {\n    useVModel({\n      value: value,\n      prop: modelPropName,\n      handleChange: handleChange\n    });\n  }\n  /**\r\n   * Handles common onBlur meta update\r\n   */\n\n\n  var handleBlur = function handleBlur() {\n    meta.touched = true;\n  };\n\n  var normalizedRules = computed(function () {\n    var rulesValue = unref(rules);\n    var schema = unref(form === null || form === void 0 ? void 0 : form.schema);\n\n    if (schema && !isYupValidator(schema)) {\n      rulesValue = extractRuleFromSchema(schema, unref(name)) || rulesValue;\n    }\n\n    if (isYupValidator(rulesValue) || isCallable(rulesValue) || Array.isArray(rulesValue)) {\n      return rulesValue;\n    }\n\n    return normalizeRules(rulesValue);\n  });\n\n  function validateCurrentValue(_x16) {\n    return _validateCurrentValue.apply(this, arguments);\n  }\n\n  function _validateCurrentValue() {\n    _validateCurrentValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(mode) {\n      var _a, _b;\n\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(form === null || form === void 0 ? void 0 : form.validateSchema)) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 3;\n              return form.validateSchema(mode);\n\n            case 3:\n              _context6.t1 = unref(name);\n              _context6.t2 = _a = _context6.sent.results[_context6.t1];\n              _context6.t0 = _context6.t2 !== null;\n\n              if (!_context6.t0) {\n                _context6.next = 8;\n                break;\n              }\n\n              _context6.t0 = _a !== void 0;\n\n            case 8:\n              if (!_context6.t0) {\n                _context6.next = 12;\n                break;\n              }\n\n              _context6.t3 = _a;\n              _context6.next = 13;\n              break;\n\n            case 12:\n              _context6.t3 = {\n                valid: true,\n                errors: []\n              };\n\n            case 13:\n              return _context6.abrupt(\"return\", _context6.t3);\n\n            case 14:\n              return _context6.abrupt(\"return\", validate(value.value, normalizedRules.value, {\n                name: unref(label) || unref(name),\n                values: (_b = form === null || form === void 0 ? void 0 : form.values) !== null && _b !== void 0 ? _b : {},\n                bails: bails\n              }));\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _validateCurrentValue.apply(this, arguments);\n  }\n\n  var validateWithStateMutation = withLatest( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            meta.pending = true;\n            meta.validated = true;\n            return _context4.abrupt(\"return\", validateCurrentValue('validated-only'));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })), function (result) {\n    if (markedForRemoval) {\n      result.valid = true;\n      result.errors = [];\n    }\n\n    setState({\n      errors: result.errors\n    });\n    meta.pending = false;\n    return result;\n  });\n  var validateValidStateOnly = withLatest( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", validateCurrentValue('silent'));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  })), function (result) {\n    if (markedForRemoval) {\n      result.valid = true;\n    }\n\n    meta.valid = result.valid;\n    return result;\n  });\n\n  function validate$1(opts) {\n    if ((opts === null || opts === void 0 ? void 0 : opts.mode) === 'silent') {\n      return validateValidStateOnly();\n    }\n\n    return validateWithStateMutation();\n  } // Common input/change event handler\n\n\n  function handleChange(e) {\n    var shouldValidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var newValue = normalizeEventValue(e);\n    value.value = newValue;\n\n    if (!validateOnValueUpdate && shouldValidate) {\n      validateWithStateMutation();\n    }\n  } // Runs the initial validation\n\n\n  onMounted(function () {\n    if (validateOnMount) {\n      return validateWithStateMutation();\n    } // validate self initially if no form was handling this\n    // forms should have their own initial silent validation run to make things more efficient\n\n\n    if (!form || !form.validateSchema) {\n      validateValidStateOnly();\n    }\n  });\n\n  function setTouched(isTouched) {\n    meta.touched = isTouched;\n  }\n\n  var unwatchValue;\n  var lastWatchedValue = klona(value.value);\n\n  function watchValue() {\n    unwatchValue = watch(value, function (val, oldVal) {\n      if (isEqual(val, oldVal) && isEqual(val, lastWatchedValue)) {\n        return;\n      }\n\n      var validateFn = validateOnValueUpdate ? validateWithStateMutation : validateValidStateOnly;\n      validateFn();\n      lastWatchedValue = klona(val);\n    }, {\n      deep: true\n    });\n  }\n\n  watchValue();\n\n  function resetField(state) {\n    var _a;\n\n    unwatchValue === null || unwatchValue === void 0 ? void 0 : unwatchValue();\n    var newValue = state && 'value' in state ? state.value : initialValue.value;\n    setState({\n      value: klona(newValue),\n      initialValue: klona(newValue),\n      touched: (_a = state === null || state === void 0 ? void 0 : state.touched) !== null && _a !== void 0 ? _a : false,\n      errors: (state === null || state === void 0 ? void 0 : state.errors) || []\n    });\n    meta.pending = false;\n    meta.validated = false;\n    validateValidStateOnly(); // need to watch at next tick to avoid triggering the value watcher\n\n    nextTick(function () {\n      watchValue();\n    });\n  }\n\n  function setValue(newValue) {\n    value.value = newValue;\n  }\n\n  function setErrors(errors) {\n    setState({\n      errors: Array.isArray(errors) ? errors : [errors]\n    });\n  }\n\n  var field = {\n    id: id,\n    name: name,\n    label: label,\n    value: value,\n    meta: meta,\n    errors: errors,\n    errorMessage: errorMessage,\n    type: type,\n    checkedValue: checkedValue,\n    uncheckedValue: uncheckedValue,\n    bails: bails,\n    keepValueOnUnmount: keepValueOnUnmount,\n    resetField: resetField,\n    handleReset: function handleReset() {\n      return resetField();\n    },\n    validate: validate$1,\n    handleChange: handleChange,\n    handleBlur: handleBlur,\n    setState: setState,\n    setTouched: setTouched,\n    setErrors: setErrors,\n    setValue: setValue\n  };\n  provide(FieldContextKey, field);\n\n  if (isRef(rules) && typeof unref(rules) !== 'function') {\n    watch(rules, function (value, oldValue) {\n      if (isEqual(value, oldValue)) {\n        return;\n      }\n\n      meta.validated ? validateWithStateMutation() : validateValidStateOnly();\n    }, {\n      deep: true\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    field._vm = getCurrentInstance();\n    watch(function () {\n      return Object.assign(Object.assign({\n        errors: errors.value\n      }, meta), {\n        value: value.value\n      });\n    }, refreshInspector, {\n      deep: true\n    });\n\n    if (!form) {\n      registerSingleFieldWithDevtools(field);\n    }\n  } // if no associated form return the field API immediately\n\n\n  if (!form) {\n    return field;\n  } // associate the field with the given form\n\n\n  form.register(field);\n  onBeforeUnmount(function () {\n    markedForRemoval = true;\n    form.unregister(field);\n  }); // extract cross-field dependencies in a computed prop\n\n  var dependencies = computed(function () {\n    var rulesVal = normalizedRules.value; // is falsy, a function schema or a yup schema\n\n    if (!rulesVal || isCallable(rulesVal) || isYupValidator(rulesVal) || Array.isArray(rulesVal)) {\n      return {};\n    }\n\n    return Object.keys(rulesVal).reduce(function (acc, rule) {\n      var deps = extractLocators(rulesVal[rule]).map(function (dep) {\n        return dep.__locatorRef;\n      }).reduce(function (depAcc, depName) {\n        var depValue = getFromPath(form.values, depName) || form.values[depName];\n\n        if (depValue !== undefined) {\n          depAcc[depName] = depValue;\n        }\n\n        return depAcc;\n      }, {});\n      Object.assign(acc, deps);\n      return acc;\n    }, {});\n  }); // Adds a watcher that runs the validation whenever field dependencies change\n\n  watch(dependencies, function (deps, oldDeps) {\n    // Skip if no dependencies or if the field wasn't manipulated\n    if (!Object.keys(deps).length) {\n      return;\n    }\n\n    var shouldValidate = !isEqual(deps, oldDeps);\n\n    if (shouldValidate) {\n      meta.validated ? validateWithStateMutation() : validateValidStateOnly();\n    }\n  });\n  return field;\n}\n/**\r\n * Normalizes partial field options to include the full options\r\n */\n\n\nfunction normalizeOptions(name, opts) {\n  var defaults = function defaults() {\n    return {\n      initialValue: undefined,\n      validateOnMount: false,\n      bails: true,\n      label: name,\n      validateOnValueUpdate: true,\n      keepValueOnUnmount: undefined,\n      modelPropName: 'modelValue',\n      syncVModel: true,\n      controlled: true\n    };\n  };\n\n  if (!opts) {\n    return defaults();\n  } // TODO: Deprecate this in next major release\n\n\n  var checkedValue = 'valueProp' in opts ? opts.valueProp : opts.checkedValue;\n  var controlled = 'standalone' in opts ? !opts.standalone : opts.controlled;\n  return Object.assign(Object.assign(Object.assign({}, defaults()), opts || {}), {\n    controlled: controlled !== null && controlled !== void 0 ? controlled : true,\n    checkedValue: checkedValue\n  });\n}\n/**\r\n * Extracts the validation rules from a schema\r\n */\n\n\nfunction extractRuleFromSchema(schema, fieldName) {\n  // no schema at all\n  if (!schema) {\n    return undefined;\n  } // there is a key on the schema object for this field\n\n\n  return schema[fieldName];\n}\n\nfunction useCheckboxField(name, rules, opts) {\n  var form = !(opts === null || opts === void 0 ? void 0 : opts.standalone) ? injectWithSelf(FormContextKey) : undefined;\n  var checkedValue = opts === null || opts === void 0 ? void 0 : opts.checkedValue;\n  var uncheckedValue = opts === null || opts === void 0 ? void 0 : opts.uncheckedValue;\n\n  function patchCheckboxApi(field) {\n    var handleChange = field.handleChange;\n    var checked = computed(function () {\n      var currentValue = unref(field.value);\n      var checkedVal = unref(checkedValue);\n      return Array.isArray(currentValue) ? currentValue.findIndex(function (v) {\n        return isEqual(v, checkedVal);\n      }) >= 0 : isEqual(checkedVal, currentValue);\n    });\n\n    function handleCheckboxChange(e) {\n      var shouldValidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var _a;\n\n      if (checked.value === ((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.checked)) {\n        if (shouldValidate) {\n          field.validate();\n        }\n\n        return;\n      }\n\n      var newValue = normalizeEventValue(e); // Single checkbox field without a form to toggle it's value\n\n      if (!form) {\n        newValue = resolveNextCheckboxValue(unref(field.value), unref(checkedValue), unref(uncheckedValue));\n      }\n\n      handleChange(newValue, shouldValidate);\n    }\n\n    return Object.assign(Object.assign({}, field), {\n      checked: checked,\n      checkedValue: checkedValue,\n      uncheckedValue: uncheckedValue,\n      handleChange: handleCheckboxChange\n    });\n  }\n\n  return patchCheckboxApi(_useField(name, rules, opts));\n}\n\nfunction useVModel(_ref5) {\n  var prop = _ref5.prop,\n      value = _ref5.value,\n      handleChange = _ref5.handleChange;\n  var vm = getCurrentInstance();\n  /* istanbul ignore next */\n\n  if (!vm) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Failed to setup model events because `useField` was not called in setup.');\n    }\n\n    return;\n  }\n\n  var propName = prop || 'modelValue';\n  var emitName = \"update:\".concat(propName); // Component doesn't have a model prop setup (must be defined on the props)\n\n  if (!(propName in vm.props)) {\n    return;\n  }\n\n  watch(value, function (newValue) {\n    if (isEqual(newValue, getCurrentModelValue(vm, propName))) {\n      return;\n    }\n\n    vm.emit(emitName, newValue);\n  });\n  watch(function () {\n    return getCurrentModelValue(vm, propName);\n  }, function (propValue) {\n    if (propValue === IS_ABSENT && value.value === undefined) {\n      return;\n    }\n\n    var newValue = propValue === IS_ABSENT ? undefined : propValue;\n\n    if (isEqual(newValue, applyModelModifiers(value.value, vm.props.modelModifiers))) {\n      return;\n    }\n\n    handleChange(newValue);\n  });\n}\n\nfunction getCurrentModelValue(vm, propName) {\n  return vm.props[propName];\n}\n\nvar FieldImpl = defineComponent({\n  name: 'Field',\n  inheritAttrs: false,\n  props: {\n    as: {\n      type: [String, Object],\n      \"default\": undefined\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    rules: {\n      type: [Object, String, Function],\n      \"default\": undefined\n    },\n    validateOnMount: {\n      type: Boolean,\n      \"default\": false\n    },\n    validateOnBlur: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    validateOnChange: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    validateOnInput: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    validateOnModelUpdate: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    bails: {\n      type: Boolean,\n      \"default\": function _default() {\n        return getConfig().bails;\n      }\n    },\n    label: {\n      type: String,\n      \"default\": undefined\n    },\n    uncheckedValue: {\n      type: null,\n      \"default\": undefined\n    },\n    modelValue: {\n      type: null,\n      \"default\": IS_ABSENT\n    },\n    modelModifiers: {\n      type: null,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    'onUpdate:modelValue': {\n      type: null,\n      \"default\": undefined\n    },\n    standalone: {\n      type: Boolean,\n      \"default\": false\n    },\n    keepValue: {\n      type: Boolean,\n      \"default\": undefined\n    }\n  },\n  setup: function setup(props, ctx) {\n    var rules = toRef(props, 'rules');\n    var name = toRef(props, 'name');\n    var label = toRef(props, 'label');\n    var uncheckedValue = toRef(props, 'uncheckedValue');\n    var keepValue = toRef(props, 'keepValue');\n\n    var _useField2 = useField(name, rules, {\n      validateOnMount: props.validateOnMount,\n      bails: props.bails,\n      standalone: props.standalone,\n      type: ctx.attrs.type,\n      initialValue: resolveInitialValue(props, ctx),\n      // Only for checkboxes and radio buttons\n      checkedValue: ctx.attrs.value,\n      uncheckedValue: uncheckedValue,\n      label: label,\n      validateOnValueUpdate: false,\n      keepValueOnUnmount: keepValue\n    }),\n        errors = _useField2.errors,\n        value = _useField2.value,\n        errorMessage = _useField2.errorMessage,\n        validateField = _useField2.validate,\n        handleChange = _useField2.handleChange,\n        handleBlur = _useField2.handleBlur,\n        setTouched = _useField2.setTouched,\n        resetField = _useField2.resetField,\n        handleReset = _useField2.handleReset,\n        meta = _useField2.meta,\n        checked = _useField2.checked,\n        setErrors = _useField2.setErrors; // If there is a v-model applied on the component we need to emit the `update:modelValue` whenever the value binding changes\n\n\n    var onChangeHandler = function handleChangeWithModel(e) {\n      var shouldValidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      handleChange(e, shouldValidate);\n      ctx.emit('update:modelValue', value.value);\n    };\n\n    var handleInput = function handleInput(e) {\n      if (!hasCheckedAttr(ctx.attrs.type)) {\n        value.value = normalizeEventValue(e);\n      }\n    };\n\n    var onInputHandler = function handleInputWithModel(e) {\n      handleInput(e);\n      ctx.emit('update:modelValue', value.value);\n    };\n\n    var fieldProps = computed(function () {\n      var _resolveValidationTri = resolveValidationTriggers(props),\n          validateOnInput = _resolveValidationTri.validateOnInput,\n          validateOnChange = _resolveValidationTri.validateOnChange,\n          validateOnBlur = _resolveValidationTri.validateOnBlur,\n          validateOnModelUpdate = _resolveValidationTri.validateOnModelUpdate;\n\n      var baseOnBlur = [handleBlur, ctx.attrs.onBlur, validateOnBlur ? validateField : undefined].filter(Boolean);\n      var baseOnInput = [function (e) {\n        return onChangeHandler(e, validateOnInput);\n      }, ctx.attrs.onInput].filter(Boolean);\n      var baseOnChange = [function (e) {\n        return onChangeHandler(e, validateOnChange);\n      }, ctx.attrs.onChange].filter(Boolean);\n      var attrs = {\n        name: props.name,\n        onBlur: baseOnBlur,\n        onInput: baseOnInput,\n        onChange: baseOnChange\n      };\n\n      attrs['onUpdate:modelValue'] = function (e) {\n        return onChangeHandler(e, validateOnModelUpdate);\n      };\n\n      if (hasCheckedAttr(ctx.attrs.type) && checked) {\n        attrs.checked = checked.value;\n      }\n\n      var tag = resolveTag(props, ctx);\n\n      if (shouldHaveValueBinding(tag, ctx.attrs)) {\n        attrs.value = value.value;\n      }\n\n      return attrs;\n    });\n\n    function slotProps() {\n      return {\n        field: fieldProps.value,\n        value: value.value,\n        meta: meta,\n        errors: errors.value,\n        errorMessage: errorMessage.value,\n        validate: validateField,\n        resetField: resetField,\n        handleChange: onChangeHandler,\n        handleInput: onInputHandler,\n        handleReset: handleReset,\n        handleBlur: handleBlur,\n        setTouched: setTouched,\n        setErrors: setErrors\n      };\n    }\n\n    ctx.expose({\n      setErrors: setErrors,\n      setTouched: setTouched,\n      reset: resetField,\n      validate: validateField,\n      handleChange: handleChange\n    });\n    return function () {\n      var tag = resolveDynamicComponent(resolveTag(props, ctx));\n      var children = normalizeChildren(tag, ctx, slotProps);\n\n      if (tag) {\n        return h(tag, Object.assign(Object.assign({}, ctx.attrs), fieldProps.value), children);\n      }\n\n      return children;\n    };\n  }\n});\n\nfunction resolveTag(props, ctx) {\n  var tag = props.as || '';\n\n  if (!props.as && !ctx.slots[\"default\"]) {\n    tag = 'input';\n  }\n\n  return tag;\n}\n\nfunction resolveValidationTriggers(props) {\n  var _a, _b, _c, _d;\n\n  var _getConfig = getConfig(),\n      validateOnInput = _getConfig.validateOnInput,\n      validateOnChange = _getConfig.validateOnChange,\n      validateOnBlur = _getConfig.validateOnBlur,\n      validateOnModelUpdate = _getConfig.validateOnModelUpdate;\n\n  return {\n    validateOnInput: (_a = props.validateOnInput) !== null && _a !== void 0 ? _a : validateOnInput,\n    validateOnChange: (_b = props.validateOnChange) !== null && _b !== void 0 ? _b : validateOnChange,\n    validateOnBlur: (_c = props.validateOnBlur) !== null && _c !== void 0 ? _c : validateOnBlur,\n    validateOnModelUpdate: (_d = props.validateOnModelUpdate) !== null && _d !== void 0 ? _d : validateOnModelUpdate\n  };\n}\n\nfunction resolveInitialValue(props, ctx) {\n  // Gets the initial value either from `value` prop/attr or `v-model` binding (modelValue)\n  // For checkboxes and radio buttons it will always be the model value not the `value` attribute\n  if (!hasCheckedAttr(ctx.attrs.type)) {\n    return isPropPresent(props, 'modelValue') ? props.modelValue : ctx.attrs.value;\n  }\n\n  return isPropPresent(props, 'modelValue') ? props.modelValue : undefined;\n}\n\nvar Field = FieldImpl;\nvar FORM_COUNTER = 0;\n\nfunction useForm(opts) {\n  var _a;\n\n  var formId = FORM_COUNTER++;\n  var controlledModelPaths = new Set(); // Prevents fields from double resetting their values, which causes checkboxes to toggle their initial value\n  // TODO: This won't be needed if we centralize all the state inside the `form` for form inputs\n\n  var RESET_LOCK = false; // A lookup containing fields or field groups\n\n  var fieldsByPath = ref({}); // If the form is currently submitting\n\n  var isSubmitting = ref(false); // The number of times the user tried to submit the form\n\n  var submitCount = ref(0); // field arrays managed by this form\n\n  var fieldArrays = []; // a private ref for all form values\n\n  var formValues = reactive(klona(unref(opts === null || opts === void 0 ? void 0 : opts.initialValues) || {})); // the source of errors for the form fields\n\n  var _useErrorBag = useErrorBag(opts === null || opts === void 0 ? void 0 : opts.initialErrors),\n      errorBag = _useErrorBag.errorBag,\n      setErrorBag = _useErrorBag.setErrorBag,\n      setFieldErrorBag = _useErrorBag.setFieldErrorBag; // Gets the first error of each field\n\n\n  var errors = computed(function () {\n    return keysOf(errorBag.value).reduce(function (acc, key) {\n      var bag = errorBag.value[key];\n\n      if (bag && bag.length) {\n        acc[key] = bag[0];\n      }\n\n      return acc;\n    }, {});\n  });\n\n  function getFirstFieldAtPath(path) {\n    var fieldOrGroup = fieldsByPath.value[path];\n    return Array.isArray(fieldOrGroup) ? fieldOrGroup[0] : fieldOrGroup;\n  }\n\n  function fieldExists(path) {\n    return !!fieldsByPath.value[path];\n  }\n  /**\r\n   * Holds a computed reference to all fields names and labels\r\n   */\n\n\n  var fieldNames = computed(function () {\n    return keysOf(fieldsByPath.value).reduce(function (names, path) {\n      var field = getFirstFieldAtPath(path);\n\n      if (field) {\n        names[path] = unref(field.label || field.name) || '';\n      }\n\n      return names;\n    }, {});\n  });\n  var fieldBailsMap = computed(function () {\n    return keysOf(fieldsByPath.value).reduce(function (map, path) {\n      var _a;\n\n      var field = getFirstFieldAtPath(path);\n\n      if (field) {\n        map[path] = (_a = field.bails) !== null && _a !== void 0 ? _a : true;\n      }\n\n      return map;\n    }, {});\n  }); // mutable non-reactive reference to initial errors\n  // we need this to process initial errors then unset them\n\n  var initialErrors = Object.assign({}, (opts === null || opts === void 0 ? void 0 : opts.initialErrors) || {});\n  var keepValuesOnUnmount = (_a = opts === null || opts === void 0 ? void 0 : opts.keepValuesOnUnmount) !== null && _a !== void 0 ? _a : false; // initial form values\n\n  var _useFormInitialValues = useFormInitialValues(fieldsByPath, formValues, opts === null || opts === void 0 ? void 0 : opts.initialValues),\n      initialValues = _useFormInitialValues.initialValues,\n      originalInitialValues = _useFormInitialValues.originalInitialValues,\n      setInitialValues = _useFormInitialValues.setInitialValues; // form meta aggregations\n\n\n  var meta = useFormMeta(fieldsByPath, formValues, originalInitialValues, errors);\n  var controlledValues = computed(function () {\n    return [].concat(_toConsumableArray(controlledModelPaths), _toConsumableArray(keysOf(fieldsByPath.value))).reduce(function (acc, path) {\n      var value = getFromPath(formValues, path);\n      setInPath(acc, path, value);\n      return acc;\n    }, {});\n  });\n  var schema = opts === null || opts === void 0 ? void 0 : opts.validationSchema;\n  /**\r\n   * Batches validation runs in 5ms batches\r\n   * Must have two distinct batch queues to make sure they don't override each other settings #3783\r\n   */\n\n  var debouncedSilentValidation = debounceAsync(_validateSchema, 5);\n  var debouncedValidation = debounceAsync(_validateSchema, 5);\n  var validateSchema = withLatest( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(mode) {\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return mode;\n\n            case 2:\n              _context7.t0 = _context7.sent;\n\n              if (!(_context7.t0 === 'silent')) {\n                _context7.next = 7;\n                break;\n              }\n\n              _context7.t1 = debouncedSilentValidation();\n              _context7.next = 8;\n              break;\n\n            case 7:\n              _context7.t1 = debouncedValidation();\n\n            case 8:\n              return _context7.abrupt(\"return\", _context7.t1);\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x17) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), function (formResult, _ref7) {\n    var _ref8 = _slicedToArray(_ref7, 1),\n        mode = _ref8[0];\n\n    // fields by id lookup\n    var fieldsById = formCtx.fieldsByPath.value || {}; // errors fields names, we need it to also check if custom errors are updated\n\n    var currentErrorsPaths = keysOf(formCtx.errorBag.value); // collect all the keys from the schema and all fields\n    // this ensures we have a complete keymap of all the fields\n\n    var paths = _toConsumableArray(new Set([].concat(_toConsumableArray(keysOf(formResult.results)), _toConsumableArray(keysOf(fieldsById)), _toConsumableArray(currentErrorsPaths)))); // aggregates the paths into a single result object while applying the results on the fields\n\n\n    return paths.reduce(function (validation, path) {\n      var field = fieldsById[path];\n      var messages = (formResult.results[path] || {\n        errors: []\n      }).errors;\n      var fieldResult = {\n        errors: messages,\n        valid: !messages.length\n      };\n      validation.results[path] = fieldResult;\n\n      if (!fieldResult.valid) {\n        validation.errors[path] = fieldResult.errors[0];\n      } // field not rendered\n\n\n      if (!field) {\n        setFieldError(path, messages);\n        return validation;\n      } // always update the valid flag regardless of the mode\n\n\n      applyFieldMutation(field, function (f) {\n        return f.meta.valid = fieldResult.valid;\n      });\n\n      if (mode === 'silent') {\n        return validation;\n      }\n\n      var wasValidated = Array.isArray(field) ? field.some(function (f) {\n        return f.meta.validated;\n      }) : field.meta.validated;\n\n      if (mode === 'validated-only' && !wasValidated) {\n        return validation;\n      }\n\n      applyFieldMutation(field, function (f) {\n        return f.setState({\n          errors: fieldResult.errors\n        });\n      });\n      return validation;\n    }, {\n      valid: formResult.valid,\n      results: {},\n      errors: {}\n    });\n  });\n\n  function makeSubmissionFactory(onlyControlled) {\n    return function submitHandlerFactory(fn, onValidationError) {\n      return function submissionHandler(e) {\n        if (e instanceof Event) {\n          e.preventDefault();\n          e.stopPropagation();\n        } // Touch all fields\n\n\n        setTouched(keysOf(fieldsByPath.value).reduce(function (acc, field) {\n          acc[field] = true;\n          return acc;\n        }, {}));\n        isSubmitting.value = true;\n        submitCount.value++;\n        return validate().then(function (result) {\n          var values = klona(formValues);\n\n          if (result.valid && typeof fn === 'function') {\n            var controlled = klona(controlledValues.value);\n            return fn(onlyControlled ? controlled : values, {\n              evt: e,\n              controlledValues: controlled,\n              setErrors: setErrors,\n              setFieldError: setFieldError,\n              setTouched: setTouched,\n              setFieldTouched: setFieldTouched,\n              setValues: setValues,\n              setFieldValue: setFieldValue,\n              resetForm: resetForm\n            });\n          }\n\n          if (!result.valid && typeof onValidationError === 'function') {\n            onValidationError({\n              values: values,\n              evt: e,\n              errors: result.errors,\n              results: result.results\n            });\n          }\n        }).then(function (returnVal) {\n          isSubmitting.value = false;\n          return returnVal;\n        }, function (err) {\n          isSubmitting.value = false; // re-throw the err so it doesn't go silent\n\n          throw err;\n        });\n      };\n    };\n  }\n\n  var handleSubmitImpl = makeSubmissionFactory(false);\n  var handleSubmit = handleSubmitImpl;\n  handleSubmit.withControlled = makeSubmissionFactory(true);\n  var formCtx = {\n    formId: formId,\n    fieldsByPath: fieldsByPath,\n    values: formValues,\n    controlledValues: controlledValues,\n    errorBag: errorBag,\n    errors: errors,\n    schema: schema,\n    submitCount: submitCount,\n    meta: meta,\n    isSubmitting: isSubmitting,\n    fieldArrays: fieldArrays,\n    keepValuesOnUnmount: keepValuesOnUnmount,\n    validateSchema: unref(schema) ? validateSchema : undefined,\n    validate: validate,\n    register: registerField,\n    unregister: unregisterField,\n    setFieldErrorBag: setFieldErrorBag,\n    validateField: validateField,\n    setFieldValue: setFieldValue,\n    setValues: setValues,\n    setErrors: setErrors,\n    setFieldError: setFieldError,\n    setFieldTouched: setFieldTouched,\n    setTouched: setTouched,\n    resetForm: resetForm,\n    handleSubmit: handleSubmit,\n    stageInitialValue: stageInitialValue,\n    unsetInitialValue: unsetInitialValue,\n    setFieldInitialValue: setFieldInitialValue,\n    useFieldModel: useFieldModel\n  };\n\n  function isFieldGroup(fieldOrGroup) {\n    return Array.isArray(fieldOrGroup);\n  }\n\n  function applyFieldMutation(fieldOrGroup, mutation) {\n    if (Array.isArray(fieldOrGroup)) {\n      return fieldOrGroup.forEach(mutation);\n    }\n\n    return mutation(fieldOrGroup);\n  }\n\n  function mutateAllFields(mutation) {\n    Object.values(fieldsByPath.value).forEach(function (field) {\n      if (!field) {\n        return;\n      } // avoid resetting the field values, because they should've been reset already.\n\n\n      applyFieldMutation(field, mutation);\n    });\n  }\n  /**\r\n   * Manually sets an error message on a specific field\r\n   */\n\n\n  function setFieldError(field, message) {\n    setFieldErrorBag(field, message);\n  }\n  /**\r\n   * Sets errors for the fields specified in the object\r\n   */\n\n\n  function setErrors(fields) {\n    setErrorBag(fields);\n  }\n  /**\r\n   * Sets a single field value\r\n   */\n\n\n  function setFieldValue(field, value) {\n    var _ref9 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      force: false\n    },\n        force = _ref9.force;\n\n    var _a;\n\n    var fieldInstance = fieldsByPath.value[field];\n    var clonedValue = klona(value); // field wasn't found, create a virtual field as a placeholder\n\n    if (!fieldInstance) {\n      setInPath(formValues, field, clonedValue);\n      return;\n    }\n\n    if (isFieldGroup(fieldInstance) && ((_a = fieldInstance[0]) === null || _a === void 0 ? void 0 : _a.type) === 'checkbox' && !Array.isArray(value)) {\n      // Multiple checkboxes, and only one of them got updated\n      var _newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field) || [], value, undefined));\n\n      setInPath(formValues, field, _newValue);\n      return;\n    }\n\n    var newValue = value; // Single Checkbox: toggles the field value unless the field is being reset then force it\n\n    if (!isFieldGroup(fieldInstance) && fieldInstance.type === 'checkbox' && !force && !RESET_LOCK) {\n      newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field), value, unref(fieldInstance.uncheckedValue)));\n    }\n\n    setInPath(formValues, field, newValue);\n  }\n  /**\r\n   * Sets multiple fields values\r\n   */\n\n\n  function setValues(fields) {\n    // clean up old values\n    keysOf(formValues).forEach(function (key) {\n      delete formValues[key];\n    }); // set up new values\n\n    keysOf(fields).forEach(function (path) {\n      setFieldValue(path, fields[path]);\n    }); // regenerate the arrays when the form values change\n\n    fieldArrays.forEach(function (f) {\n      return f && f.reset();\n    });\n  }\n\n  function createModel(path) {\n    var _useFieldValue3 = _useFieldValue(path, undefined, formCtx),\n        value = _useFieldValue3.value;\n\n    watch(value, function () {\n      if (!fieldExists(unref(path))) {\n        validate({\n          mode: 'validated-only'\n        });\n      }\n    }, {\n      deep: true\n    });\n    controlledModelPaths.add(unref(path));\n    return value;\n  }\n\n  function useFieldModel(path) {\n    if (!Array.isArray(path)) {\n      return createModel(path);\n    }\n\n    return path.map(createModel);\n  }\n  /**\r\n   * Sets the touched meta state on a field\r\n   */\n\n\n  function setFieldTouched(field, isTouched) {\n    var fieldInstance = fieldsByPath.value[field];\n\n    if (fieldInstance) {\n      applyFieldMutation(fieldInstance, function (f) {\n        return f.setTouched(isTouched);\n      });\n    }\n  }\n  /**\r\n   * Sets the touched meta state on multiple fields\r\n   */\n\n\n  function setTouched(fields) {\n    keysOf(fields).forEach(function (field) {\n      setFieldTouched(field, !!fields[field]);\n    });\n  }\n  /**\r\n   * Resets all fields\r\n   */\n\n\n  function resetForm(state) {\n    RESET_LOCK = true; // Reset all field states first\n\n    mutateAllFields(function (f) {\n      return f.resetField();\n    }); // set initial values if provided\n\n    if (state === null || state === void 0 ? void 0 : state.values) {\n      setInitialValues(state.values);\n      setValues(state === null || state === void 0 ? void 0 : state.values);\n    } else {\n      // clean up the initial values back to the original\n      setInitialValues(originalInitialValues.value); // otherwise clean the current values\n\n      setValues(originalInitialValues.value);\n    }\n\n    if (state === null || state === void 0 ? void 0 : state.touched) {\n      setTouched(state.touched);\n    }\n\n    setErrors((state === null || state === void 0 ? void 0 : state.errors) || {});\n    submitCount.value = (state === null || state === void 0 ? void 0 : state.submitCount) || 0;\n    nextTick(function () {\n      RESET_LOCK = false;\n    });\n  }\n\n  function insertFieldAtPath(field, path) {\n    var rawField = markRaw(field);\n    var fieldPath = path; // first field at that path\n\n    if (!fieldsByPath.value[fieldPath]) {\n      fieldsByPath.value[fieldPath] = rawField;\n      return;\n    }\n\n    var fieldAtPath = fieldsByPath.value[fieldPath];\n\n    if (fieldAtPath && !Array.isArray(fieldAtPath)) {\n      fieldsByPath.value[fieldPath] = [fieldAtPath];\n    } // add the new array to that path\n\n\n    fieldsByPath.value[fieldPath] = [].concat(_toConsumableArray(fieldsByPath.value[fieldPath]), [rawField]);\n  }\n\n  function removeFieldFromPath(field, path) {\n    var fieldPath = path;\n    var fieldAtPath = fieldsByPath.value[fieldPath];\n\n    if (!fieldAtPath) {\n      return;\n    } // same field at path\n\n\n    if (!isFieldGroup(fieldAtPath) && field.id === fieldAtPath.id) {\n      delete fieldsByPath.value[fieldPath];\n      return;\n    }\n\n    if (isFieldGroup(fieldAtPath)) {\n      var idx = fieldAtPath.findIndex(function (f) {\n        return f.id === field.id;\n      });\n\n      if (idx === -1) {\n        return;\n      }\n\n      fieldAtPath.splice(idx, 1);\n\n      if (!fieldAtPath.length) {\n        delete fieldsByPath.value[fieldPath];\n      }\n    }\n  }\n\n  function registerField(field) {\n    var fieldPath = unref(field.name);\n    insertFieldAtPath(field, fieldPath);\n\n    if (isRef(field.name)) {\n      // ensures when a field's name was already taken that it preserves its same value\n      // necessary for fields generated by loops\n      watch(field.name, /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(newPath, oldPath) {\n          return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return nextTick();\n\n                case 2:\n                  removeFieldFromPath(field, oldPath);\n                  insertFieldAtPath(field, newPath); // re-validate if either path had errors before\n\n                  if (errors.value[oldPath] || errors.value[newPath]) {\n                    // clear up both paths errors\n                    setFieldError(oldPath, undefined);\n                    validateField(newPath);\n                  } // clean up the old path if no other field is sharing that name\n                  // #3325\n\n\n                  _context8.next = 7;\n                  return nextTick();\n\n                case 7:\n                  if (!fieldExists(oldPath)) {\n                    unsetPath(formValues, oldPath);\n                  }\n\n                case 8:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x18, _x19) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    } // if field already had errors (initial errors) that's not user-set, validate it again to ensure state is correct\n    // the difference being that `initialErrors` will contain the error message while other errors (pre-validated schema) won't have them as initial errors\n    // #3342\n\n\n    var initialErrorMessage = unref(field.errorMessage);\n\n    if (initialErrorMessage && (initialErrors === null || initialErrors === void 0 ? void 0 : initialErrors[fieldPath]) !== initialErrorMessage) {\n      validateField(fieldPath);\n    } // marks the initial error as \"consumed\" so it won't be matched later with same non-initial error\n\n\n    delete initialErrors[fieldPath];\n  }\n\n  function unregisterField(field) {\n    var fieldName = unref(field.name);\n    var fieldInstance = fieldsByPath.value[fieldName];\n    var isGroup = !!fieldInstance && isFieldGroup(fieldInstance);\n    removeFieldFromPath(field, fieldName); // clears a field error on unmounted\n    // we wait till next tick to make sure if the field is completely removed and doesn't have any siblings like checkboxes\n\n    nextTick(function () {\n      var _a;\n\n      var shouldKeepValue = (_a = unref(field.keepValueOnUnmount)) !== null && _a !== void 0 ? _a : unref(keepValuesOnUnmount);\n      var currentGroupValue = getFromPath(formValues, fieldName); // The boolean here is we check if the field still belongs to the same control group with that name\n      // if another group claimed the name, we should avoid handling it since it is no longer the same group\n      // this happens with `v-for` over some checkboxes and field arrays.\n      // also if the group no longer exist we can assume this group was the last one that controlled it\n\n      var isSameGroup = isGroup && (fieldInstance === fieldsByPath.value[fieldName] || !fieldsByPath.value[fieldName]); // group field that still has a dangling value, the field may exist or not after it was removed.\n      // This used to be handled in the useField composable but the form has better context on when it should/not happen.\n      // if it does belong to it that means the group still exists\n      // #3844\n\n      if (isSameGroup && Array.isArray(currentGroupValue) && !shouldKeepValue) {\n        var valueIdx = currentGroupValue.findIndex(function (i) {\n          return isEqual(i, unref(field.checkedValue));\n        });\n\n        if (valueIdx > -1) {\n          var newVal = _toConsumableArray(currentGroupValue);\n\n          newVal.splice(valueIdx, 1);\n          setFieldValue(fieldName, newVal, {\n            force: true\n          });\n        }\n      } // Field was removed entirely, we should unset its path\n      // #3384\n\n\n      if (!fieldExists(fieldName)) {\n        setFieldError(fieldName, undefined); // Checks if the field was configured to be unset during unmount or not\n        // Checks both the form-level config and field-level one\n        // Field has the priority if it is set, otherwise it goes to the form settings\n\n        if (shouldKeepValue) {\n          return;\n        }\n\n        if (isGroup && !isEmptyContainer(getFromPath(formValues, fieldName))) {\n          return;\n        }\n\n        unsetPath(formValues, fieldName);\n      }\n    });\n  }\n\n  function validate(_x20) {\n    return _validate4.apply(this, arguments);\n  }\n\n  function _validate4() {\n    _validate4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(opts) {\n      var validations, results, errors, _iterator4, _step4, validation;\n\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              mutateAllFields(function (f) {\n                return f.meta.validated = true;\n              });\n\n              if (!formCtx.validateSchema) {\n                _context9.next = 3;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", formCtx.validateSchema((opts === null || opts === void 0 ? void 0 : opts.mode) || 'force'));\n\n            case 3:\n              _context9.next = 5;\n              return Promise.all(Object.values(fieldsByPath.value).map(function (field) {\n                var fieldInstance = Array.isArray(field) ? field[0] : field;\n\n                if (!fieldInstance) {\n                  return Promise.resolve({\n                    key: '',\n                    valid: true,\n                    errors: []\n                  });\n                }\n\n                return fieldInstance.validate(opts).then(function (result) {\n                  return {\n                    key: unref(fieldInstance.name),\n                    valid: result.valid,\n                    errors: result.errors\n                  };\n                });\n              }));\n\n            case 5:\n              validations = _context9.sent;\n              results = {};\n              errors = {};\n              _iterator4 = _createForOfIteratorHelper(validations);\n\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  validation = _step4.value;\n                  results[validation.key] = {\n                    valid: validation.valid,\n                    errors: validation.errors\n                  };\n\n                  if (validation.errors.length) {\n                    errors[validation.key] = validation.errors[0];\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n\n              return _context9.abrupt(\"return\", {\n                valid: validations.every(function (r) {\n                  return r.valid;\n                }),\n                results: results,\n                errors: errors\n              });\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    return _validate4.apply(this, arguments);\n  }\n\n  function validateField(_x21) {\n    return _validateField.apply(this, arguments);\n  }\n\n  function _validateField() {\n    _validateField = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(field) {\n      var fieldInstance;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              fieldInstance = fieldsByPath.value[field];\n\n              if (fieldInstance) {\n                _context10.next = 4;\n                break;\n              }\n\n              warn$1(\"field with name \".concat(field, \" was not found\"));\n              return _context10.abrupt(\"return\", Promise.resolve({\n                errors: [],\n                valid: true\n              }));\n\n            case 4:\n              if (!Array.isArray(fieldInstance)) {\n                _context10.next = 6;\n                break;\n              }\n\n              return _context10.abrupt(\"return\", fieldInstance.map(function (f) {\n                return f.validate();\n              })[0]);\n\n            case 6:\n              return _context10.abrupt(\"return\", fieldInstance.validate());\n\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _validateField.apply(this, arguments);\n  }\n\n  function unsetInitialValue(path) {\n    unsetPath(initialValues.value, path);\n  }\n  /**\r\n   * Sneaky function to set initial field values\r\n   */\n\n\n  function stageInitialValue(path, value) {\n    var updateOriginal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    setInPath(formValues, path, value);\n    setFieldInitialValue(path, value);\n\n    if (updateOriginal && !(opts === null || opts === void 0 ? void 0 : opts.initialValues)) {\n      setInPath(originalInitialValues.value, path, klona(value));\n    }\n  }\n\n  function setFieldInitialValue(path, value) {\n    setInPath(initialValues.value, path, klona(value));\n  }\n\n  function _validateSchema() {\n    return _validateSchema2.apply(this, arguments);\n  }\n\n  function _validateSchema2() {\n    _validateSchema2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n      var schemaValue, formResult;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              schemaValue = unref(schema);\n\n              if (schemaValue) {\n                _context11.next = 3;\n                break;\n              }\n\n              return _context11.abrupt(\"return\", {\n                valid: true,\n                results: {},\n                errors: {}\n              });\n\n            case 3:\n              if (!isYupValidator(schemaValue)) {\n                _context11.next = 9;\n                break;\n              }\n\n              _context11.next = 6;\n              return validateYupSchema(schemaValue, formValues);\n\n            case 6:\n              _context11.t0 = _context11.sent;\n              _context11.next = 12;\n              break;\n\n            case 9:\n              _context11.next = 11;\n              return validateObjectSchema(schemaValue, formValues, {\n                names: fieldNames.value,\n                bailsMap: fieldBailsMap.value\n              });\n\n            case 11:\n              _context11.t0 = _context11.sent;\n\n            case 12:\n              formResult = _context11.t0;\n              return _context11.abrupt(\"return\", formResult);\n\n            case 14:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n    return _validateSchema2.apply(this, arguments);\n  }\n\n  var submitForm = handleSubmit(function (_, _ref11) {\n    var evt = _ref11.evt;\n\n    if (isFormSubmitEvent(evt)) {\n      evt.target.submit();\n    }\n  }); // Trigger initial validation\n\n  onMounted(function () {\n    if (opts === null || opts === void 0 ? void 0 : opts.initialErrors) {\n      setErrors(opts.initialErrors);\n    }\n\n    if (opts === null || opts === void 0 ? void 0 : opts.initialTouched) {\n      setTouched(opts.initialTouched);\n    } // if validate on mount was enabled\n\n\n    if (opts === null || opts === void 0 ? void 0 : opts.validateOnMount) {\n      validate();\n      return;\n    } // otherwise run initial silent validation through schema if available\n    // the useField should skip their own silent validation if a yup schema is present\n\n\n    if (formCtx.validateSchema) {\n      formCtx.validateSchema('silent');\n    }\n  });\n\n  if (isRef(schema)) {\n    watch(schema, function () {\n      var _a;\n\n      (_a = formCtx.validateSchema) === null || _a === void 0 ? void 0 : _a.call(formCtx, 'validated-only');\n    });\n  } // Provide injections\n\n\n  provide(FormContextKey, formCtx);\n\n  if (process.env.NODE_ENV !== 'production') {\n    registerFormWithDevTools(formCtx);\n    watch(function () {\n      return Object.assign(Object.assign({\n        errors: errorBag.value\n      }, meta.value), {\n        values: formValues,\n        isSubmitting: isSubmitting.value,\n        submitCount: submitCount.value\n      });\n    }, refreshInspector, {\n      deep: true\n    });\n  }\n\n  return Object.assign(Object.assign({}, formCtx), {\n    handleReset: function handleReset() {\n      return resetForm();\n    },\n    submitForm: submitForm\n  });\n}\n/**\r\n * Manages form meta aggregation\r\n */\n\n\nfunction useFormMeta(fieldsByPath, currentValues, initialValues, errors) {\n  var MERGE_STRATEGIES = {\n    touched: 'some',\n    pending: 'some',\n    valid: 'every'\n  };\n  var isDirty = computed(function () {\n    return !isEqual(currentValues, unref(initialValues));\n  });\n\n  function calculateFlags() {\n    var fields = Object.values(fieldsByPath.value).flat(1).filter(Boolean);\n    return keysOf(MERGE_STRATEGIES).reduce(function (acc, flag) {\n      var mergeMethod = MERGE_STRATEGIES[flag];\n      acc[flag] = fields[mergeMethod](function (field) {\n        return field.meta[flag];\n      });\n      return acc;\n    }, {});\n  }\n\n  var flags = reactive(calculateFlags());\n  watchEffect(function () {\n    var value = calculateFlags();\n    flags.touched = value.touched;\n    flags.valid = value.valid;\n    flags.pending = value.pending;\n  });\n  return computed(function () {\n    return Object.assign(Object.assign({\n      initialValues: unref(initialValues)\n    }, flags), {\n      valid: flags.valid && !keysOf(errors.value).length,\n      dirty: isDirty.value\n    });\n  });\n}\n/**\r\n * Manages the initial values prop\r\n */\n\n\nfunction useFormInitialValues(fields, formValues, providedValues) {\n  // these are the mutable initial values as the fields are mounted/unmounted\n  var initialValues = ref(klona(unref(providedValues)) || {}); // these are the original initial value as provided by the user initially, they don't keep track of conditional fields\n  // this is important because some conditional fields will overwrite the initial values for other fields who had the same name\n  // like array fields, any push/insert operation will overwrite the initial values because they \"create new fields\"\n  // so these are the values that the reset function should use\n  // these only change when the user explicitly chanegs the initial values or when the user resets them with new values.\n\n  var originalInitialValues = ref(klona(unref(providedValues)) || {});\n\n  function setInitialValues(values) {\n    var updateFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    initialValues.value = klona(values);\n    originalInitialValues.value = klona(values);\n\n    if (!updateFields) {\n      return;\n    } // update the pristine non-touched fields\n    // those are excluded because it's unlikely you want to change the form values using initial values\n    // we mostly watch them for API population or newly inserted fields\n    // if the user API is taking too much time before user interaction they should consider disabling or hiding their inputs until the values are ready\n\n\n    keysOf(fields.value).forEach(function (fieldPath) {\n      var field = fields.value[fieldPath];\n      var wasTouched = Array.isArray(field) ? field.some(function (f) {\n        return f.meta.touched;\n      }) : field === null || field === void 0 ? void 0 : field.meta.touched;\n\n      if (!field || wasTouched) {\n        return;\n      }\n\n      var newValue = getFromPath(initialValues.value, fieldPath);\n      setInPath(formValues, fieldPath, klona(newValue));\n    });\n  }\n\n  if (isRef(providedValues)) {\n    watch(providedValues, function (value) {\n      setInitialValues(value, true);\n    }, {\n      deep: true\n    });\n  }\n\n  return {\n    initialValues: initialValues,\n    originalInitialValues: originalInitialValues,\n    setInitialValues: setInitialValues\n  };\n}\n\nfunction useErrorBag(initialErrors) {\n  var errorBag = ref({});\n\n  function normalizeErrorItem(message) {\n    return Array.isArray(message) ? message : message ? [message] : [];\n  }\n  /**\r\n   * Manually sets an error message on a specific field\r\n   */\n\n\n  function setFieldErrorBag(field, message) {\n    if (!message) {\n      delete errorBag.value[field];\n      return;\n    }\n\n    errorBag.value[field] = normalizeErrorItem(message);\n  }\n  /**\r\n   * Sets errors for the fields specified in the object\r\n   */\n\n\n  function setErrorBag(fields) {\n    errorBag.value = keysOf(fields).reduce(function (acc, key) {\n      var message = fields[key];\n\n      if (message) {\n        acc[key] = normalizeErrorItem(message);\n      }\n\n      return acc;\n    }, {});\n  }\n\n  if (initialErrors) {\n    setErrorBag(initialErrors);\n  }\n\n  return {\n    errorBag: errorBag,\n    setErrorBag: setErrorBag,\n    setFieldErrorBag: setFieldErrorBag\n  };\n}\n\nvar FormImpl = defineComponent({\n  name: 'Form',\n  inheritAttrs: false,\n  props: {\n    as: {\n      type: String,\n      \"default\": 'form'\n    },\n    validationSchema: {\n      type: Object,\n      \"default\": undefined\n    },\n    initialValues: {\n      type: Object,\n      \"default\": undefined\n    },\n    initialErrors: {\n      type: Object,\n      \"default\": undefined\n    },\n    initialTouched: {\n      type: Object,\n      \"default\": undefined\n    },\n    validateOnMount: {\n      type: Boolean,\n      \"default\": false\n    },\n    onSubmit: {\n      type: Function,\n      \"default\": undefined\n    },\n    onInvalidSubmit: {\n      type: Function,\n      \"default\": undefined\n    },\n    keepValues: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  setup: function setup(props, ctx) {\n    var initialValues = toRef(props, 'initialValues');\n    var validationSchema = toRef(props, 'validationSchema');\n    var keepValues = toRef(props, 'keepValues');\n\n    var _useForm = useForm({\n      validationSchema: validationSchema.value ? validationSchema : undefined,\n      initialValues: initialValues,\n      initialErrors: props.initialErrors,\n      initialTouched: props.initialTouched,\n      validateOnMount: props.validateOnMount,\n      keepValuesOnUnmount: keepValues\n    }),\n        errors = _useForm.errors,\n        values = _useForm.values,\n        meta = _useForm.meta,\n        isSubmitting = _useForm.isSubmitting,\n        submitCount = _useForm.submitCount,\n        controlledValues = _useForm.controlledValues,\n        validate = _useForm.validate,\n        validateField = _useForm.validateField,\n        handleReset = _useForm.handleReset,\n        resetForm = _useForm.resetForm,\n        handleSubmit = _useForm.handleSubmit,\n        setErrors = _useForm.setErrors,\n        setFieldError = _useForm.setFieldError,\n        setFieldValue = _useForm.setFieldValue,\n        setValues = _useForm.setValues,\n        setFieldTouched = _useForm.setFieldTouched,\n        setTouched = _useForm.setTouched;\n\n    var submitForm = handleSubmit(function (_, _ref12) {\n      var evt = _ref12.evt;\n\n      if (isFormSubmitEvent(evt)) {\n        evt.target.submit();\n      }\n    }, props.onInvalidSubmit);\n    var onSubmit = props.onSubmit ? handleSubmit(props.onSubmit, props.onInvalidSubmit) : submitForm;\n\n    function handleFormReset(e) {\n      if (isEvent(e)) {\n        // Prevent default form reset behavior\n        e.preventDefault();\n      }\n\n      handleReset();\n\n      if (typeof ctx.attrs.onReset === 'function') {\n        ctx.attrs.onReset();\n      }\n    }\n\n    function handleScopedSlotSubmit(evt, onSubmit) {\n      var onSuccess = typeof evt === 'function' && !onSubmit ? evt : onSubmit;\n      return handleSubmit(onSuccess, props.onInvalidSubmit)(evt);\n    }\n\n    function slotProps() {\n      return {\n        meta: meta.value,\n        errors: errors.value,\n        values: values,\n        isSubmitting: isSubmitting.value,\n        submitCount: submitCount.value,\n        controlledValues: controlledValues.value,\n        validate: validate,\n        validateField: validateField,\n        handleSubmit: handleScopedSlotSubmit,\n        handleReset: handleReset,\n        submitForm: submitForm,\n        setErrors: setErrors,\n        setFieldError: setFieldError,\n        setFieldValue: setFieldValue,\n        setValues: setValues,\n        setFieldTouched: setFieldTouched,\n        setTouched: setTouched,\n        resetForm: resetForm\n      };\n    } // expose these functions and methods as part of public API\n\n\n    ctx.expose({\n      setFieldError: setFieldError,\n      setErrors: setErrors,\n      setFieldValue: setFieldValue,\n      setValues: setValues,\n      setFieldTouched: setFieldTouched,\n      setTouched: setTouched,\n      resetForm: resetForm,\n      validate: validate,\n      validateField: validateField\n    });\n    return function renderForm() {\n      // avoid resolving the form component as itself\n      var tag = props.as === 'form' ? props.as : resolveDynamicComponent(props.as);\n      var children = normalizeChildren(tag, ctx, slotProps);\n\n      if (!props.as) {\n        return children;\n      } // Attributes to add on a native `form` tag\n\n\n      var formAttrs = props.as === 'form' ? {\n        // Disables native validation as vee-validate will handle it.\n        novalidate: true\n      } : {};\n      return h(tag, Object.assign(Object.assign(Object.assign({}, formAttrs), ctx.attrs), {\n        onSubmit: onSubmit,\n        onReset: handleFormReset\n      }), children);\n    };\n  }\n});\nvar Form = FormImpl;\n\nfunction useFieldArray(arrayPath) {\n  var form = injectWithSelf(FormContextKey, undefined);\n  var fields = ref([]); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n  var noOp = function noOp() {};\n\n  var noOpApi = {\n    fields: fields,\n    remove: noOp,\n    push: noOp,\n    swap: noOp,\n    insert: noOp,\n    update: noOp,\n    replace: noOp,\n    prepend: noOp,\n    move: noOp\n  };\n\n  if (!form) {\n    warn('FieldArray requires being a child of `<Form/>` or `useForm` being called before it. Array fields may not work correctly');\n    return noOpApi;\n  }\n\n  if (!unref(arrayPath)) {\n    warn('FieldArray requires a field path to be provided, did you forget to pass the `name` prop?');\n    return noOpApi;\n  }\n\n  var alreadyExists = form.fieldArrays.find(function (a) {\n    return unref(a.path) === unref(arrayPath);\n  });\n\n  if (alreadyExists) {\n    return alreadyExists;\n  }\n\n  var entryCounter = 0;\n\n  function initFields() {\n    var currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []) || [];\n    fields.value = currentValues.map(createEntry);\n    updateEntryFlags();\n  }\n\n  initFields();\n\n  function updateEntryFlags() {\n    var fieldsLength = fields.value.length;\n\n    for (var i = 0; i < fieldsLength; i++) {\n      var entry = fields.value[i];\n      entry.isFirst = i === 0;\n      entry.isLast = i === fieldsLength - 1;\n    }\n  }\n\n  function createEntry(value) {\n    var key = entryCounter++;\n    var entry = {\n      key: key,\n      value: computed({\n        get: function get() {\n          var currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []) || [];\n          var idx = fields.value.findIndex(function (e) {\n            return e.key === key;\n          });\n          return idx === -1 ? value : currentValues[idx];\n        },\n        set: function set(value) {\n          var idx = fields.value.findIndex(function (e) {\n            return e.key === key;\n          });\n\n          if (idx === -1) {\n            warn(\"Attempting to update a non-existent array item\");\n            return;\n          }\n\n          update(idx, value);\n        }\n      }),\n      isFirst: false,\n      isLast: false\n    };\n    return entry;\n  }\n\n  function remove(idx) {\n    var pathName = unref(arrayPath);\n    var pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\n\n    if (!pathValue || !Array.isArray(pathValue)) {\n      return;\n    }\n\n    var newValue = _toConsumableArray(pathValue);\n\n    newValue.splice(idx, 1);\n    form === null || form === void 0 ? void 0 : form.unsetInitialValue(pathName + \"[\".concat(idx, \"]\"));\n    form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\n    fields.value.splice(idx, 1);\n    updateEntryFlags();\n  }\n\n  function push(value) {\n    var pathName = unref(arrayPath);\n    var pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\n    var normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\n\n    if (!Array.isArray(normalizedPathValue)) {\n      return;\n    }\n\n    var newValue = _toConsumableArray(normalizedPathValue);\n\n    newValue.push(value);\n    form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + \"[\".concat(newValue.length - 1, \"]\"), value);\n    form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\n    fields.value.push(createEntry(value));\n    updateEntryFlags();\n  }\n\n  function swap(indexA, indexB) {\n    var pathName = unref(arrayPath);\n    var pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\n\n    if (!Array.isArray(pathValue) || !(indexA in pathValue) || !(indexB in pathValue)) {\n      return;\n    }\n\n    var newValue = _toConsumableArray(pathValue);\n\n    var newFields = _toConsumableArray(fields.value); // the old switcheroo\n\n\n    var temp = newValue[indexA];\n    newValue[indexA] = newValue[indexB];\n    newValue[indexB] = temp;\n    var tempEntry = newFields[indexA];\n    newFields[indexA] = newFields[indexB];\n    newFields[indexB] = tempEntry;\n    form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\n    fields.value = newFields;\n    updateEntryFlags();\n  }\n\n  function insert(idx, value) {\n    var pathName = unref(arrayPath);\n    var pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\n\n    if (!Array.isArray(pathValue) || pathValue.length < idx) {\n      return;\n    }\n\n    var newValue = _toConsumableArray(pathValue);\n\n    var newFields = _toConsumableArray(fields.value);\n\n    newValue.splice(idx, 0, value);\n    newFields.splice(idx, 0, createEntry(value));\n    form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\n    fields.value = newFields;\n    updateEntryFlags();\n  }\n\n  function replace(arr) {\n    var pathName = unref(arrayPath);\n    form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, arr);\n    initFields();\n  }\n\n  function update(idx, value) {\n    var pathName = unref(arrayPath);\n    var pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\n\n    if (!Array.isArray(pathValue) || pathValue.length - 1 < idx) {\n      return;\n    }\n\n    form === null || form === void 0 ? void 0 : form.setFieldValue(\"\".concat(pathName, \"[\").concat(idx, \"]\"), value);\n  }\n\n  function prepend(value) {\n    var pathName = unref(arrayPath);\n    var pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\n    var normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\n\n    if (!Array.isArray(normalizedPathValue)) {\n      return;\n    }\n\n    var newValue = [value].concat(_toConsumableArray(normalizedPathValue));\n    form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + \"[\".concat(newValue.length - 1, \"]\"), value);\n    form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\n    fields.value.unshift(createEntry(value));\n    updateEntryFlags();\n  }\n\n  function move(oldIdx, newIdx) {\n    var pathName = unref(arrayPath);\n    var pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\n    var newValue = isNullOrUndefined(pathValue) ? [] : _toConsumableArray(pathValue);\n\n    if (!Array.isArray(pathValue) || !(oldIdx in pathValue) || !(newIdx in pathValue)) {\n      return;\n    }\n\n    var newFields = _toConsumableArray(fields.value);\n\n    var movedItem = newFields[oldIdx];\n    newFields.splice(oldIdx, 1);\n    newFields.splice(newIdx, 0, movedItem);\n    var movedValue = newValue[oldIdx];\n    newValue.splice(oldIdx, 1);\n    newValue.splice(newIdx, 0, movedValue);\n    form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\n    fields.value = newFields;\n    updateEntryFlags();\n  }\n\n  var fieldArrayCtx = {\n    fields: fields,\n    remove: remove,\n    push: push,\n    swap: swap,\n    insert: insert,\n    update: update,\n    replace: replace,\n    prepend: prepend,\n    move: move\n  };\n  form.fieldArrays.push(Object.assign({\n    path: arrayPath,\n    reset: initFields\n  }, fieldArrayCtx));\n  onBeforeUnmount(function () {\n    var idx = form.fieldArrays.findIndex(function (i) {\n      return unref(i.path) === unref(arrayPath);\n    });\n\n    if (idx >= 0) {\n      form.fieldArrays.splice(idx, 1);\n    }\n  });\n  return fieldArrayCtx;\n}\n\nvar FieldArrayImpl = defineComponent({\n  name: 'FieldArray',\n  inheritAttrs: false,\n  props: {\n    name: {\n      type: String,\n      required: true\n    }\n  },\n  setup: function setup(props, ctx) {\n    var _useFieldArray = useFieldArray(toRef(props, 'name')),\n        push = _useFieldArray.push,\n        remove = _useFieldArray.remove,\n        swap = _useFieldArray.swap,\n        insert = _useFieldArray.insert,\n        replace = _useFieldArray.replace,\n        update = _useFieldArray.update,\n        prepend = _useFieldArray.prepend,\n        move = _useFieldArray.move,\n        fields = _useFieldArray.fields;\n\n    function slotProps() {\n      return {\n        fields: fields.value,\n        push: push,\n        remove: remove,\n        swap: swap,\n        insert: insert,\n        update: update,\n        replace: replace,\n        prepend: prepend,\n        move: move\n      };\n    }\n\n    ctx.expose({\n      push: push,\n      remove: remove,\n      swap: swap,\n      insert: insert,\n      update: update,\n      replace: replace,\n      prepend: prepend,\n      move: move\n    });\n    return function () {\n      var children = normalizeChildren(undefined, ctx, slotProps);\n      return children;\n    };\n  }\n});\nvar FieldArray = FieldArrayImpl;\nvar ErrorMessageImpl = defineComponent({\n  name: 'ErrorMessage',\n  props: {\n    as: {\n      type: String,\n      \"default\": undefined\n    },\n    name: {\n      type: String,\n      required: true\n    }\n  },\n  setup: function setup(props, ctx) {\n    var form = inject(FormContextKey, undefined);\n    var message = computed(function () {\n      return form === null || form === void 0 ? void 0 : form.errors.value[props.name];\n    });\n\n    function slotProps() {\n      return {\n        message: message.value\n      };\n    }\n\n    return function () {\n      // Renders nothing if there are no messages\n      if (!message.value) {\n        return undefined;\n      }\n\n      var tag = props.as ? resolveDynamicComponent(props.as) : props.as;\n      var children = normalizeChildren(tag, ctx, slotProps);\n      var attrs = Object.assign({\n        role: 'alert'\n      }, ctx.attrs); // If no tag was specified and there are children\n      // render the slot as is without wrapping it\n\n      if (!tag && (Array.isArray(children) || !children) && (children === null || children === void 0 ? void 0 : children.length)) {\n        return children;\n      } // If no children in slot\n      // render whatever specified and fallback to a <span> with the message in it's contents\n\n\n      if ((Array.isArray(children) || !children) && !(children === null || children === void 0 ? void 0 : children.length)) {\n        return h(tag || 'span', attrs, message.value);\n      }\n\n      return h(tag, attrs, children);\n    };\n  }\n});\nvar ErrorMessage = ErrorMessageImpl;\n\nfunction useResetForm() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return function resetForm(state) {\n    if (!form) {\n      return;\n    }\n\n    return form.resetForm(state);\n  };\n}\n/**\r\n * If a field is dirty or not\r\n */\n\n\nfunction useIsFieldDirty(path) {\n  var form = injectWithSelf(FormContextKey);\n  var field = path ? undefined : inject(FieldContextKey);\n  return computed(function () {\n    if (path) {\n      field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\n    }\n\n    if (!field) {\n      warn(\"field with name \".concat(unref(path), \" was not found\"));\n      return false;\n    }\n\n    return field.meta.dirty;\n  });\n}\n/**\r\n * If a field is touched or not\r\n */\n\n\nfunction useIsFieldTouched(path) {\n  var form = injectWithSelf(FormContextKey);\n  var field = path ? undefined : inject(FieldContextKey);\n  return computed(function () {\n    if (path) {\n      field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\n    }\n\n    if (!field) {\n      warn(\"field with name \".concat(unref(path), \" was not found\"));\n      return false;\n    }\n\n    return field.meta.touched;\n  });\n}\n/**\r\n * If a field is validated and is valid\r\n */\n\n\nfunction useIsFieldValid(path) {\n  var form = injectWithSelf(FormContextKey);\n  var field = path ? undefined : inject(FieldContextKey);\n  return computed(function () {\n    if (path) {\n      field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\n    }\n\n    if (!field) {\n      warn(\"field with name \".concat(unref(path), \" was not found\"));\n      return false;\n    }\n\n    return field.meta.valid;\n  });\n}\n/**\r\n * If the form is submitting or not\r\n */\n\n\nfunction useIsSubmitting() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return computed(function () {\n    var _a;\n\n    return (_a = form === null || form === void 0 ? void 0 : form.isSubmitting.value) !== null && _a !== void 0 ? _a : false;\n  });\n}\n/**\r\n * Validates a single field\r\n */\n\n\nfunction useValidateField(path) {\n  var form = injectWithSelf(FormContextKey);\n  var field = path ? undefined : inject(FieldContextKey);\n  return function validateField() {\n    if (path) {\n      field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\n    }\n\n    if (!field) {\n      warn(\"field with name \".concat(unref(path), \" was not found\"));\n      return Promise.resolve({\n        errors: [],\n        valid: true\n      });\n    }\n\n    return field.validate();\n  };\n}\n/**\r\n * If the form is dirty or not\r\n */\n\n\nfunction useIsFormDirty() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return computed(function () {\n    var _a;\n\n    return (_a = form === null || form === void 0 ? void 0 : form.meta.value.dirty) !== null && _a !== void 0 ? _a : false;\n  });\n}\n/**\r\n * If the form is touched or not\r\n */\n\n\nfunction useIsFormTouched() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return computed(function () {\n    var _a;\n\n    return (_a = form === null || form === void 0 ? void 0 : form.meta.value.touched) !== null && _a !== void 0 ? _a : false;\n  });\n}\n/**\r\n * If the form has been validated and is valid\r\n */\n\n\nfunction useIsFormValid() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return computed(function () {\n    var _a;\n\n    return (_a = form === null || form === void 0 ? void 0 : form.meta.value.valid) !== null && _a !== void 0 ? _a : false;\n  });\n}\n/**\r\n * Validate multiple fields\r\n */\n\n\nfunction useValidateForm() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return function validateField() {\n    if (!form) {\n      return Promise.resolve({\n        results: {},\n        errors: {},\n        valid: true\n      });\n    }\n\n    return form.validate();\n  };\n}\n/**\r\n * The number of form's submission count\r\n */\n\n\nfunction useSubmitCount() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return computed(function () {\n    var _a;\n\n    return (_a = form === null || form === void 0 ? void 0 : form.submitCount.value) !== null && _a !== void 0 ? _a : 0;\n  });\n}\n/**\r\n * Gives access to a field's current value\r\n */\n\n\nfunction useFieldValue(path) {\n  var form = injectWithSelf(FormContextKey); // We don't want to use self injected context as it doesn't make sense\n\n  var field = path ? undefined : inject(FieldContextKey);\n  return computed(function () {\n    if (path) {\n      return getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(path));\n    }\n\n    return unref(field === null || field === void 0 ? void 0 : field.value);\n  });\n}\n/**\r\n * Gives access to a form's values\r\n */\n\n\nfunction useFormValues() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return computed(function () {\n    return (form === null || form === void 0 ? void 0 : form.values) || {};\n  });\n}\n/**\r\n * Gives access to all form errors\r\n */\n\n\nfunction useFormErrors() {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  return computed(function () {\n    return (form === null || form === void 0 ? void 0 : form.errors.value) || {};\n  });\n}\n/**\r\n * Gives access to a single field error\r\n */\n\n\nfunction useFieldError(path) {\n  var form = injectWithSelf(FormContextKey); // We don't want to use self injected context as it doesn't make sense\n\n  var field = path ? undefined : inject(FieldContextKey);\n  return computed(function () {\n    if (path) {\n      return form === null || form === void 0 ? void 0 : form.errors.value[unref(path)];\n    }\n\n    return field === null || field === void 0 ? void 0 : field.errorMessage.value;\n  });\n}\n\nfunction useSubmitForm(cb) {\n  var form = injectWithSelf(FormContextKey);\n\n  if (!form) {\n    warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\n  }\n\n  var onSubmit = form ? form.handleSubmit(cb) : undefined;\n  return function submitForm(e) {\n    if (!onSubmit) {\n      return;\n    }\n\n    return onSubmit(e);\n  };\n}\n\nexport { ErrorMessage, Field, FieldArray, FieldContextKey, Form, FormContextKey, IS_ABSENT, configure, defineRule, useField, useFieldArray, useFieldError, useFieldValue, useForm, useFormErrors, useFormValues, useIsFieldDirty, useIsFieldTouched, useIsFieldValid, useIsFormDirty, useIsFormTouched, useIsFormValid, useIsSubmitting, useResetForm, useSubmitCount, useSubmitForm, useValidateField, useValidateForm, validate };","map":{"version":3,"names":["getCurrentInstance","inject","warn","warn$1","ref","unref","computed","reactive","watch","onUnmounted","nextTick","onMounted","provide","isRef","onBeforeUnmount","defineComponent","toRef","resolveDynamicComponent","h","watchEffect","markRaw","setupDevtoolsPlugin","isCallable","fn","isNullOrUndefined","value","undefined","isObject","obj","Array","isArray","isIndex","Number","toNumber","n","parseFloat","isNaN","RULES","defineRule","id","validator","guardExtend","resolveRule","Error","FormContextKey","Symbol","FieldContextKey","IS_ABSENT","isClient","window","isLocator","__locatorRef","isYupValidator","validate","hasCheckedAttr","type","isContainerValue","isEmptyContainer","length","Object","keys","isNotNestedPath","path","test","isNativeMultiSelect","el","isNativeSelect","multiple","tagName","isNativeMultiSelectNode","tag","attrs","hasTruthyBindingValue","includes","shouldHaveValueBinding","isFormSubmitEvent","evt","isEvent","target","Event","srcElement","isPropPresent","prop","isEqual","a","b","constructor","i","Map","size","entries","has","get","isFile","name","lastModified","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","key","File","fastDeepEqual","equal","cleanupNonNestedPath","replace","getFromPath","object","fallback","resolvedValue","split","filter","Boolean","reduce","acc","propKey","setInPath","unset","splice","unsetPath","pathValues","map","_","idx","slice","join","keysOf","record","injectWithSelf","symbol","def","vm","provides","message","normalizeField","field","resolveNextCheckboxValue","currentValue","checkedValue","uncheckedValue","newVal","findIndex","v","push","throttle","func","limit","inThrottle","lastResult","context","setTimeout","args","apply","debounceAsync","inner","ms","timer","resolves","clearTimeout","result","forEach","r","Promise","resolve","applyModelModifiers","modifiers","number","withLatest","onDone","latestRun","pending","runLatest","normalizeChildren","slotProps","slots","_a","_b","getBoundValue","hasValueBinding","_value","normalizeEventValue","input","files","from","options","opt","selected","disabled","selectedOption","find","normalizeRules","rules","defineProperty","writable","enumerable","configurable","_$$isNormalized","prev","curr","params","normalizeParams","buildParams","rule","parsedRule","parseRule","provided","mapValueToLocator","createLocator","locator","crossTable","val","extractLocators","DEFAULT_CONFIG","generateMessage","bails","validateOnBlur","validateOnChange","validateOnInput","validateOnModelUpdate","currentConfig","assign","getConfig","setConfig","newConf","configure","shouldBail","formData","values","_validate","errors","valid","validateFieldWithYup","ctx","form","pipeline","isValid","_generateFieldError","normalizedContext","rulesKeys","_test","error","opts","abortEarly","then","err","fillTargetValues","fieldCtx","normalize","param","validateYupSchema","schema","errorObjects","results","messages","validateObjectSchema","paths","validations","names","_c","bailsMap","fieldResult","isAllValid","all","validationResults","set","klona","x","k","list","tmp","str","create","__proto__","add","Date","buffer","getOwnPropertySymbols","getOwnPropertyDescriptor","getOwnPropertyNames","ID_COUNTER","useFieldState","init","_useFieldValue","modelValue","initialValue","setInitialValue","_useFieldErrors","errorMessage","setErrors","meta","_useFieldMeta","MAX_SAFE_INTEGER","setState","state","touched","modelRef","resolveInitialValue","initialValues","stageInitialValue","setFieldValue","validated","dirty","immediate","flush","normalizeErrors","errorBag","setFieldErrorBag","installDevtoolsPlugin","app","process","env","NODE_ENV","label","packageName","homepage","logo","setupApiHooks","DEVTOOLS_FORMS","DEVTOOLS_FIELDS","API","refreshInspector","sendInspectorState","INSPECTOR_ID","sendInspectorTree","registerFormWithDevTools","appContext","formId","_vm","registerSingleFieldWithDevtools","COLORS","success","unknown","white","black","blue","purple","orange","gray","SELECTED_NODE","api","addInspector","icon","noSelectionText","actions","tooltip","action","console","log","resetField","resetForm","on","getInspectorTree","payload","inspectorId","forms","fields","rootNodes","mapFormForDevtoolsInspector","mapFieldForDevtoolsInspector","getInspectorState","currentTab","decodeNodeId","nodeId","buildFormState","buildFieldState","getTagTheme","textColor","bgColor","formTreeNodes","fieldsByPath","fieldInstance","buildFormTree","tree","pop","children","c","String","encodeNodeId","tags","backgroundColor","isGroup","fieldItem","encodeIndex","fieldPath","fieldGroup","indexOf","idObject","f","ff","btoa","JSON","stringify","parse","atob","isSubmitting","submitCount","fieldOrForm","useField","useCheckboxField","_useField","normalizeOptions","validateOnMount","validateOnValueUpdate","controlled","keepValueOnUnmount","modelPropName","syncVModel","controlForm","injectedForm","markedForRemoval","useVModel","handleChange","handleBlur","normalizedRules","rulesValue","extractRuleFromSchema","validateCurrentValue","mode","validateSchema","validateWithStateMutation","validateValidStateOnly","validate$1","e","shouldValidate","newValue","setTouched","isTouched","unwatchValue","lastWatchedValue","watchValue","oldVal","validateFn","deep","setValue","handleReset","oldValue","register","unregister","dependencies","rulesVal","deps","dep","depAcc","depName","depValue","oldDeps","defaults","valueProp","standalone","fieldName","patchCheckboxApi","checked","checkedVal","handleCheckboxChange","propName","emitName","props","getCurrentModelValue","emit","propValue","modelModifiers","FieldImpl","inheritAttrs","as","required","Function","keepValue","setup","validateField","onChangeHandler","handleChangeWithModel","handleInput","onInputHandler","handleInputWithModel","fieldProps","resolveValidationTriggers","baseOnBlur","onBlur","baseOnInput","onInput","baseOnChange","onChange","resolveTag","expose","reset","_d","Field","FORM_COUNTER","useForm","controlledModelPaths","RESET_LOCK","fieldArrays","formValues","useErrorBag","initialErrors","setErrorBag","bag","getFirstFieldAtPath","fieldOrGroup","fieldExists","fieldNames","fieldBailsMap","keepValuesOnUnmount","useFormInitialValues","originalInitialValues","setInitialValues","useFormMeta","controlledValues","validationSchema","debouncedSilentValidation","_validateSchema","debouncedValidation","formResult","fieldsById","formCtx","currentErrorsPaths","validation","setFieldError","applyFieldMutation","wasValidated","some","makeSubmissionFactory","onlyControlled","submitHandlerFactory","onValidationError","submissionHandler","preventDefault","stopPropagation","setFieldTouched","setValues","returnVal","handleSubmitImpl","handleSubmit","withControlled","registerField","unregisterField","unsetInitialValue","setFieldInitialValue","useFieldModel","isFieldGroup","mutation","mutateAllFields","force","clonedValue","createModel","insertFieldAtPath","rawField","fieldAtPath","removeFieldFromPath","newPath","oldPath","initialErrorMessage","shouldKeepValue","currentGroupValue","isSameGroup","valueIdx","every","updateOriginal","schemaValue","submitForm","submit","initialTouched","currentValues","MERGE_STRATEGIES","isDirty","calculateFlags","flat","flag","mergeMethod","providedValues","updateFields","wasTouched","normalizeErrorItem","FormImpl","onSubmit","onInvalidSubmit","keepValues","handleFormReset","onReset","handleScopedSlotSubmit","onSuccess","renderForm","formAttrs","novalidate","Form","useFieldArray","arrayPath","noOp","noOpApi","remove","swap","insert","update","prepend","move","alreadyExists","entryCounter","initFields","createEntry","updateEntryFlags","fieldsLength","entry","isFirst","isLast","pathName","pathValue","normalizedPathValue","indexA","indexB","newFields","temp","tempEntry","arr","unshift","oldIdx","newIdx","movedItem","movedValue","fieldArrayCtx","FieldArrayImpl","FieldArray","ErrorMessageImpl","role","ErrorMessage","useResetForm","useIsFieldDirty","useIsFieldTouched","useIsFieldValid","useIsSubmitting","useValidateField","useIsFormDirty","useIsFormTouched","useIsFormValid","useValidateForm","useSubmitCount","useFieldValue","useFormValues","useFormErrors","useFieldError","useSubmitForm","cb"],"sources":["/Users/tanachok/Desktop/conBo/Project2/SE331-2022-Project-front-end/node_modules/vee-validate/dist/vee-validate.esm.js"],"sourcesContent":["/**\n  * vee-validate v4.7.0\n  * (c) 2022 Abdelrahman Awad\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, warn as warn$1, ref, unref, computed, reactive, watch, onUnmounted, nextTick, onMounted, provide, isRef, onBeforeUnmount, defineComponent, toRef, resolveDynamicComponent, h, watchEffect, markRaw } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nfunction isCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\r\nfunction isNullOrUndefined(value) {\r\n    return value === null || value === undefined;\r\n}\r\nconst isObject = (obj) => obj !== null && !!obj && typeof obj === 'object' && !Array.isArray(obj);\r\nfunction isIndex(value) {\r\n    return Number(value) >= 0;\r\n}\r\nfunction toNumber(value) {\r\n    const n = parseFloat(value);\r\n    return isNaN(n) ? value : n;\r\n}\n\nconst RULES = {};\r\n/**\r\n * Adds a custom validator to the list of validation rules.\r\n */\r\nfunction defineRule(id, validator) {\r\n    // makes sure new rules are properly formatted.\r\n    guardExtend(id, validator);\r\n    RULES[id] = validator;\r\n}\r\n/**\r\n * Gets an already defined rule\r\n */\r\nfunction resolveRule(id) {\r\n    return RULES[id];\r\n}\r\n/**\r\n * Guards from extension violations.\r\n */\r\nfunction guardExtend(id, validator) {\r\n    if (isCallable(validator)) {\r\n        return;\r\n    }\r\n    throw new Error(`Extension Error: The validator '${id}' must be a function.`);\r\n}\n\nconst FormContextKey = Symbol('vee-validate-form');\r\nconst FieldContextKey = Symbol('vee-validate-field-instance');\r\nconst IS_ABSENT = Symbol('Default empty value');\n\nconst isClient = typeof window !== 'undefined';\r\nfunction isLocator(value) {\r\n    return isCallable(value) && !!value.__locatorRef;\r\n}\r\nfunction isYupValidator(value) {\r\n    return !!value && isCallable(value.validate);\r\n}\r\nfunction hasCheckedAttr(type) {\r\n    return type === 'checkbox' || type === 'radio';\r\n}\r\nfunction isContainerValue(value) {\r\n    return isObject(value) || Array.isArray(value);\r\n}\r\n/**\r\n * True if the value is an empty object or array\r\n */\r\nfunction isEmptyContainer(value) {\r\n    if (Array.isArray(value)) {\r\n        return value.length === 0;\r\n    }\r\n    return isObject(value) && Object.keys(value).length === 0;\r\n}\r\n/**\r\n * Checks if the path opted out of nested fields using `[fieldName]` syntax\r\n */\r\nfunction isNotNestedPath(path) {\r\n    return /^\\[.+\\]$/i.test(path);\r\n}\r\n/**\r\n * Checks if an element is a native HTML5 multi-select input element\r\n */\r\nfunction isNativeMultiSelect(el) {\r\n    return isNativeSelect(el) && el.multiple;\r\n}\r\n/**\r\n * Checks if an element is a native HTML5 select input element\r\n */\r\nfunction isNativeSelect(el) {\r\n    return el.tagName === 'SELECT';\r\n}\r\n/**\r\n * Checks if a tag name with attrs object will render a native multi-select element\r\n */\r\nfunction isNativeMultiSelectNode(tag, attrs) {\r\n    // The falsy value array is the values that Vue won't add the `multiple` prop if it has one of these values\r\n    const hasTruthyBindingValue = ![false, null, undefined, 0].includes(attrs.multiple) && !Number.isNaN(attrs.multiple);\r\n    return tag === 'select' && 'multiple' in attrs && hasTruthyBindingValue;\r\n}\r\n/**\r\n * Checks if a node should have a `:value` binding or not\r\n *\r\n * These nodes should not have a value binding\r\n * For files, because they are not reactive\r\n * For multi-selects because the value binding will reset the value\r\n */\r\nfunction shouldHaveValueBinding(tag, attrs) {\r\n    return !isNativeMultiSelectNode(tag, attrs) && attrs.type !== 'file' && !hasCheckedAttr(attrs.type);\r\n}\r\nfunction isFormSubmitEvent(evt) {\r\n    return isEvent(evt) && evt.target && 'submit' in evt.target;\r\n}\r\nfunction isEvent(evt) {\r\n    if (!evt) {\r\n        return false;\r\n    }\r\n    if (typeof Event !== 'undefined' && isCallable(Event) && evt instanceof Event) {\r\n        return true;\r\n    }\r\n    // this is for IE and Cypress #3161\r\n    /* istanbul ignore next */\r\n    if (evt && evt.srcElement) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isPropPresent(obj, prop) {\r\n    return prop in obj && obj[prop] !== IS_ABSENT;\r\n}\r\n/**\r\n * Compares if two values are the same borrowed from:\r\n * https://github.com/epoberezkin/fast-deep-equal\r\n * We added a case for file matching since `Object.keys` doesn't work with Files.\r\n * */\r\nfunction isEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n        if (a.constructor !== b.constructor)\r\n            return false;\r\n        // eslint-disable-next-line no-var\r\n        var length, i, keys;\r\n        if (Array.isArray(a)) {\r\n            length = a.length;\r\n            // eslint-disable-next-line eqeqeq\r\n            if (length != b.length)\r\n                return false;\r\n            for (i = length; i-- !== 0;)\r\n                if (!isEqual(a[i], b[i]))\r\n                    return false;\r\n            return true;\r\n        }\r\n        if (a instanceof Map && b instanceof Map) {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            for (i of a.entries())\r\n                if (!b.has(i[0]))\r\n                    return false;\r\n            for (i of a.entries())\r\n                if (!isEqual(i[1], b.get(i[0])))\r\n                    return false;\r\n            return true;\r\n        }\r\n        // We added this part for file comparison, arguably a little naive but should work for most cases.\r\n        // #3911\r\n        if (isFile(a) && isFile(b)) {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            if (a.name !== b.name)\r\n                return false;\r\n            if (a.lastModified !== b.lastModified)\r\n                return false;\r\n            if (a.type !== b.type)\r\n                return false;\r\n            return true;\r\n        }\r\n        if (a instanceof Set && b instanceof Set) {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            for (i of a.entries())\r\n                if (!b.has(i[0]))\r\n                    return false;\r\n            return true;\r\n        }\r\n        if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\r\n            length = a.length;\r\n            // eslint-disable-next-line eqeqeq\r\n            if (length != b.length)\r\n                return false;\r\n            for (i = length; i-- !== 0;)\r\n                if (a[i] !== b[i])\r\n                    return false;\r\n            return true;\r\n        }\r\n        if (a.constructor === RegExp)\r\n            return a.source === b.source && a.flags === b.flags;\r\n        if (a.valueOf !== Object.prototype.valueOf)\r\n            return a.valueOf() === b.valueOf();\r\n        if (a.toString !== Object.prototype.toString)\r\n            return a.toString() === b.toString();\r\n        keys = Object.keys(a);\r\n        length = keys.length;\r\n        if (length !== Object.keys(b).length)\r\n            return false;\r\n        for (i = length; i-- !== 0;)\r\n            if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\r\n                return false;\r\n        for (i = length; i-- !== 0;) {\r\n            // eslint-disable-next-line no-var\r\n            var key = keys[i];\r\n            if (!isEqual(a[key], b[key]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    // true if both NaN, false otherwise\r\n    // eslint-disable-next-line no-self-compare\r\n    return a !== a && b !== b;\r\n}\r\nfunction isFile(a) {\r\n    if (!isClient) {\r\n        return false;\r\n    }\r\n    return a instanceof File;\r\n}\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n\nfunction cleanupNonNestedPath(path) {\r\n    if (isNotNestedPath(path)) {\r\n        return path.replace(/\\[|\\]/gi, '');\r\n    }\r\n    return path;\r\n}\r\nfunction getFromPath(object, path, fallback) {\r\n    if (!object) {\r\n        return fallback;\r\n    }\r\n    if (isNotNestedPath(path)) {\r\n        return object[cleanupNonNestedPath(path)];\r\n    }\r\n    const resolvedValue = (path || '')\r\n        .split(/\\.|\\[(\\d+)\\]/)\r\n        .filter(Boolean)\r\n        .reduce((acc, propKey) => {\r\n        if (isContainerValue(acc) && propKey in acc) {\r\n            return acc[propKey];\r\n        }\r\n        return fallback;\r\n    }, object);\r\n    return resolvedValue;\r\n}\r\n/**\r\n * Sets a nested property value in a path, creates the path properties if it doesn't exist\r\n */\r\nfunction setInPath(object, path, value) {\r\n    if (isNotNestedPath(path)) {\r\n        object[cleanupNonNestedPath(path)] = value;\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, set it\r\n        if (i === keys.length - 1) {\r\n            acc[keys[i]] = value;\r\n            return;\r\n        }\r\n        // Key does not exist, create a container for it\r\n        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\r\n            // container can be either an object or an array depending on the next key if it exists\r\n            acc[keys[i]] = isIndex(keys[i + 1]) ? [] : {};\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n}\r\nfunction unset(object, key) {\r\n    if (Array.isArray(object) && isIndex(key)) {\r\n        object.splice(Number(key), 1);\r\n        return;\r\n    }\r\n    if (isObject(object)) {\r\n        delete object[key];\r\n    }\r\n}\r\n/**\r\n * Removes a nested property from object\r\n */\r\nfunction unsetPath(object, path) {\r\n    if (isNotNestedPath(path)) {\r\n        delete object[cleanupNonNestedPath(path)];\r\n        return;\r\n    }\r\n    const keys = path.split(/\\.|\\[(\\d+)\\]/).filter(Boolean);\r\n    let acc = object;\r\n    for (let i = 0; i < keys.length; i++) {\r\n        // Last key, unset it\r\n        if (i === keys.length - 1) {\r\n            unset(acc, keys[i]);\r\n            break;\r\n        }\r\n        // Key does not exist, exit\r\n        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {\r\n            break;\r\n        }\r\n        acc = acc[keys[i]];\r\n    }\r\n    const pathValues = keys.map((_, idx) => {\r\n        return getFromPath(object, keys.slice(0, idx).join('.'));\r\n    });\r\n    for (let i = pathValues.length - 1; i >= 0; i--) {\r\n        if (!isEmptyContainer(pathValues[i])) {\r\n            continue;\r\n        }\r\n        if (i === 0) {\r\n            unset(object, keys[0]);\r\n            continue;\r\n        }\r\n        unset(pathValues[i - 1], keys[i - 1]);\r\n    }\r\n}\r\n/**\r\n * A typed version of Object.keys\r\n */\r\nfunction keysOf(record) {\r\n    return Object.keys(record);\r\n}\r\n// Uses same component provide as its own injections\r\n// Due to changes in https://github.com/vuejs/vue-next/pull/2424\r\nfunction injectWithSelf(symbol, def = undefined) {\r\n    const vm = getCurrentInstance();\r\n    return (vm === null || vm === void 0 ? void 0 : vm.provides[symbol]) || inject(symbol, def);\r\n}\r\nfunction warn(message) {\r\n    warn$1(`[vee-validate]: ${message}`);\r\n}\r\n/**\r\n * Ensures we deal with a singular field value\r\n */\r\nfunction normalizeField(field) {\r\n    if (Array.isArray(field)) {\r\n        return field[0];\r\n    }\r\n    return field;\r\n}\r\nfunction resolveNextCheckboxValue(currentValue, checkedValue, uncheckedValue) {\r\n    if (Array.isArray(currentValue)) {\r\n        const newVal = [...currentValue];\r\n        // Use isEqual since checked object values can possibly fail the equality check #3883\r\n        const idx = newVal.findIndex(v => fastDeepEqual(v, checkedValue));\r\n        idx >= 0 ? newVal.splice(idx, 1) : newVal.push(checkedValue);\r\n        return newVal;\r\n    }\r\n    return fastDeepEqual(currentValue, checkedValue) ? uncheckedValue : checkedValue;\r\n}\r\n/**\r\n * Creates a throttled function that only invokes the provided function (`func`) at most once per within a given number of milliseconds\r\n * (`limit`)\r\n */\r\nfunction throttle(func, limit) {\r\n    let inThrottle;\r\n    let lastResult;\r\n    return function (...args) {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const context = this;\r\n        if (!inThrottle) {\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n            lastResult = func.apply(context, args);\r\n        }\r\n        return lastResult;\r\n    };\r\n}\r\nfunction debounceAsync(inner, ms = 0) {\r\n    let timer = null;\r\n    let resolves = [];\r\n    return function (...args) {\r\n        // Run the function after a certain amount of time\r\n        if (timer) {\r\n            window.clearTimeout(timer);\r\n        }\r\n        timer = window.setTimeout(() => {\r\n            // Get the result of the inner function, then apply it to the resolve function of\r\n            // each promise that has been created since the last time the inner function was run\r\n            const result = inner(...args);\r\n            resolves.forEach(r => r(result));\r\n            resolves = [];\r\n        }, ms);\r\n        return new Promise(resolve => resolves.push(resolve));\r\n    };\r\n}\r\nfunction applyModelModifiers(value, modifiers) {\r\n    if (!isObject(modifiers)) {\r\n        return value;\r\n    }\r\n    if (modifiers.number) {\r\n        return toNumber(value);\r\n    }\r\n    return value;\r\n}\r\nfunction withLatest(fn, onDone) {\r\n    let latestRun;\r\n    return async function runLatest(...args) {\r\n        const pending = fn(...args);\r\n        latestRun = pending;\r\n        const result = await pending;\r\n        if (pending !== latestRun) {\r\n            return result;\r\n        }\r\n        latestRun = undefined;\r\n        onDone(result, args);\r\n        return result;\r\n    };\r\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst normalizeChildren = (tag, context, slotProps) => {\r\n    if (!context.slots.default) {\r\n        return context.slots.default;\r\n    }\r\n    if (typeof tag === 'string' || !tag) {\r\n        return context.slots.default(slotProps());\r\n    }\r\n    return {\r\n        default: () => { var _a, _b; return (_b = (_a = context.slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, slotProps()); },\r\n    };\r\n};\r\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\r\nfunction getBoundValue(el) {\r\n    if (hasValueBinding(el)) {\r\n        return el._value;\r\n    }\r\n    return undefined;\r\n}\r\n/**\r\n * Vue adds a `_value` prop at the moment on the input elements to store the REAL value on them, real values are different than the `value` attribute\r\n * as they do not get casted to strings unlike `el.value` which preserves user-code behavior\r\n */\r\nfunction hasValueBinding(el) {\r\n    return '_value' in el;\r\n}\n\nfunction normalizeEventValue(value) {\r\n    if (!isEvent(value)) {\r\n        return value;\r\n    }\r\n    const input = value.target;\r\n    // Vue sets the current bound value on `_value` prop\r\n    // for checkboxes it it should fetch the value binding type as is (boolean instead of string)\r\n    if (hasCheckedAttr(input.type) && hasValueBinding(input)) {\r\n        return getBoundValue(input);\r\n    }\r\n    if (input.type === 'file' && input.files) {\r\n        const files = Array.from(input.files);\r\n        return input.multiple ? files : files[0];\r\n    }\r\n    if (isNativeMultiSelect(input)) {\r\n        return Array.from(input.options)\r\n            .filter(opt => opt.selected && !opt.disabled)\r\n            .map(getBoundValue);\r\n    }\r\n    // makes sure we get the actual `option` bound value\r\n    // #3440\r\n    if (isNativeSelect(input)) {\r\n        const selectedOption = Array.from(input.options).find(opt => opt.selected);\r\n        return selectedOption ? getBoundValue(selectedOption) : input.value;\r\n    }\r\n    return input.value;\r\n}\n\n/**\r\n * Normalizes the given rules expression.\r\n */\r\nfunction normalizeRules(rules) {\r\n    const acc = {};\r\n    Object.defineProperty(acc, '_$$isNormalized', {\r\n        value: true,\r\n        writable: false,\r\n        enumerable: false,\r\n        configurable: false,\r\n    });\r\n    if (!rules) {\r\n        return acc;\r\n    }\r\n    // Object is already normalized, skip.\r\n    if (isObject(rules) && rules._$$isNormalized) {\r\n        return rules;\r\n    }\r\n    if (isObject(rules)) {\r\n        return Object.keys(rules).reduce((prev, curr) => {\r\n            const params = normalizeParams(rules[curr]);\r\n            if (rules[curr] !== false) {\r\n                prev[curr] = buildParams(params);\r\n            }\r\n            return prev;\r\n        }, acc);\r\n    }\r\n    /* istanbul ignore if */\r\n    if (typeof rules !== 'string') {\r\n        return acc;\r\n    }\r\n    return rules.split('|').reduce((prev, rule) => {\r\n        const parsedRule = parseRule(rule);\r\n        if (!parsedRule.name) {\r\n            return prev;\r\n        }\r\n        prev[parsedRule.name] = buildParams(parsedRule.params);\r\n        return prev;\r\n    }, acc);\r\n}\r\n/**\r\n * Normalizes a rule param.\r\n */\r\nfunction normalizeParams(params) {\r\n    if (params === true) {\r\n        return [];\r\n    }\r\n    if (Array.isArray(params)) {\r\n        return params;\r\n    }\r\n    if (isObject(params)) {\r\n        return params;\r\n    }\r\n    return [params];\r\n}\r\nfunction buildParams(provided) {\r\n    const mapValueToLocator = (value) => {\r\n        // A target param using interpolation\r\n        if (typeof value === 'string' && value[0] === '@') {\r\n            return createLocator(value.slice(1));\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(provided)) {\r\n        return provided.map(mapValueToLocator);\r\n    }\r\n    // #3073\r\n    if (provided instanceof RegExp) {\r\n        return [provided];\r\n    }\r\n    return Object.keys(provided).reduce((prev, key) => {\r\n        prev[key] = mapValueToLocator(provided[key]);\r\n        return prev;\r\n    }, {});\r\n}\r\n/**\r\n * Parses a rule string expression.\r\n */\r\nconst parseRule = (rule) => {\r\n    let params = [];\r\n    const name = rule.split(':')[0];\r\n    if (rule.includes(':')) {\r\n        params = rule.split(':').slice(1).join(':').split(',');\r\n    }\r\n    return { name, params };\r\n};\r\nfunction createLocator(value) {\r\n    const locator = (crossTable) => {\r\n        const val = getFromPath(crossTable, value) || crossTable[value];\r\n        return val;\r\n    };\r\n    locator.__locatorRef = value;\r\n    return locator;\r\n}\r\nfunction extractLocators(params) {\r\n    if (Array.isArray(params)) {\r\n        return params.filter(isLocator);\r\n    }\r\n    return keysOf(params)\r\n        .filter(key => isLocator(params[key]))\r\n        .map(key => params[key]);\r\n}\n\nconst DEFAULT_CONFIG = {\r\n    generateMessage: ({ field }) => `${field} is not valid.`,\r\n    bails: true,\r\n    validateOnBlur: true,\r\n    validateOnChange: true,\r\n    validateOnInput: false,\r\n    validateOnModelUpdate: true,\r\n};\r\nlet currentConfig = Object.assign({}, DEFAULT_CONFIG);\r\nconst getConfig = () => currentConfig;\r\nconst setConfig = (newConf) => {\r\n    currentConfig = Object.assign(Object.assign({}, currentConfig), newConf);\r\n};\r\nconst configure = setConfig;\n\n/**\r\n * Validates a value against the rules.\r\n */\r\nasync function validate(value, rules, options = {}) {\r\n    const shouldBail = options === null || options === void 0 ? void 0 : options.bails;\r\n    const field = {\r\n        name: (options === null || options === void 0 ? void 0 : options.name) || '{field}',\r\n        rules,\r\n        bails: shouldBail !== null && shouldBail !== void 0 ? shouldBail : true,\r\n        formData: (options === null || options === void 0 ? void 0 : options.values) || {},\r\n    };\r\n    const result = await _validate(field, value);\r\n    const errors = result.errors;\r\n    return {\r\n        errors,\r\n        valid: !errors.length,\r\n    };\r\n}\r\n/**\r\n * Starts the validation process.\r\n */\r\nasync function _validate(field, value) {\r\n    if (isYupValidator(field.rules)) {\r\n        return validateFieldWithYup(value, field.rules, { bails: field.bails });\r\n    }\r\n    // if a generic function or chain of generic functions\r\n    if (isCallable(field.rules) || Array.isArray(field.rules)) {\r\n        const ctx = {\r\n            field: field.name,\r\n            form: field.formData,\r\n            value: value,\r\n        };\r\n        // Normalize the pipeline\r\n        const pipeline = Array.isArray(field.rules) ? field.rules : [field.rules];\r\n        const length = pipeline.length;\r\n        const errors = [];\r\n        for (let i = 0; i < length; i++) {\r\n            const rule = pipeline[i];\r\n            const result = await rule(value, ctx);\r\n            const isValid = typeof result !== 'string' && result;\r\n            if (isValid) {\r\n                continue;\r\n            }\r\n            const message = typeof result === 'string' ? result : _generateFieldError(ctx);\r\n            errors.push(message);\r\n            if (field.bails) {\r\n                return {\r\n                    errors,\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            errors,\r\n        };\r\n    }\r\n    const normalizedContext = Object.assign(Object.assign({}, field), { rules: normalizeRules(field.rules) });\r\n    const errors = [];\r\n    const rulesKeys = Object.keys(normalizedContext.rules);\r\n    const length = rulesKeys.length;\r\n    for (let i = 0; i < length; i++) {\r\n        const rule = rulesKeys[i];\r\n        const result = await _test(normalizedContext, value, {\r\n            name: rule,\r\n            params: normalizedContext.rules[rule],\r\n        });\r\n        if (result.error) {\r\n            errors.push(result.error);\r\n            if (field.bails) {\r\n                return {\r\n                    errors,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Handles yup validation\r\n */\r\nasync function validateFieldWithYup(value, validator, opts) {\r\n    var _a;\r\n    const errors = await validator\r\n        .validate(value, {\r\n        abortEarly: (_a = opts.bails) !== null && _a !== void 0 ? _a : true,\r\n    })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name === 'ValidationError') {\r\n            return err.errors;\r\n        }\r\n        // re-throw the error so we don't hide it\r\n        throw err;\r\n    });\r\n    return {\r\n        errors,\r\n    };\r\n}\r\n/**\r\n * Tests a single input value against a rule.\r\n */\r\nasync function _test(field, value, rule) {\r\n    const validator = resolveRule(rule.name);\r\n    if (!validator) {\r\n        throw new Error(`No such validator '${rule.name}' exists.`);\r\n    }\r\n    const params = fillTargetValues(rule.params, field.formData);\r\n    const ctx = {\r\n        field: field.name,\r\n        value,\r\n        form: field.formData,\r\n        rule: Object.assign(Object.assign({}, rule), { params }),\r\n    };\r\n    const result = await validator(value, params, ctx);\r\n    if (typeof result === 'string') {\r\n        return {\r\n            error: result,\r\n        };\r\n    }\r\n    return {\r\n        error: result ? undefined : _generateFieldError(ctx),\r\n    };\r\n}\r\n/**\r\n * Generates error messages.\r\n */\r\nfunction _generateFieldError(fieldCtx) {\r\n    const message = getConfig().generateMessage;\r\n    if (!message) {\r\n        return 'Field is invalid';\r\n    }\r\n    return message(fieldCtx);\r\n}\r\nfunction fillTargetValues(params, crossTable) {\r\n    const normalize = (value) => {\r\n        if (isLocator(value)) {\r\n            return value(crossTable);\r\n        }\r\n        return value;\r\n    };\r\n    if (Array.isArray(params)) {\r\n        return params.map(normalize);\r\n    }\r\n    return Object.keys(params).reduce((acc, param) => {\r\n        acc[param] = normalize(params[param]);\r\n        return acc;\r\n    }, {});\r\n}\r\nasync function validateYupSchema(schema, values) {\r\n    const errorObjects = await schema\r\n        .validate(values, { abortEarly: false })\r\n        .then(() => [])\r\n        .catch((err) => {\r\n        // Yup errors have a name prop one them.\r\n        // https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\r\n        if (err.name !== 'ValidationError') {\r\n            throw err;\r\n        }\r\n        // list of aggregated errors\r\n        return err.inner || [];\r\n    });\r\n    const results = {};\r\n    const errors = {};\r\n    for (const error of errorObjects) {\r\n        const messages = error.errors;\r\n        results[error.path] = { valid: !messages.length, errors: messages };\r\n        if (messages.length) {\r\n            errors[error.path] = messages[0];\r\n        }\r\n    }\r\n    return {\r\n        valid: !errorObjects.length,\r\n        results,\r\n        errors,\r\n    };\r\n}\r\nasync function validateObjectSchema(schema, values, opts) {\r\n    const paths = keysOf(schema);\r\n    const validations = paths.map(async (path) => {\r\n        var _a, _b, _c;\r\n        const fieldResult = await validate(getFromPath(values, path), schema[path], {\r\n            name: ((_a = opts === null || opts === void 0 ? void 0 : opts.names) === null || _a === void 0 ? void 0 : _a[path]) || path,\r\n            values: values,\r\n            bails: (_c = (_b = opts === null || opts === void 0 ? void 0 : opts.bailsMap) === null || _b === void 0 ? void 0 : _b[path]) !== null && _c !== void 0 ? _c : true,\r\n        });\r\n        return Object.assign(Object.assign({}, fieldResult), { path });\r\n    });\r\n    let isAllValid = true;\r\n    const validationResults = await Promise.all(validations);\r\n    const results = {};\r\n    const errors = {};\r\n    for (const result of validationResults) {\r\n        results[result.path] = {\r\n            valid: result.valid,\r\n            errors: result.errors,\r\n        };\r\n        if (!result.valid) {\r\n            isAllValid = false;\r\n            errors[result.path] = result.errors[0];\r\n        }\r\n    }\r\n    return {\r\n        valid: isAllValid,\r\n        results,\r\n        errors,\r\n    };\r\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\nlet ID_COUNTER = 0;\r\nfunction useFieldState(path, init) {\r\n    const { value, initialValue, setInitialValue } = _useFieldValue(path, init.modelValue, init.form);\r\n    const { errorMessage, errors, setErrors } = _useFieldErrors(path, init.form);\r\n    const meta = _useFieldMeta(value, initialValue, errors);\r\n    const id = ID_COUNTER >= Number.MAX_SAFE_INTEGER ? 0 : ++ID_COUNTER;\r\n    function setState(state) {\r\n        var _a;\r\n        if ('value' in state) {\r\n            value.value = state.value;\r\n        }\r\n        if ('errors' in state) {\r\n            setErrors(state.errors);\r\n        }\r\n        if ('touched' in state) {\r\n            meta.touched = (_a = state.touched) !== null && _a !== void 0 ? _a : meta.touched;\r\n        }\r\n        if ('initialValue' in state) {\r\n            setInitialValue(state.initialValue);\r\n        }\r\n    }\r\n    return {\r\n        id,\r\n        path,\r\n        value,\r\n        initialValue,\r\n        meta,\r\n        errors,\r\n        errorMessage,\r\n        setState,\r\n    };\r\n}\r\n/**\r\n * Creates the field value and resolves the initial value\r\n */\r\nfunction _useFieldValue(path, modelValue, form) {\r\n    const modelRef = ref(unref(modelValue));\r\n    function resolveInitialValue() {\r\n        if (!form) {\r\n            return unref(modelRef);\r\n        }\r\n        return getFromPath(form.meta.value.initialValues, unref(path), unref(modelRef));\r\n    }\r\n    function setInitialValue(value) {\r\n        if (!form) {\r\n            modelRef.value = value;\r\n            return;\r\n        }\r\n        form.stageInitialValue(unref(path), value, true);\r\n    }\r\n    const initialValue = computed(resolveInitialValue);\r\n    // if no form is associated, use a regular ref.\r\n    if (!form) {\r\n        const value = ref(resolveInitialValue());\r\n        return {\r\n            value,\r\n            initialValue,\r\n            setInitialValue,\r\n        };\r\n    }\r\n    // to set the initial value, first check if there is a current value, if there is then use it.\r\n    // otherwise use the configured initial value if it exists.\r\n    // prioritize model value over form values\r\n    // #3429\r\n    const currentValue = modelValue ? unref(modelValue) : getFromPath(form.values, unref(path), unref(initialValue));\r\n    form.stageInitialValue(unref(path), currentValue, true);\r\n    // otherwise use a computed setter that triggers the `setFieldValue`\r\n    const value = computed({\r\n        get() {\r\n            return getFromPath(form.values, unref(path));\r\n        },\r\n        set(newVal) {\r\n            form.setFieldValue(unref(path), newVal);\r\n        },\r\n    });\r\n    return {\r\n        value,\r\n        initialValue,\r\n        setInitialValue,\r\n    };\r\n}\r\n/**\r\n * Creates meta flags state and some associated effects with them\r\n */\r\nfunction _useFieldMeta(currentValue, initialValue, errors) {\r\n    const meta = reactive({\r\n        touched: false,\r\n        pending: false,\r\n        valid: true,\r\n        validated: !!unref(errors).length,\r\n        initialValue: computed(() => unref(initialValue)),\r\n        dirty: computed(() => {\r\n            return !isEqual(unref(currentValue), unref(initialValue));\r\n        }),\r\n    });\r\n    watch(errors, value => {\r\n        meta.valid = !value.length;\r\n    }, {\r\n        immediate: true,\r\n        flush: 'sync',\r\n    });\r\n    return meta;\r\n}\r\n/**\r\n * Creates the error message state for the field state\r\n */\r\nfunction _useFieldErrors(path, form) {\r\n    function normalizeErrors(messages) {\r\n        if (!messages) {\r\n            return [];\r\n        }\r\n        return Array.isArray(messages) ? messages : [messages];\r\n    }\r\n    if (!form) {\r\n        const errors = ref([]);\r\n        return {\r\n            errors,\r\n            errorMessage: computed(() => errors.value[0]),\r\n            setErrors: (messages) => {\r\n                errors.value = normalizeErrors(messages);\r\n            },\r\n        };\r\n    }\r\n    const errors = computed(() => form.errorBag.value[unref(path)] || []);\r\n    return {\r\n        errors,\r\n        errorMessage: computed(() => errors.value[0]),\r\n        setErrors: (messages) => {\r\n            form.setFieldErrorBag(unref(path), normalizeErrors(messages));\r\n        },\r\n    };\r\n}\n\nfunction installDevtoolsPlugin(app) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        setupDevtoolsPlugin({\r\n            id: 'vee-validate-devtools-plugin',\r\n            label: 'VeeValidate Plugin',\r\n            packageName: 'vee-validate',\r\n            homepage: 'https://vee-validate.logaretm.com/v4',\r\n            app,\r\n            logo: 'https://vee-validate.logaretm.com/v4/logo.png',\r\n        }, setupApiHooks);\r\n    }\r\n}\r\nconst DEVTOOLS_FORMS = {};\r\nconst DEVTOOLS_FIELDS = {};\r\nlet API;\r\nconst refreshInspector = throttle(() => {\r\n    setTimeout(async () => {\r\n        await nextTick();\r\n        API === null || API === void 0 ? void 0 : API.sendInspectorState(INSPECTOR_ID);\r\n        API === null || API === void 0 ? void 0 : API.sendInspectorTree(INSPECTOR_ID);\r\n    }, 100);\r\n}, 100);\r\nfunction registerFormWithDevTools(form) {\r\n    const vm = getCurrentInstance();\r\n    if (!API) {\r\n        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\r\n        if (!app) {\r\n            return;\r\n        }\r\n        installDevtoolsPlugin(app);\r\n    }\r\n    DEVTOOLS_FORMS[form.formId] = Object.assign({}, form);\r\n    DEVTOOLS_FORMS[form.formId]._vm = vm;\r\n    onUnmounted(() => {\r\n        delete DEVTOOLS_FORMS[form.formId];\r\n        refreshInspector();\r\n    });\r\n    refreshInspector();\r\n}\r\nfunction registerSingleFieldWithDevtools(field) {\r\n    const vm = getCurrentInstance();\r\n    if (!API) {\r\n        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;\r\n        if (!app) {\r\n            return;\r\n        }\r\n        installDevtoolsPlugin(app);\r\n    }\r\n    DEVTOOLS_FIELDS[field.id] = Object.assign({}, field);\r\n    DEVTOOLS_FIELDS[field.id]._vm = vm;\r\n    onUnmounted(() => {\r\n        delete DEVTOOLS_FIELDS[field.id];\r\n        refreshInspector();\r\n    });\r\n    refreshInspector();\r\n}\r\nconst INSPECTOR_ID = 'vee-validate-inspector';\r\nconst COLORS = {\r\n    error: 0xbd4b4b,\r\n    success: 0x06d77b,\r\n    unknown: 0x54436b,\r\n    white: 0xffffff,\r\n    black: 0x000000,\r\n    blue: 0x035397,\r\n    purple: 0xb980f0,\r\n    orange: 0xf5a962,\r\n    gray: 0xbbbfca,\r\n};\r\nlet SELECTED_NODE = null;\r\nfunction setupApiHooks(api) {\r\n    API = api;\r\n    api.addInspector({\r\n        id: INSPECTOR_ID,\r\n        icon: 'rule',\r\n        label: 'vee-validate',\r\n        noSelectionText: 'Select a vee-validate node to inspect',\r\n        actions: [\r\n            {\r\n                icon: 'done_outline',\r\n                tooltip: 'Validate selected item',\r\n                action: async () => {\r\n                    if (!SELECTED_NODE) {\r\n                        console.error('There is not a valid selected vee-validate node or component');\r\n                        return;\r\n                    }\r\n                    const result = await SELECTED_NODE.validate();\r\n                    console.log(result);\r\n                },\r\n            },\r\n            {\r\n                icon: 'delete_sweep',\r\n                tooltip: 'Clear validation state of the selected item',\r\n                action: () => {\r\n                    if (!SELECTED_NODE) {\r\n                        console.error('There is not a valid selected vee-validate node or component');\r\n                        return;\r\n                    }\r\n                    if ('id' in SELECTED_NODE) {\r\n                        SELECTED_NODE.resetField();\r\n                        return;\r\n                    }\r\n                    SELECTED_NODE.resetForm();\r\n                },\r\n            },\r\n        ],\r\n    });\r\n    api.on.getInspectorTree(payload => {\r\n        if (payload.inspectorId !== INSPECTOR_ID) {\r\n            return;\r\n        }\r\n        const forms = Object.values(DEVTOOLS_FORMS);\r\n        const fields = Object.values(DEVTOOLS_FIELDS);\r\n        payload.rootNodes = [\r\n            ...forms.map(mapFormForDevtoolsInspector),\r\n            ...fields.map(field => mapFieldForDevtoolsInspector(field)),\r\n        ];\r\n    });\r\n    api.on.getInspectorState((payload, ctx) => {\r\n        if (payload.inspectorId !== INSPECTOR_ID || ctx.currentTab !== `custom-inspector:${INSPECTOR_ID}`) {\r\n            return;\r\n        }\r\n        const { form, field, type } = decodeNodeId(payload.nodeId);\r\n        if (form && type === 'form') {\r\n            payload.state = buildFormState(form);\r\n            SELECTED_NODE = form;\r\n            return;\r\n        }\r\n        if (field && type === 'field') {\r\n            payload.state = buildFieldState(field);\r\n            SELECTED_NODE = field;\r\n            return;\r\n        }\r\n        SELECTED_NODE = null;\r\n    });\r\n}\r\nfunction mapFormForDevtoolsInspector(form) {\r\n    const { textColor, bgColor } = getTagTheme(form);\r\n    const formTreeNodes = {};\r\n    Object.values(form.fieldsByPath.value).forEach(field => {\r\n        const fieldInstance = Array.isArray(field) ? field[0] : field;\r\n        if (!fieldInstance) {\r\n            return;\r\n        }\r\n        setInPath(formTreeNodes, unref(fieldInstance.name), mapFieldForDevtoolsInspector(fieldInstance, form));\r\n    });\r\n    function buildFormTree(tree, path = []) {\r\n        const key = [...path].pop();\r\n        if ('id' in tree) {\r\n            return Object.assign(Object.assign({}, tree), { label: key || tree.label });\r\n        }\r\n        if (isObject(tree)) {\r\n            return {\r\n                id: `${path.join('.')}`,\r\n                label: key || '',\r\n                children: Object.keys(tree).map(key => buildFormTree(tree[key], [...path, key])),\r\n            };\r\n        }\r\n        if (Array.isArray(tree)) {\r\n            return {\r\n                id: `${path.join('.')}`,\r\n                label: `${key}[]`,\r\n                children: tree.map((c, idx) => buildFormTree(c, [...path, String(idx)])),\r\n            };\r\n        }\r\n        return { id: '', label: '', children: [] };\r\n    }\r\n    const { children } = buildFormTree(formTreeNodes);\r\n    return {\r\n        id: encodeNodeId(form),\r\n        label: 'Form',\r\n        children,\r\n        tags: [\r\n            {\r\n                label: 'Form',\r\n                textColor,\r\n                backgroundColor: bgColor,\r\n            },\r\n            {\r\n                label: `${Object.keys(form.fieldsByPath.value).length} fields`,\r\n                textColor: COLORS.white,\r\n                backgroundColor: COLORS.unknown,\r\n            },\r\n        ],\r\n    };\r\n}\r\nfunction mapFieldForDevtoolsInspector(field, form) {\r\n    const fieldInstance = normalizeField(field);\r\n    const { textColor, bgColor } = getTagTheme(fieldInstance);\r\n    const isGroup = Array.isArray(field) && field.length > 1;\r\n    return {\r\n        id: encodeNodeId(form, fieldInstance, !isGroup),\r\n        label: unref(fieldInstance.name),\r\n        children: Array.isArray(field) ? field.map(fieldItem => mapFieldForDevtoolsInspector(fieldItem, form)) : undefined,\r\n        tags: [\r\n            isGroup\r\n                ? undefined\r\n                : {\r\n                    label: 'Field',\r\n                    textColor,\r\n                    backgroundColor: bgColor,\r\n                },\r\n            !form\r\n                ? {\r\n                    label: 'Standalone',\r\n                    textColor: COLORS.black,\r\n                    backgroundColor: COLORS.gray,\r\n                }\r\n                : undefined,\r\n            !isGroup && fieldInstance.type === 'checkbox'\r\n                ? {\r\n                    label: 'Checkbox',\r\n                    textColor: COLORS.white,\r\n                    backgroundColor: COLORS.blue,\r\n                }\r\n                : undefined,\r\n            !isGroup && fieldInstance.type === 'radio'\r\n                ? {\r\n                    label: 'Radio',\r\n                    textColor: COLORS.white,\r\n                    backgroundColor: COLORS.purple,\r\n                }\r\n                : undefined,\r\n            isGroup\r\n                ? {\r\n                    label: 'Group',\r\n                    textColor: COLORS.black,\r\n                    backgroundColor: COLORS.orange,\r\n                }\r\n                : undefined,\r\n        ].filter(Boolean),\r\n    };\r\n}\r\nfunction encodeNodeId(form, field, encodeIndex = true) {\r\n    const fieldPath = form ? unref(field === null || field === void 0 ? void 0 : field.name) : field === null || field === void 0 ? void 0 : field.id;\r\n    const fieldGroup = fieldPath ? form === null || form === void 0 ? void 0 : form.fieldsByPath.value[fieldPath] : undefined;\r\n    let idx;\r\n    if (encodeIndex && field && Array.isArray(fieldGroup)) {\r\n        idx = fieldGroup.indexOf(field);\r\n    }\r\n    const idObject = { f: form === null || form === void 0 ? void 0 : form.formId, ff: fieldPath, idx, type: field ? 'field' : 'form' };\r\n    return btoa(JSON.stringify(idObject));\r\n}\r\nfunction decodeNodeId(nodeId) {\r\n    try {\r\n        const idObject = JSON.parse(atob(nodeId));\r\n        const form = DEVTOOLS_FORMS[idObject.f];\r\n        if (!form && idObject.ff) {\r\n            const field = DEVTOOLS_FIELDS[idObject.ff];\r\n            if (!field) {\r\n                return {};\r\n            }\r\n            return {\r\n                type: idObject.type,\r\n                field,\r\n            };\r\n        }\r\n        if (!form) {\r\n            return {};\r\n        }\r\n        const fieldGroup = form.fieldsByPath.value[idObject.ff];\r\n        return {\r\n            type: idObject.type,\r\n            form,\r\n            field: Array.isArray(fieldGroup) ? fieldGroup[idObject.idx || 0] : fieldGroup,\r\n        };\r\n    }\r\n    catch (err) {\r\n        // console.error(`Devtools: [vee-validate] Failed to parse node id ${nodeId}`);\r\n    }\r\n    return {};\r\n}\r\nfunction buildFieldState(field) {\r\n    const { errors, meta, value } = field;\r\n    return {\r\n        'Field state': [\r\n            { key: 'errors', value: errors.value },\r\n            {\r\n                key: 'initialValue',\r\n                value: meta.initialValue,\r\n            },\r\n            {\r\n                key: 'currentValue',\r\n                value: value.value,\r\n            },\r\n            {\r\n                key: 'touched',\r\n                value: meta.touched,\r\n            },\r\n            {\r\n                key: 'dirty',\r\n                value: meta.dirty,\r\n            },\r\n            {\r\n                key: 'valid',\r\n                value: meta.valid,\r\n            },\r\n        ],\r\n    };\r\n}\r\nfunction buildFormState(form) {\r\n    const { errorBag, meta, values, isSubmitting, submitCount } = form;\r\n    return {\r\n        'Form state': [\r\n            {\r\n                key: 'submitCount',\r\n                value: submitCount.value,\r\n            },\r\n            {\r\n                key: 'isSubmitting',\r\n                value: isSubmitting.value,\r\n            },\r\n            {\r\n                key: 'touched',\r\n                value: meta.value.touched,\r\n            },\r\n            {\r\n                key: 'dirty',\r\n                value: meta.value.dirty,\r\n            },\r\n            {\r\n                key: 'valid',\r\n                value: meta.value.valid,\r\n            },\r\n            {\r\n                key: 'initialValues',\r\n                value: meta.value.initialValues,\r\n            },\r\n            {\r\n                key: 'currentValues',\r\n                value: values,\r\n            },\r\n            {\r\n                key: 'errors',\r\n                value: keysOf(errorBag.value).reduce((acc, key) => {\r\n                    var _a;\r\n                    const message = (_a = errorBag.value[key]) === null || _a === void 0 ? void 0 : _a[0];\r\n                    if (message) {\r\n                        acc[key] = message;\r\n                    }\r\n                    return acc;\r\n                }, {}),\r\n            },\r\n        ],\r\n    };\r\n}\r\n/**\r\n * Resolves the tag color based on the form state\r\n */\r\nfunction getTagTheme(fieldOrForm) {\r\n    // const fallbackColors = {\r\n    //   bgColor: COLORS.unknown,\r\n    //   textColor: COLORS.white,\r\n    // };\r\n    const isValid = 'id' in fieldOrForm ? fieldOrForm.meta.valid : fieldOrForm.meta.value.valid;\r\n    return {\r\n        bgColor: isValid ? COLORS.success : COLORS.error,\r\n        textColor: isValid ? COLORS.black : COLORS.white,\r\n    };\r\n}\n\n/**\r\n * Creates a field composite.\r\n */\r\nfunction useField(name, rules, opts) {\r\n    if (hasCheckedAttr(opts === null || opts === void 0 ? void 0 : opts.type)) {\r\n        return useCheckboxField(name, rules, opts);\r\n    }\r\n    return _useField(name, rules, opts);\r\n}\r\nfunction _useField(name, rules, opts) {\r\n    const { initialValue: modelValue, validateOnMount, bails, type, checkedValue, label, validateOnValueUpdate, uncheckedValue, controlled, keepValueOnUnmount, modelPropName, syncVModel, form: controlForm, } = normalizeOptions(unref(name), opts);\r\n    const injectedForm = controlled ? injectWithSelf(FormContextKey) : undefined;\r\n    const form = controlForm || injectedForm;\r\n    // a flag indicating if the field is about to be removed/unmounted.\r\n    let markedForRemoval = false;\r\n    const { id, value, initialValue, meta, setState, errors, errorMessage } = useFieldState(name, {\r\n        modelValue,\r\n        form,\r\n    });\r\n    if (syncVModel) {\r\n        useVModel({ value, prop: modelPropName, handleChange });\r\n    }\r\n    /**\r\n     * Handles common onBlur meta update\r\n     */\r\n    const handleBlur = () => {\r\n        meta.touched = true;\r\n    };\r\n    const normalizedRules = computed(() => {\r\n        let rulesValue = unref(rules);\r\n        const schema = unref(form === null || form === void 0 ? void 0 : form.schema);\r\n        if (schema && !isYupValidator(schema)) {\r\n            rulesValue = extractRuleFromSchema(schema, unref(name)) || rulesValue;\r\n        }\r\n        if (isYupValidator(rulesValue) || isCallable(rulesValue) || Array.isArray(rulesValue)) {\r\n            return rulesValue;\r\n        }\r\n        return normalizeRules(rulesValue);\r\n    });\r\n    async function validateCurrentValue(mode) {\r\n        var _a, _b;\r\n        if (form === null || form === void 0 ? void 0 : form.validateSchema) {\r\n            return (_a = (await form.validateSchema(mode)).results[unref(name)]) !== null && _a !== void 0 ? _a : { valid: true, errors: [] };\r\n        }\r\n        return validate(value.value, normalizedRules.value, {\r\n            name: unref(label) || unref(name),\r\n            values: (_b = form === null || form === void 0 ? void 0 : form.values) !== null && _b !== void 0 ? _b : {},\r\n            bails,\r\n        });\r\n    }\r\n    const validateWithStateMutation = withLatest(async () => {\r\n        meta.pending = true;\r\n        meta.validated = true;\r\n        return validateCurrentValue('validated-only');\r\n    }, result => {\r\n        if (markedForRemoval) {\r\n            result.valid = true;\r\n            result.errors = [];\r\n        }\r\n        setState({ errors: result.errors });\r\n        meta.pending = false;\r\n        return result;\r\n    });\r\n    const validateValidStateOnly = withLatest(async () => {\r\n        return validateCurrentValue('silent');\r\n    }, result => {\r\n        if (markedForRemoval) {\r\n            result.valid = true;\r\n        }\r\n        meta.valid = result.valid;\r\n        return result;\r\n    });\r\n    function validate$1(opts) {\r\n        if ((opts === null || opts === void 0 ? void 0 : opts.mode) === 'silent') {\r\n            return validateValidStateOnly();\r\n        }\r\n        return validateWithStateMutation();\r\n    }\r\n    // Common input/change event handler\r\n    function handleChange(e, shouldValidate = true) {\r\n        const newValue = normalizeEventValue(e);\r\n        value.value = newValue;\r\n        if (!validateOnValueUpdate && shouldValidate) {\r\n            validateWithStateMutation();\r\n        }\r\n    }\r\n    // Runs the initial validation\r\n    onMounted(() => {\r\n        if (validateOnMount) {\r\n            return validateWithStateMutation();\r\n        }\r\n        // validate self initially if no form was handling this\r\n        // forms should have their own initial silent validation run to make things more efficient\r\n        if (!form || !form.validateSchema) {\r\n            validateValidStateOnly();\r\n        }\r\n    });\r\n    function setTouched(isTouched) {\r\n        meta.touched = isTouched;\r\n    }\r\n    let unwatchValue;\r\n    let lastWatchedValue = klona(value.value);\r\n    function watchValue() {\r\n        unwatchValue = watch(value, (val, oldVal) => {\r\n            if (isEqual(val, oldVal) && isEqual(val, lastWatchedValue)) {\r\n                return;\r\n            }\r\n            const validateFn = validateOnValueUpdate ? validateWithStateMutation : validateValidStateOnly;\r\n            validateFn();\r\n            lastWatchedValue = klona(val);\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    watchValue();\r\n    function resetField(state) {\r\n        var _a;\r\n        unwatchValue === null || unwatchValue === void 0 ? void 0 : unwatchValue();\r\n        const newValue = state && 'value' in state ? state.value : initialValue.value;\r\n        setState({\r\n            value: klona(newValue),\r\n            initialValue: klona(newValue),\r\n            touched: (_a = state === null || state === void 0 ? void 0 : state.touched) !== null && _a !== void 0 ? _a : false,\r\n            errors: (state === null || state === void 0 ? void 0 : state.errors) || [],\r\n        });\r\n        meta.pending = false;\r\n        meta.validated = false;\r\n        validateValidStateOnly();\r\n        // need to watch at next tick to avoid triggering the value watcher\r\n        nextTick(() => {\r\n            watchValue();\r\n        });\r\n    }\r\n    function setValue(newValue) {\r\n        value.value = newValue;\r\n    }\r\n    function setErrors(errors) {\r\n        setState({ errors: Array.isArray(errors) ? errors : [errors] });\r\n    }\r\n    const field = {\r\n        id,\r\n        name,\r\n        label,\r\n        value,\r\n        meta,\r\n        errors,\r\n        errorMessage,\r\n        type,\r\n        checkedValue,\r\n        uncheckedValue,\r\n        bails,\r\n        keepValueOnUnmount,\r\n        resetField,\r\n        handleReset: () => resetField(),\r\n        validate: validate$1,\r\n        handleChange,\r\n        handleBlur,\r\n        setState,\r\n        setTouched,\r\n        setErrors,\r\n        setValue,\r\n    };\r\n    provide(FieldContextKey, field);\r\n    if (isRef(rules) && typeof unref(rules) !== 'function') {\r\n        watch(rules, (value, oldValue) => {\r\n            if (isEqual(value, oldValue)) {\r\n                return;\r\n            }\r\n            meta.validated ? validateWithStateMutation() : validateValidStateOnly();\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        field._vm = getCurrentInstance();\r\n        watch(() => (Object.assign(Object.assign({ errors: errors.value }, meta), { value: value.value })), refreshInspector, {\r\n            deep: true,\r\n        });\r\n        if (!form) {\r\n            registerSingleFieldWithDevtools(field);\r\n        }\r\n    }\r\n    // if no associated form return the field API immediately\r\n    if (!form) {\r\n        return field;\r\n    }\r\n    // associate the field with the given form\r\n    form.register(field);\r\n    onBeforeUnmount(() => {\r\n        markedForRemoval = true;\r\n        form.unregister(field);\r\n    });\r\n    // extract cross-field dependencies in a computed prop\r\n    const dependencies = computed(() => {\r\n        const rulesVal = normalizedRules.value;\r\n        // is falsy, a function schema or a yup schema\r\n        if (!rulesVal || isCallable(rulesVal) || isYupValidator(rulesVal) || Array.isArray(rulesVal)) {\r\n            return {};\r\n        }\r\n        return Object.keys(rulesVal).reduce((acc, rule) => {\r\n            const deps = extractLocators(rulesVal[rule])\r\n                .map((dep) => dep.__locatorRef)\r\n                .reduce((depAcc, depName) => {\r\n                const depValue = getFromPath(form.values, depName) || form.values[depName];\r\n                if (depValue !== undefined) {\r\n                    depAcc[depName] = depValue;\r\n                }\r\n                return depAcc;\r\n            }, {});\r\n            Object.assign(acc, deps);\r\n            return acc;\r\n        }, {});\r\n    });\r\n    // Adds a watcher that runs the validation whenever field dependencies change\r\n    watch(dependencies, (deps, oldDeps) => {\r\n        // Skip if no dependencies or if the field wasn't manipulated\r\n        if (!Object.keys(deps).length) {\r\n            return;\r\n        }\r\n        const shouldValidate = !isEqual(deps, oldDeps);\r\n        if (shouldValidate) {\r\n            meta.validated ? validateWithStateMutation() : validateValidStateOnly();\r\n        }\r\n    });\r\n    return field;\r\n}\r\n/**\r\n * Normalizes partial field options to include the full options\r\n */\r\nfunction normalizeOptions(name, opts) {\r\n    const defaults = () => ({\r\n        initialValue: undefined,\r\n        validateOnMount: false,\r\n        bails: true,\r\n        label: name,\r\n        validateOnValueUpdate: true,\r\n        keepValueOnUnmount: undefined,\r\n        modelPropName: 'modelValue',\r\n        syncVModel: true,\r\n        controlled: true,\r\n    });\r\n    if (!opts) {\r\n        return defaults();\r\n    }\r\n    // TODO: Deprecate this in next major release\r\n    const checkedValue = 'valueProp' in opts ? opts.valueProp : opts.checkedValue;\r\n    const controlled = 'standalone' in opts ? !opts.standalone : opts.controlled;\r\n    return Object.assign(Object.assign(Object.assign({}, defaults()), (opts || {})), { controlled: controlled !== null && controlled !== void 0 ? controlled : true, checkedValue });\r\n}\r\n/**\r\n * Extracts the validation rules from a schema\r\n */\r\nfunction extractRuleFromSchema(schema, fieldName) {\r\n    // no schema at all\r\n    if (!schema) {\r\n        return undefined;\r\n    }\r\n    // there is a key on the schema object for this field\r\n    return schema[fieldName];\r\n}\r\nfunction useCheckboxField(name, rules, opts) {\r\n    const form = !(opts === null || opts === void 0 ? void 0 : opts.standalone) ? injectWithSelf(FormContextKey) : undefined;\r\n    const checkedValue = opts === null || opts === void 0 ? void 0 : opts.checkedValue;\r\n    const uncheckedValue = opts === null || opts === void 0 ? void 0 : opts.uncheckedValue;\r\n    function patchCheckboxApi(field) {\r\n        const handleChange = field.handleChange;\r\n        const checked = computed(() => {\r\n            const currentValue = unref(field.value);\r\n            const checkedVal = unref(checkedValue);\r\n            return Array.isArray(currentValue)\r\n                ? currentValue.findIndex(v => isEqual(v, checkedVal)) >= 0\r\n                : isEqual(checkedVal, currentValue);\r\n        });\r\n        function handleCheckboxChange(e, shouldValidate = true) {\r\n            var _a;\r\n            if (checked.value === ((_a = e === null || e === void 0 ? void 0 : e.target) === null || _a === void 0 ? void 0 : _a.checked)) {\r\n                if (shouldValidate) {\r\n                    field.validate();\r\n                }\r\n                return;\r\n            }\r\n            let newValue = normalizeEventValue(e);\r\n            // Single checkbox field without a form to toggle it's value\r\n            if (!form) {\r\n                newValue = resolveNextCheckboxValue(unref(field.value), unref(checkedValue), unref(uncheckedValue));\r\n            }\r\n            handleChange(newValue, shouldValidate);\r\n        }\r\n        return Object.assign(Object.assign({}, field), { checked,\r\n            checkedValue,\r\n            uncheckedValue, handleChange: handleCheckboxChange });\r\n    }\r\n    return patchCheckboxApi(_useField(name, rules, opts));\r\n}\r\nfunction useVModel({ prop, value, handleChange }) {\r\n    const vm = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!vm) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn('Failed to setup model events because `useField` was not called in setup.');\r\n        }\r\n        return;\r\n    }\r\n    const propName = prop || 'modelValue';\r\n    const emitName = `update:${propName}`;\r\n    // Component doesn't have a model prop setup (must be defined on the props)\r\n    if (!(propName in vm.props)) {\r\n        return;\r\n    }\r\n    watch(value, newValue => {\r\n        if (isEqual(newValue, getCurrentModelValue(vm, propName))) {\r\n            return;\r\n        }\r\n        vm.emit(emitName, newValue);\r\n    });\r\n    watch(() => getCurrentModelValue(vm, propName), propValue => {\r\n        if (propValue === IS_ABSENT && value.value === undefined) {\r\n            return;\r\n        }\r\n        const newValue = propValue === IS_ABSENT ? undefined : propValue;\r\n        if (isEqual(newValue, applyModelModifiers(value.value, vm.props.modelModifiers))) {\r\n            return;\r\n        }\r\n        handleChange(newValue);\r\n    });\r\n}\r\nfunction getCurrentModelValue(vm, propName) {\r\n    return vm.props[propName];\r\n}\n\nconst FieldImpl = defineComponent({\r\n    name: 'Field',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: [String, Object],\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        rules: {\r\n            type: [Object, String, Function],\r\n            default: undefined,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        validateOnBlur: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnChange: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnInput: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        validateOnModelUpdate: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n        bails: {\r\n            type: Boolean,\r\n            default: () => getConfig().bails,\r\n        },\r\n        label: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n        uncheckedValue: {\r\n            type: null,\r\n            default: undefined,\r\n        },\r\n        modelValue: {\r\n            type: null,\r\n            default: IS_ABSENT,\r\n        },\r\n        modelModifiers: {\r\n            type: null,\r\n            default: () => ({}),\r\n        },\r\n        'onUpdate:modelValue': {\r\n            type: null,\r\n            default: undefined,\r\n        },\r\n        standalone: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        keepValue: {\r\n            type: Boolean,\r\n            default: undefined,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const rules = toRef(props, 'rules');\r\n        const name = toRef(props, 'name');\r\n        const label = toRef(props, 'label');\r\n        const uncheckedValue = toRef(props, 'uncheckedValue');\r\n        const keepValue = toRef(props, 'keepValue');\r\n        const { errors, value, errorMessage, validate: validateField, handleChange, handleBlur, setTouched, resetField, handleReset, meta, checked, setErrors, } = useField(name, rules, {\r\n            validateOnMount: props.validateOnMount,\r\n            bails: props.bails,\r\n            standalone: props.standalone,\r\n            type: ctx.attrs.type,\r\n            initialValue: resolveInitialValue(props, ctx),\r\n            // Only for checkboxes and radio buttons\r\n            checkedValue: ctx.attrs.value,\r\n            uncheckedValue,\r\n            label,\r\n            validateOnValueUpdate: false,\r\n            keepValueOnUnmount: keepValue,\r\n        });\r\n        // If there is a v-model applied on the component we need to emit the `update:modelValue` whenever the value binding changes\r\n        const onChangeHandler = function handleChangeWithModel(e, shouldValidate = true) {\r\n            handleChange(e, shouldValidate);\r\n            ctx.emit('update:modelValue', value.value);\r\n        };\r\n        const handleInput = (e) => {\r\n            if (!hasCheckedAttr(ctx.attrs.type)) {\r\n                value.value = normalizeEventValue(e);\r\n            }\r\n        };\r\n        const onInputHandler = function handleInputWithModel(e) {\r\n            handleInput(e);\r\n            ctx.emit('update:modelValue', value.value);\r\n        };\r\n        const fieldProps = computed(() => {\r\n            const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = resolveValidationTriggers(props);\r\n            const baseOnBlur = [handleBlur, ctx.attrs.onBlur, validateOnBlur ? validateField : undefined].filter(Boolean);\r\n            const baseOnInput = [(e) => onChangeHandler(e, validateOnInput), ctx.attrs.onInput].filter(Boolean);\r\n            const baseOnChange = [(e) => onChangeHandler(e, validateOnChange), ctx.attrs.onChange].filter(Boolean);\r\n            const attrs = {\r\n                name: props.name,\r\n                onBlur: baseOnBlur,\r\n                onInput: baseOnInput,\r\n                onChange: baseOnChange,\r\n            };\r\n            attrs['onUpdate:modelValue'] = e => onChangeHandler(e, validateOnModelUpdate);\r\n            if (hasCheckedAttr(ctx.attrs.type) && checked) {\r\n                attrs.checked = checked.value;\r\n            }\r\n            const tag = resolveTag(props, ctx);\r\n            if (shouldHaveValueBinding(tag, ctx.attrs)) {\r\n                attrs.value = value.value;\r\n            }\r\n            return attrs;\r\n        });\r\n        function slotProps() {\r\n            return {\r\n                field: fieldProps.value,\r\n                value: value.value,\r\n                meta,\r\n                errors: errors.value,\r\n                errorMessage: errorMessage.value,\r\n                validate: validateField,\r\n                resetField,\r\n                handleChange: onChangeHandler,\r\n                handleInput: onInputHandler,\r\n                handleReset,\r\n                handleBlur,\r\n                setTouched,\r\n                setErrors,\r\n            };\r\n        }\r\n        ctx.expose({\r\n            setErrors,\r\n            setTouched,\r\n            reset: resetField,\r\n            validate: validateField,\r\n            handleChange,\r\n        });\r\n        return () => {\r\n            const tag = resolveDynamicComponent(resolveTag(props, ctx));\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            if (tag) {\r\n                return h(tag, Object.assign(Object.assign({}, ctx.attrs), fieldProps.value), children);\r\n            }\r\n            return children;\r\n        };\r\n    },\r\n});\r\nfunction resolveTag(props, ctx) {\r\n    let tag = props.as || '';\r\n    if (!props.as && !ctx.slots.default) {\r\n        tag = 'input';\r\n    }\r\n    return tag;\r\n}\r\nfunction resolveValidationTriggers(props) {\r\n    var _a, _b, _c, _d;\r\n    const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = getConfig();\r\n    return {\r\n        validateOnInput: (_a = props.validateOnInput) !== null && _a !== void 0 ? _a : validateOnInput,\r\n        validateOnChange: (_b = props.validateOnChange) !== null && _b !== void 0 ? _b : validateOnChange,\r\n        validateOnBlur: (_c = props.validateOnBlur) !== null && _c !== void 0 ? _c : validateOnBlur,\r\n        validateOnModelUpdate: (_d = props.validateOnModelUpdate) !== null && _d !== void 0 ? _d : validateOnModelUpdate,\r\n    };\r\n}\r\nfunction resolveInitialValue(props, ctx) {\r\n    // Gets the initial value either from `value` prop/attr or `v-model` binding (modelValue)\r\n    // For checkboxes and radio buttons it will always be the model value not the `value` attribute\r\n    if (!hasCheckedAttr(ctx.attrs.type)) {\r\n        return isPropPresent(props, 'modelValue') ? props.modelValue : ctx.attrs.value;\r\n    }\r\n    return isPropPresent(props, 'modelValue') ? props.modelValue : undefined;\r\n}\r\nconst Field = FieldImpl;\n\nlet FORM_COUNTER = 0;\r\nfunction useForm(opts) {\r\n    var _a;\r\n    const formId = FORM_COUNTER++;\r\n    const controlledModelPaths = new Set();\r\n    // Prevents fields from double resetting their values, which causes checkboxes to toggle their initial value\r\n    // TODO: This won't be needed if we centralize all the state inside the `form` for form inputs\r\n    let RESET_LOCK = false;\r\n    // A lookup containing fields or field groups\r\n    const fieldsByPath = ref({});\r\n    // If the form is currently submitting\r\n    const isSubmitting = ref(false);\r\n    // The number of times the user tried to submit the form\r\n    const submitCount = ref(0);\r\n    // field arrays managed by this form\r\n    const fieldArrays = [];\r\n    // a private ref for all form values\r\n    const formValues = reactive(klona(unref(opts === null || opts === void 0 ? void 0 : opts.initialValues) || {}));\r\n    // the source of errors for the form fields\r\n    const { errorBag, setErrorBag, setFieldErrorBag } = useErrorBag(opts === null || opts === void 0 ? void 0 : opts.initialErrors);\r\n    // Gets the first error of each field\r\n    const errors = computed(() => {\r\n        return keysOf(errorBag.value).reduce((acc, key) => {\r\n            const bag = errorBag.value[key];\r\n            if (bag && bag.length) {\r\n                acc[key] = bag[0];\r\n            }\r\n            return acc;\r\n        }, {});\r\n    });\r\n    function getFirstFieldAtPath(path) {\r\n        const fieldOrGroup = fieldsByPath.value[path];\r\n        return Array.isArray(fieldOrGroup) ? fieldOrGroup[0] : fieldOrGroup;\r\n    }\r\n    function fieldExists(path) {\r\n        return !!fieldsByPath.value[path];\r\n    }\r\n    /**\r\n     * Holds a computed reference to all fields names and labels\r\n     */\r\n    const fieldNames = computed(() => {\r\n        return keysOf(fieldsByPath.value).reduce((names, path) => {\r\n            const field = getFirstFieldAtPath(path);\r\n            if (field) {\r\n                names[path] = unref(field.label || field.name) || '';\r\n            }\r\n            return names;\r\n        }, {});\r\n    });\r\n    const fieldBailsMap = computed(() => {\r\n        return keysOf(fieldsByPath.value).reduce((map, path) => {\r\n            var _a;\r\n            const field = getFirstFieldAtPath(path);\r\n            if (field) {\r\n                map[path] = (_a = field.bails) !== null && _a !== void 0 ? _a : true;\r\n            }\r\n            return map;\r\n        }, {});\r\n    });\r\n    // mutable non-reactive reference to initial errors\r\n    // we need this to process initial errors then unset them\r\n    const initialErrors = Object.assign({}, ((opts === null || opts === void 0 ? void 0 : opts.initialErrors) || {}));\r\n    const keepValuesOnUnmount = (_a = opts === null || opts === void 0 ? void 0 : opts.keepValuesOnUnmount) !== null && _a !== void 0 ? _a : false;\r\n    // initial form values\r\n    const { initialValues, originalInitialValues, setInitialValues } = useFormInitialValues(fieldsByPath, formValues, opts === null || opts === void 0 ? void 0 : opts.initialValues);\r\n    // form meta aggregations\r\n    const meta = useFormMeta(fieldsByPath, formValues, originalInitialValues, errors);\r\n    const controlledValues = computed(() => {\r\n        return [...controlledModelPaths, ...keysOf(fieldsByPath.value)].reduce((acc, path) => {\r\n            const value = getFromPath(formValues, path);\r\n            setInPath(acc, path, value);\r\n            return acc;\r\n        }, {});\r\n    });\r\n    const schema = opts === null || opts === void 0 ? void 0 : opts.validationSchema;\r\n    /**\r\n     * Batches validation runs in 5ms batches\r\n     * Must have two distinct batch queues to make sure they don't override each other settings #3783\r\n     */\r\n    const debouncedSilentValidation = debounceAsync(_validateSchema, 5);\r\n    const debouncedValidation = debounceAsync(_validateSchema, 5);\r\n    const validateSchema = withLatest(async (mode) => {\r\n        return (await mode) === 'silent' ? debouncedSilentValidation() : debouncedValidation();\r\n    }, (formResult, [mode]) => {\r\n        // fields by id lookup\r\n        const fieldsById = formCtx.fieldsByPath.value || {};\r\n        // errors fields names, we need it to also check if custom errors are updated\r\n        const currentErrorsPaths = keysOf(formCtx.errorBag.value);\r\n        // collect all the keys from the schema and all fields\r\n        // this ensures we have a complete keymap of all the fields\r\n        const paths = [\r\n            ...new Set([...keysOf(formResult.results), ...keysOf(fieldsById), ...currentErrorsPaths]),\r\n        ];\r\n        // aggregates the paths into a single result object while applying the results on the fields\r\n        return paths.reduce((validation, path) => {\r\n            const field = fieldsById[path];\r\n            const messages = (formResult.results[path] || { errors: [] }).errors;\r\n            const fieldResult = {\r\n                errors: messages,\r\n                valid: !messages.length,\r\n            };\r\n            validation.results[path] = fieldResult;\r\n            if (!fieldResult.valid) {\r\n                validation.errors[path] = fieldResult.errors[0];\r\n            }\r\n            // field not rendered\r\n            if (!field) {\r\n                setFieldError(path, messages);\r\n                return validation;\r\n            }\r\n            // always update the valid flag regardless of the mode\r\n            applyFieldMutation(field, f => (f.meta.valid = fieldResult.valid));\r\n            if (mode === 'silent') {\r\n                return validation;\r\n            }\r\n            const wasValidated = Array.isArray(field) ? field.some(f => f.meta.validated) : field.meta.validated;\r\n            if (mode === 'validated-only' && !wasValidated) {\r\n                return validation;\r\n            }\r\n            applyFieldMutation(field, f => f.setState({ errors: fieldResult.errors }));\r\n            return validation;\r\n        }, { valid: formResult.valid, results: {}, errors: {} });\r\n    });\r\n    function makeSubmissionFactory(onlyControlled) {\r\n        return function submitHandlerFactory(fn, onValidationError) {\r\n            return function submissionHandler(e) {\r\n                if (e instanceof Event) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }\r\n                // Touch all fields\r\n                setTouched(keysOf(fieldsByPath.value).reduce((acc, field) => {\r\n                    acc[field] = true;\r\n                    return acc;\r\n                }, {}));\r\n                isSubmitting.value = true;\r\n                submitCount.value++;\r\n                return validate()\r\n                    .then(result => {\r\n                    const values = klona(formValues);\r\n                    if (result.valid && typeof fn === 'function') {\r\n                        const controlled = klona(controlledValues.value);\r\n                        return fn(onlyControlled ? controlled : values, {\r\n                            evt: e,\r\n                            controlledValues: controlled,\r\n                            setErrors,\r\n                            setFieldError,\r\n                            setTouched,\r\n                            setFieldTouched,\r\n                            setValues,\r\n                            setFieldValue,\r\n                            resetForm,\r\n                        });\r\n                    }\r\n                    if (!result.valid && typeof onValidationError === 'function') {\r\n                        onValidationError({\r\n                            values,\r\n                            evt: e,\r\n                            errors: result.errors,\r\n                            results: result.results,\r\n                        });\r\n                    }\r\n                })\r\n                    .then(returnVal => {\r\n                    isSubmitting.value = false;\r\n                    return returnVal;\r\n                }, err => {\r\n                    isSubmitting.value = false;\r\n                    // re-throw the err so it doesn't go silent\r\n                    throw err;\r\n                });\r\n            };\r\n        };\r\n    }\r\n    const handleSubmitImpl = makeSubmissionFactory(false);\r\n    const handleSubmit = handleSubmitImpl;\r\n    handleSubmit.withControlled = makeSubmissionFactory(true);\r\n    const formCtx = {\r\n        formId,\r\n        fieldsByPath,\r\n        values: formValues,\r\n        controlledValues,\r\n        errorBag,\r\n        errors,\r\n        schema,\r\n        submitCount,\r\n        meta,\r\n        isSubmitting,\r\n        fieldArrays,\r\n        keepValuesOnUnmount,\r\n        validateSchema: unref(schema) ? validateSchema : undefined,\r\n        validate,\r\n        register: registerField,\r\n        unregister: unregisterField,\r\n        setFieldErrorBag,\r\n        validateField,\r\n        setFieldValue,\r\n        setValues,\r\n        setErrors,\r\n        setFieldError,\r\n        setFieldTouched,\r\n        setTouched,\r\n        resetForm,\r\n        handleSubmit,\r\n        stageInitialValue,\r\n        unsetInitialValue,\r\n        setFieldInitialValue,\r\n        useFieldModel,\r\n    };\r\n    function isFieldGroup(fieldOrGroup) {\r\n        return Array.isArray(fieldOrGroup);\r\n    }\r\n    function applyFieldMutation(fieldOrGroup, mutation) {\r\n        if (Array.isArray(fieldOrGroup)) {\r\n            return fieldOrGroup.forEach(mutation);\r\n        }\r\n        return mutation(fieldOrGroup);\r\n    }\r\n    function mutateAllFields(mutation) {\r\n        Object.values(fieldsByPath.value).forEach(field => {\r\n            if (!field) {\r\n                return;\r\n            }\r\n            // avoid resetting the field values, because they should've been reset already.\r\n            applyFieldMutation(field, mutation);\r\n        });\r\n    }\r\n    /**\r\n     * Manually sets an error message on a specific field\r\n     */\r\n    function setFieldError(field, message) {\r\n        setFieldErrorBag(field, message);\r\n    }\r\n    /**\r\n     * Sets errors for the fields specified in the object\r\n     */\r\n    function setErrors(fields) {\r\n        setErrorBag(fields);\r\n    }\r\n    /**\r\n     * Sets a single field value\r\n     */\r\n    function setFieldValue(field, value, { force } = { force: false }) {\r\n        var _a;\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        const clonedValue = klona(value);\r\n        // field wasn't found, create a virtual field as a placeholder\r\n        if (!fieldInstance) {\r\n            setInPath(formValues, field, clonedValue);\r\n            return;\r\n        }\r\n        if (isFieldGroup(fieldInstance) && ((_a = fieldInstance[0]) === null || _a === void 0 ? void 0 : _a.type) === 'checkbox' && !Array.isArray(value)) {\r\n            // Multiple checkboxes, and only one of them got updated\r\n            const newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field) || [], value, undefined));\r\n            setInPath(formValues, field, newValue);\r\n            return;\r\n        }\r\n        let newValue = value;\r\n        // Single Checkbox: toggles the field value unless the field is being reset then force it\r\n        if (!isFieldGroup(fieldInstance) && fieldInstance.type === 'checkbox' && !force && !RESET_LOCK) {\r\n            newValue = klona(resolveNextCheckboxValue(getFromPath(formValues, field), value, unref(fieldInstance.uncheckedValue)));\r\n        }\r\n        setInPath(formValues, field, newValue);\r\n    }\r\n    /**\r\n     * Sets multiple fields values\r\n     */\r\n    function setValues(fields) {\r\n        // clean up old values\r\n        keysOf(formValues).forEach(key => {\r\n            delete formValues[key];\r\n        });\r\n        // set up new values\r\n        keysOf(fields).forEach(path => {\r\n            setFieldValue(path, fields[path]);\r\n        });\r\n        // regenerate the arrays when the form values change\r\n        fieldArrays.forEach(f => f && f.reset());\r\n    }\r\n    function createModel(path) {\r\n        const { value } = _useFieldValue(path, undefined, formCtx);\r\n        watch(value, () => {\r\n            if (!fieldExists(unref(path))) {\r\n                validate({ mode: 'validated-only' });\r\n            }\r\n        }, {\r\n            deep: true,\r\n        });\r\n        controlledModelPaths.add(unref(path));\r\n        return value;\r\n    }\r\n    function useFieldModel(path) {\r\n        if (!Array.isArray(path)) {\r\n            return createModel(path);\r\n        }\r\n        return path.map(createModel);\r\n    }\r\n    /**\r\n     * Sets the touched meta state on a field\r\n     */\r\n    function setFieldTouched(field, isTouched) {\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        if (fieldInstance) {\r\n            applyFieldMutation(fieldInstance, f => f.setTouched(isTouched));\r\n        }\r\n    }\r\n    /**\r\n     * Sets the touched meta state on multiple fields\r\n     */\r\n    function setTouched(fields) {\r\n        keysOf(fields).forEach(field => {\r\n            setFieldTouched(field, !!fields[field]);\r\n        });\r\n    }\r\n    /**\r\n     * Resets all fields\r\n     */\r\n    function resetForm(state) {\r\n        RESET_LOCK = true;\r\n        // Reset all field states first\r\n        mutateAllFields(f => f.resetField());\r\n        // set initial values if provided\r\n        if (state === null || state === void 0 ? void 0 : state.values) {\r\n            setInitialValues(state.values);\r\n            setValues(state === null || state === void 0 ? void 0 : state.values);\r\n        }\r\n        else {\r\n            // clean up the initial values back to the original\r\n            setInitialValues(originalInitialValues.value);\r\n            // otherwise clean the current values\r\n            setValues(originalInitialValues.value);\r\n        }\r\n        if (state === null || state === void 0 ? void 0 : state.touched) {\r\n            setTouched(state.touched);\r\n        }\r\n        setErrors((state === null || state === void 0 ? void 0 : state.errors) || {});\r\n        submitCount.value = (state === null || state === void 0 ? void 0 : state.submitCount) || 0;\r\n        nextTick(() => {\r\n            RESET_LOCK = false;\r\n        });\r\n    }\r\n    function insertFieldAtPath(field, path) {\r\n        const rawField = markRaw(field);\r\n        const fieldPath = path;\r\n        // first field at that path\r\n        if (!fieldsByPath.value[fieldPath]) {\r\n            fieldsByPath.value[fieldPath] = rawField;\r\n            return;\r\n        }\r\n        const fieldAtPath = fieldsByPath.value[fieldPath];\r\n        if (fieldAtPath && !Array.isArray(fieldAtPath)) {\r\n            fieldsByPath.value[fieldPath] = [fieldAtPath];\r\n        }\r\n        // add the new array to that path\r\n        fieldsByPath.value[fieldPath] = [...fieldsByPath.value[fieldPath], rawField];\r\n    }\r\n    function removeFieldFromPath(field, path) {\r\n        const fieldPath = path;\r\n        const fieldAtPath = fieldsByPath.value[fieldPath];\r\n        if (!fieldAtPath) {\r\n            return;\r\n        }\r\n        // same field at path\r\n        if (!isFieldGroup(fieldAtPath) && field.id === fieldAtPath.id) {\r\n            delete fieldsByPath.value[fieldPath];\r\n            return;\r\n        }\r\n        if (isFieldGroup(fieldAtPath)) {\r\n            const idx = fieldAtPath.findIndex(f => f.id === field.id);\r\n            if (idx === -1) {\r\n                return;\r\n            }\r\n            fieldAtPath.splice(idx, 1);\r\n            if (!fieldAtPath.length) {\r\n                delete fieldsByPath.value[fieldPath];\r\n            }\r\n        }\r\n    }\r\n    function registerField(field) {\r\n        const fieldPath = unref(field.name);\r\n        insertFieldAtPath(field, fieldPath);\r\n        if (isRef(field.name)) {\r\n            // ensures when a field's name was already taken that it preserves its same value\r\n            // necessary for fields generated by loops\r\n            watch(field.name, async (newPath, oldPath) => {\r\n                // cache the value\r\n                await nextTick();\r\n                removeFieldFromPath(field, oldPath);\r\n                insertFieldAtPath(field, newPath);\r\n                // re-validate if either path had errors before\r\n                if (errors.value[oldPath] || errors.value[newPath]) {\r\n                    // clear up both paths errors\r\n                    setFieldError(oldPath, undefined);\r\n                    validateField(newPath);\r\n                }\r\n                // clean up the old path if no other field is sharing that name\r\n                // #3325\r\n                await nextTick();\r\n                if (!fieldExists(oldPath)) {\r\n                    unsetPath(formValues, oldPath);\r\n                }\r\n            });\r\n        }\r\n        // if field already had errors (initial errors) that's not user-set, validate it again to ensure state is correct\r\n        // the difference being that `initialErrors` will contain the error message while other errors (pre-validated schema) won't have them as initial errors\r\n        // #3342\r\n        const initialErrorMessage = unref(field.errorMessage);\r\n        if (initialErrorMessage && (initialErrors === null || initialErrors === void 0 ? void 0 : initialErrors[fieldPath]) !== initialErrorMessage) {\r\n            validateField(fieldPath);\r\n        }\r\n        // marks the initial error as \"consumed\" so it won't be matched later with same non-initial error\r\n        delete initialErrors[fieldPath];\r\n    }\r\n    function unregisterField(field) {\r\n        const fieldName = unref(field.name);\r\n        const fieldInstance = fieldsByPath.value[fieldName];\r\n        const isGroup = !!fieldInstance && isFieldGroup(fieldInstance);\r\n        removeFieldFromPath(field, fieldName);\r\n        // clears a field error on unmounted\r\n        // we wait till next tick to make sure if the field is completely removed and doesn't have any siblings like checkboxes\r\n        nextTick(() => {\r\n            var _a;\r\n            const shouldKeepValue = (_a = unref(field.keepValueOnUnmount)) !== null && _a !== void 0 ? _a : unref(keepValuesOnUnmount);\r\n            const currentGroupValue = getFromPath(formValues, fieldName);\r\n            // The boolean here is we check if the field still belongs to the same control group with that name\r\n            // if another group claimed the name, we should avoid handling it since it is no longer the same group\r\n            // this happens with `v-for` over some checkboxes and field arrays.\r\n            // also if the group no longer exist we can assume this group was the last one that controlled it\r\n            const isSameGroup = isGroup && (fieldInstance === fieldsByPath.value[fieldName] || !fieldsByPath.value[fieldName]);\r\n            // group field that still has a dangling value, the field may exist or not after it was removed.\r\n            // This used to be handled in the useField composable but the form has better context on when it should/not happen.\r\n            // if it does belong to it that means the group still exists\r\n            // #3844\r\n            if (isSameGroup && Array.isArray(currentGroupValue) && !shouldKeepValue) {\r\n                const valueIdx = currentGroupValue.findIndex(i => isEqual(i, unref(field.checkedValue)));\r\n                if (valueIdx > -1) {\r\n                    const newVal = [...currentGroupValue];\r\n                    newVal.splice(valueIdx, 1);\r\n                    setFieldValue(fieldName, newVal, { force: true });\r\n                }\r\n            }\r\n            // Field was removed entirely, we should unset its path\r\n            // #3384\r\n            if (!fieldExists(fieldName)) {\r\n                setFieldError(fieldName, undefined);\r\n                // Checks if the field was configured to be unset during unmount or not\r\n                // Checks both the form-level config and field-level one\r\n                // Field has the priority if it is set, otherwise it goes to the form settings\r\n                if (shouldKeepValue) {\r\n                    return;\r\n                }\r\n                if (isGroup && !isEmptyContainer(getFromPath(formValues, fieldName))) {\r\n                    return;\r\n                }\r\n                unsetPath(formValues, fieldName);\r\n            }\r\n        });\r\n    }\r\n    async function validate(opts) {\r\n        mutateAllFields(f => (f.meta.validated = true));\r\n        if (formCtx.validateSchema) {\r\n            return formCtx.validateSchema((opts === null || opts === void 0 ? void 0 : opts.mode) || 'force');\r\n        }\r\n        // No schema, each field is responsible to validate itself\r\n        const validations = await Promise.all(Object.values(fieldsByPath.value).map(field => {\r\n            const fieldInstance = Array.isArray(field) ? field[0] : field;\r\n            if (!fieldInstance) {\r\n                return Promise.resolve({ key: '', valid: true, errors: [] });\r\n            }\r\n            return fieldInstance.validate(opts).then((result) => {\r\n                return {\r\n                    key: unref(fieldInstance.name),\r\n                    valid: result.valid,\r\n                    errors: result.errors,\r\n                };\r\n            });\r\n        }));\r\n        const results = {};\r\n        const errors = {};\r\n        for (const validation of validations) {\r\n            results[validation.key] = {\r\n                valid: validation.valid,\r\n                errors: validation.errors,\r\n            };\r\n            if (validation.errors.length) {\r\n                errors[validation.key] = validation.errors[0];\r\n            }\r\n        }\r\n        return {\r\n            valid: validations.every(r => r.valid),\r\n            results,\r\n            errors,\r\n        };\r\n    }\r\n    async function validateField(field) {\r\n        const fieldInstance = fieldsByPath.value[field];\r\n        if (!fieldInstance) {\r\n            warn$1(`field with name ${field} was not found`);\r\n            return Promise.resolve({ errors: [], valid: true });\r\n        }\r\n        if (Array.isArray(fieldInstance)) {\r\n            return fieldInstance.map(f => f.validate())[0];\r\n        }\r\n        return fieldInstance.validate();\r\n    }\r\n    function unsetInitialValue(path) {\r\n        unsetPath(initialValues.value, path);\r\n    }\r\n    /**\r\n     * Sneaky function to set initial field values\r\n     */\r\n    function stageInitialValue(path, value, updateOriginal = false) {\r\n        setInPath(formValues, path, value);\r\n        setFieldInitialValue(path, value);\r\n        if (updateOriginal && !(opts === null || opts === void 0 ? void 0 : opts.initialValues)) {\r\n            setInPath(originalInitialValues.value, path, klona(value));\r\n        }\r\n    }\r\n    function setFieldInitialValue(path, value) {\r\n        setInPath(initialValues.value, path, klona(value));\r\n    }\r\n    async function _validateSchema() {\r\n        const schemaValue = unref(schema);\r\n        if (!schemaValue) {\r\n            return { valid: true, results: {}, errors: {} };\r\n        }\r\n        const formResult = isYupValidator(schemaValue)\r\n            ? await validateYupSchema(schemaValue, formValues)\r\n            : await validateObjectSchema(schemaValue, formValues, {\r\n                names: fieldNames.value,\r\n                bailsMap: fieldBailsMap.value,\r\n            });\r\n        return formResult;\r\n    }\r\n    const submitForm = handleSubmit((_, { evt }) => {\r\n        if (isFormSubmitEvent(evt)) {\r\n            evt.target.submit();\r\n        }\r\n    });\r\n    // Trigger initial validation\r\n    onMounted(() => {\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialErrors) {\r\n            setErrors(opts.initialErrors);\r\n        }\r\n        if (opts === null || opts === void 0 ? void 0 : opts.initialTouched) {\r\n            setTouched(opts.initialTouched);\r\n        }\r\n        // if validate on mount was enabled\r\n        if (opts === null || opts === void 0 ? void 0 : opts.validateOnMount) {\r\n            validate();\r\n            return;\r\n        }\r\n        // otherwise run initial silent validation through schema if available\r\n        // the useField should skip their own silent validation if a yup schema is present\r\n        if (formCtx.validateSchema) {\r\n            formCtx.validateSchema('silent');\r\n        }\r\n    });\r\n    if (isRef(schema)) {\r\n        watch(schema, () => {\r\n            var _a;\r\n            (_a = formCtx.validateSchema) === null || _a === void 0 ? void 0 : _a.call(formCtx, 'validated-only');\r\n        });\r\n    }\r\n    // Provide injections\r\n    provide(FormContextKey, formCtx);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        registerFormWithDevTools(formCtx);\r\n        watch(() => (Object.assign(Object.assign({ errors: errorBag.value }, meta.value), { values: formValues, isSubmitting: isSubmitting.value, submitCount: submitCount.value })), refreshInspector, {\r\n            deep: true,\r\n        });\r\n    }\r\n    return Object.assign(Object.assign({}, formCtx), { handleReset: () => resetForm(), submitForm });\r\n}\r\n/**\r\n * Manages form meta aggregation\r\n */\r\nfunction useFormMeta(fieldsByPath, currentValues, initialValues, errors) {\r\n    const MERGE_STRATEGIES = {\r\n        touched: 'some',\r\n        pending: 'some',\r\n        valid: 'every',\r\n    };\r\n    const isDirty = computed(() => {\r\n        return !isEqual(currentValues, unref(initialValues));\r\n    });\r\n    function calculateFlags() {\r\n        const fields = Object.values(fieldsByPath.value).flat(1).filter(Boolean);\r\n        return keysOf(MERGE_STRATEGIES).reduce((acc, flag) => {\r\n            const mergeMethod = MERGE_STRATEGIES[flag];\r\n            acc[flag] = fields[mergeMethod](field => field.meta[flag]);\r\n            return acc;\r\n        }, {});\r\n    }\r\n    const flags = reactive(calculateFlags());\r\n    watchEffect(() => {\r\n        const value = calculateFlags();\r\n        flags.touched = value.touched;\r\n        flags.valid = value.valid;\r\n        flags.pending = value.pending;\r\n    });\r\n    return computed(() => {\r\n        return Object.assign(Object.assign({ initialValues: unref(initialValues) }, flags), { valid: flags.valid && !keysOf(errors.value).length, dirty: isDirty.value });\r\n    });\r\n}\r\n/**\r\n * Manages the initial values prop\r\n */\r\nfunction useFormInitialValues(fields, formValues, providedValues) {\r\n    // these are the mutable initial values as the fields are mounted/unmounted\r\n    const initialValues = ref(klona(unref(providedValues)) || {});\r\n    // these are the original initial value as provided by the user initially, they don't keep track of conditional fields\r\n    // this is important because some conditional fields will overwrite the initial values for other fields who had the same name\r\n    // like array fields, any push/insert operation will overwrite the initial values because they \"create new fields\"\r\n    // so these are the values that the reset function should use\r\n    // these only change when the user explicitly chanegs the initial values or when the user resets them with new values.\r\n    const originalInitialValues = ref(klona(unref(providedValues)) || {});\r\n    function setInitialValues(values, updateFields = false) {\r\n        initialValues.value = klona(values);\r\n        originalInitialValues.value = klona(values);\r\n        if (!updateFields) {\r\n            return;\r\n        }\r\n        // update the pristine non-touched fields\r\n        // those are excluded because it's unlikely you want to change the form values using initial values\r\n        // we mostly watch them for API population or newly inserted fields\r\n        // if the user API is taking too much time before user interaction they should consider disabling or hiding their inputs until the values are ready\r\n        keysOf(fields.value).forEach(fieldPath => {\r\n            const field = fields.value[fieldPath];\r\n            const wasTouched = Array.isArray(field) ? field.some(f => f.meta.touched) : field === null || field === void 0 ? void 0 : field.meta.touched;\r\n            if (!field || wasTouched) {\r\n                return;\r\n            }\r\n            const newValue = getFromPath(initialValues.value, fieldPath);\r\n            setInPath(formValues, fieldPath, klona(newValue));\r\n        });\r\n    }\r\n    if (isRef(providedValues)) {\r\n        watch(providedValues, value => {\r\n            setInitialValues(value, true);\r\n        }, {\r\n            deep: true,\r\n        });\r\n    }\r\n    return {\r\n        initialValues,\r\n        originalInitialValues,\r\n        setInitialValues,\r\n    };\r\n}\r\nfunction useErrorBag(initialErrors) {\r\n    const errorBag = ref({});\r\n    function normalizeErrorItem(message) {\r\n        return Array.isArray(message) ? message : message ? [message] : [];\r\n    }\r\n    /**\r\n     * Manually sets an error message on a specific field\r\n     */\r\n    function setFieldErrorBag(field, message) {\r\n        if (!message) {\r\n            delete errorBag.value[field];\r\n            return;\r\n        }\r\n        errorBag.value[field] = normalizeErrorItem(message);\r\n    }\r\n    /**\r\n     * Sets errors for the fields specified in the object\r\n     */\r\n    function setErrorBag(fields) {\r\n        errorBag.value = keysOf(fields).reduce((acc, key) => {\r\n            const message = fields[key];\r\n            if (message) {\r\n                acc[key] = normalizeErrorItem(message);\r\n            }\r\n            return acc;\r\n        }, {});\r\n    }\r\n    if (initialErrors) {\r\n        setErrorBag(initialErrors);\r\n    }\r\n    return {\r\n        errorBag,\r\n        setErrorBag,\r\n        setFieldErrorBag,\r\n    };\r\n}\n\nconst FormImpl = defineComponent({\r\n    name: 'Form',\r\n    inheritAttrs: false,\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: 'form',\r\n        },\r\n        validationSchema: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialValues: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialErrors: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        initialTouched: {\r\n            type: Object,\r\n            default: undefined,\r\n        },\r\n        validateOnMount: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        onSubmit: {\r\n            type: Function,\r\n            default: undefined,\r\n        },\r\n        onInvalidSubmit: {\r\n            type: Function,\r\n            default: undefined,\r\n        },\r\n        keepValues: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const initialValues = toRef(props, 'initialValues');\r\n        const validationSchema = toRef(props, 'validationSchema');\r\n        const keepValues = toRef(props, 'keepValues');\r\n        const { errors, values, meta, isSubmitting, submitCount, controlledValues, validate, validateField, handleReset, resetForm, handleSubmit, setErrors, setFieldError, setFieldValue, setValues, setFieldTouched, setTouched, } = useForm({\r\n            validationSchema: validationSchema.value ? validationSchema : undefined,\r\n            initialValues,\r\n            initialErrors: props.initialErrors,\r\n            initialTouched: props.initialTouched,\r\n            validateOnMount: props.validateOnMount,\r\n            keepValuesOnUnmount: keepValues,\r\n        });\r\n        const submitForm = handleSubmit((_, { evt }) => {\r\n            if (isFormSubmitEvent(evt)) {\r\n                evt.target.submit();\r\n            }\r\n        }, props.onInvalidSubmit);\r\n        const onSubmit = props.onSubmit ? handleSubmit(props.onSubmit, props.onInvalidSubmit) : submitForm;\r\n        function handleFormReset(e) {\r\n            if (isEvent(e)) {\r\n                // Prevent default form reset behavior\r\n                e.preventDefault();\r\n            }\r\n            handleReset();\r\n            if (typeof ctx.attrs.onReset === 'function') {\r\n                ctx.attrs.onReset();\r\n            }\r\n        }\r\n        function handleScopedSlotSubmit(evt, onSubmit) {\r\n            const onSuccess = typeof evt === 'function' && !onSubmit ? evt : onSubmit;\r\n            return handleSubmit(onSuccess, props.onInvalidSubmit)(evt);\r\n        }\r\n        function slotProps() {\r\n            return {\r\n                meta: meta.value,\r\n                errors: errors.value,\r\n                values: values,\r\n                isSubmitting: isSubmitting.value,\r\n                submitCount: submitCount.value,\r\n                controlledValues: controlledValues.value,\r\n                validate,\r\n                validateField,\r\n                handleSubmit: handleScopedSlotSubmit,\r\n                handleReset,\r\n                submitForm,\r\n                setErrors,\r\n                setFieldError,\r\n                setFieldValue,\r\n                setValues,\r\n                setFieldTouched,\r\n                setTouched,\r\n                resetForm,\r\n            };\r\n        }\r\n        // expose these functions and methods as part of public API\r\n        ctx.expose({\r\n            setFieldError,\r\n            setErrors,\r\n            setFieldValue,\r\n            setValues,\r\n            setFieldTouched,\r\n            setTouched,\r\n            resetForm,\r\n            validate,\r\n            validateField,\r\n        });\r\n        return function renderForm() {\r\n            // avoid resolving the form component as itself\r\n            const tag = props.as === 'form' ? props.as : resolveDynamicComponent(props.as);\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            if (!props.as) {\r\n                return children;\r\n            }\r\n            // Attributes to add on a native `form` tag\r\n            const formAttrs = props.as === 'form'\r\n                ? {\r\n                    // Disables native validation as vee-validate will handle it.\r\n                    novalidate: true,\r\n                }\r\n                : {};\r\n            return h(tag, Object.assign(Object.assign(Object.assign({}, formAttrs), ctx.attrs), { onSubmit, onReset: handleFormReset }), children);\r\n        };\r\n    },\r\n});\r\nconst Form = FormImpl;\n\nfunction useFieldArray(arrayPath) {\r\n    const form = injectWithSelf(FormContextKey, undefined);\r\n    const fields = ref([]);\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    const noOp = () => { };\r\n    const noOpApi = {\r\n        fields,\r\n        remove: noOp,\r\n        push: noOp,\r\n        swap: noOp,\r\n        insert: noOp,\r\n        update: noOp,\r\n        replace: noOp,\r\n        prepend: noOp,\r\n        move: noOp,\r\n    };\r\n    if (!form) {\r\n        warn('FieldArray requires being a child of `<Form/>` or `useForm` being called before it. Array fields may not work correctly');\r\n        return noOpApi;\r\n    }\r\n    if (!unref(arrayPath)) {\r\n        warn('FieldArray requires a field path to be provided, did you forget to pass the `name` prop?');\r\n        return noOpApi;\r\n    }\r\n    const alreadyExists = form.fieldArrays.find(a => unref(a.path) === unref(arrayPath));\r\n    if (alreadyExists) {\r\n        return alreadyExists;\r\n    }\r\n    let entryCounter = 0;\r\n    function initFields() {\r\n        const currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []) || [];\r\n        fields.value = currentValues.map(createEntry);\r\n        updateEntryFlags();\r\n    }\r\n    initFields();\r\n    function updateEntryFlags() {\r\n        const fieldsLength = fields.value.length;\r\n        for (let i = 0; i < fieldsLength; i++) {\r\n            const entry = fields.value[i];\r\n            entry.isFirst = i === 0;\r\n            entry.isLast = i === fieldsLength - 1;\r\n        }\r\n    }\r\n    function createEntry(value) {\r\n        const key = entryCounter++;\r\n        const entry = {\r\n            key,\r\n            value: computed({\r\n                get() {\r\n                    const currentValues = getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(arrayPath), []) || [];\r\n                    const idx = fields.value.findIndex(e => e.key === key);\r\n                    return idx === -1 ? value : currentValues[idx];\r\n                },\r\n                set(value) {\r\n                    const idx = fields.value.findIndex(e => e.key === key);\r\n                    if (idx === -1) {\r\n                        warn(`Attempting to update a non-existent array item`);\r\n                        return;\r\n                    }\r\n                    update(idx, value);\r\n                },\r\n            }),\r\n            isFirst: false,\r\n            isLast: false,\r\n        };\r\n        return entry;\r\n    }\r\n    function remove(idx) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!pathValue || !Array.isArray(pathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        newValue.splice(idx, 1);\r\n        form === null || form === void 0 ? void 0 : form.unsetInitialValue(pathName + `[${idx}]`);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.splice(idx, 1);\r\n        updateEntryFlags();\r\n    }\r\n    function push(value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        const normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\r\n        if (!Array.isArray(normalizedPathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [...normalizedPathValue];\r\n        newValue.push(value);\r\n        form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + `[${newValue.length - 1}]`, value);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.push(createEntry(value));\r\n        updateEntryFlags();\r\n    }\r\n    function swap(indexA, indexB) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || !(indexA in pathValue) || !(indexB in pathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        const newFields = [...fields.value];\r\n        // the old switcheroo\r\n        const temp = newValue[indexA];\r\n        newValue[indexA] = newValue[indexB];\r\n        newValue[indexB] = temp;\r\n        const tempEntry = newFields[indexA];\r\n        newFields[indexA] = newFields[indexB];\r\n        newFields[indexB] = tempEntry;\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value = newFields;\r\n        updateEntryFlags();\r\n    }\r\n    function insert(idx, value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || pathValue.length < idx) {\r\n            return;\r\n        }\r\n        const newValue = [...pathValue];\r\n        const newFields = [...fields.value];\r\n        newValue.splice(idx, 0, value);\r\n        newFields.splice(idx, 0, createEntry(value));\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value = newFields;\r\n        updateEntryFlags();\r\n    }\r\n    function replace(arr) {\r\n        const pathName = unref(arrayPath);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, arr);\r\n        initFields();\r\n    }\r\n    function update(idx, value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        if (!Array.isArray(pathValue) || pathValue.length - 1 < idx) {\r\n            return;\r\n        }\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(`${pathName}[${idx}]`, value);\r\n    }\r\n    function prepend(value) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        const normalizedPathValue = isNullOrUndefined(pathValue) ? [] : pathValue;\r\n        if (!Array.isArray(normalizedPathValue)) {\r\n            return;\r\n        }\r\n        const newValue = [value, ...normalizedPathValue];\r\n        form === null || form === void 0 ? void 0 : form.stageInitialValue(pathName + `[${newValue.length - 1}]`, value);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value.unshift(createEntry(value));\r\n        updateEntryFlags();\r\n    }\r\n    function move(oldIdx, newIdx) {\r\n        const pathName = unref(arrayPath);\r\n        const pathValue = getFromPath(form === null || form === void 0 ? void 0 : form.values, pathName);\r\n        const newValue = isNullOrUndefined(pathValue) ? [] : [...pathValue];\r\n        if (!Array.isArray(pathValue) || !(oldIdx in pathValue) || !(newIdx in pathValue)) {\r\n            return;\r\n        }\r\n        const newFields = [...fields.value];\r\n        const movedItem = newFields[oldIdx];\r\n        newFields.splice(oldIdx, 1);\r\n        newFields.splice(newIdx, 0, movedItem);\r\n        const movedValue = newValue[oldIdx];\r\n        newValue.splice(oldIdx, 1);\r\n        newValue.splice(newIdx, 0, movedValue);\r\n        form === null || form === void 0 ? void 0 : form.setFieldValue(pathName, newValue);\r\n        fields.value = newFields;\r\n        updateEntryFlags();\r\n    }\r\n    const fieldArrayCtx = {\r\n        fields,\r\n        remove,\r\n        push,\r\n        swap,\r\n        insert,\r\n        update,\r\n        replace,\r\n        prepend,\r\n        move,\r\n    };\r\n    form.fieldArrays.push(Object.assign({ path: arrayPath, reset: initFields }, fieldArrayCtx));\r\n    onBeforeUnmount(() => {\r\n        const idx = form.fieldArrays.findIndex(i => unref(i.path) === unref(arrayPath));\r\n        if (idx >= 0) {\r\n            form.fieldArrays.splice(idx, 1);\r\n        }\r\n    });\r\n    return fieldArrayCtx;\r\n}\n\nconst FieldArrayImpl = defineComponent({\r\n    name: 'FieldArray',\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const { push, remove, swap, insert, replace, update, prepend, move, fields } = useFieldArray(toRef(props, 'name'));\r\n        function slotProps() {\r\n            return {\r\n                fields: fields.value,\r\n                push,\r\n                remove,\r\n                swap,\r\n                insert,\r\n                update,\r\n                replace,\r\n                prepend,\r\n                move,\r\n            };\r\n        }\r\n        ctx.expose({\r\n            push,\r\n            remove,\r\n            swap,\r\n            insert,\r\n            update,\r\n            replace,\r\n            prepend,\r\n            move,\r\n        });\r\n        return () => {\r\n            const children = normalizeChildren(undefined, ctx, slotProps);\r\n            return children;\r\n        };\r\n    },\r\n});\r\nconst FieldArray = FieldArrayImpl;\n\nconst ErrorMessageImpl = defineComponent({\r\n    name: 'ErrorMessage',\r\n    props: {\r\n        as: {\r\n            type: String,\r\n            default: undefined,\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n    },\r\n    setup(props, ctx) {\r\n        const form = inject(FormContextKey, undefined);\r\n        const message = computed(() => {\r\n            return form === null || form === void 0 ? void 0 : form.errors.value[props.name];\r\n        });\r\n        function slotProps() {\r\n            return {\r\n                message: message.value,\r\n            };\r\n        }\r\n        return () => {\r\n            // Renders nothing if there are no messages\r\n            if (!message.value) {\r\n                return undefined;\r\n            }\r\n            const tag = (props.as ? resolveDynamicComponent(props.as) : props.as);\r\n            const children = normalizeChildren(tag, ctx, slotProps);\r\n            const attrs = Object.assign({ role: 'alert' }, ctx.attrs);\r\n            // If no tag was specified and there are children\r\n            // render the slot as is without wrapping it\r\n            if (!tag && (Array.isArray(children) || !children) && (children === null || children === void 0 ? void 0 : children.length)) {\r\n                return children;\r\n            }\r\n            // If no children in slot\r\n            // render whatever specified and fallback to a <span> with the message in it's contents\r\n            if ((Array.isArray(children) || !children) && !(children === null || children === void 0 ? void 0 : children.length)) {\r\n                return h(tag || 'span', attrs, message.value);\r\n            }\r\n            return h(tag, attrs, children);\r\n        };\r\n    },\r\n});\r\nconst ErrorMessage = ErrorMessageImpl;\n\nfunction useResetForm() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return function resetForm(state) {\r\n        if (!form) {\r\n            return;\r\n        }\r\n        return form.resetForm(state);\r\n    };\r\n}\n\n/**\r\n * If a field is dirty or not\r\n */\r\nfunction useIsFieldDirty(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.dirty;\r\n    });\r\n}\n\n/**\r\n * If a field is touched or not\r\n */\r\nfunction useIsFieldTouched(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.touched;\r\n    });\r\n}\n\n/**\r\n * If a field is validated and is valid\r\n */\r\nfunction useIsFieldValid(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return false;\r\n        }\r\n        return field.meta.valid;\r\n    });\r\n}\n\n/**\r\n * If the form is submitting or not\r\n */\r\nfunction useIsSubmitting() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.isSubmitting.value) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * Validates a single field\r\n */\r\nfunction useValidateField(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    let field = path ? undefined : inject(FieldContextKey);\r\n    return function validateField() {\r\n        if (path) {\r\n            field = normalizeField(form === null || form === void 0 ? void 0 : form.fieldsByPath.value[unref(path)]);\r\n        }\r\n        if (!field) {\r\n            warn(`field with name ${unref(path)} was not found`);\r\n            return Promise.resolve({\r\n                errors: [],\r\n                valid: true,\r\n            });\r\n        }\r\n        return field.validate();\r\n    };\r\n}\n\n/**\r\n * If the form is dirty or not\r\n */\r\nfunction useIsFormDirty() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.dirty) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * If the form is touched or not\r\n */\r\nfunction useIsFormTouched() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.touched) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * If the form has been validated and is valid\r\n */\r\nfunction useIsFormValid() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.meta.value.valid) !== null && _a !== void 0 ? _a : false;\r\n    });\r\n}\n\n/**\r\n * Validate multiple fields\r\n */\r\nfunction useValidateForm() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return function validateField() {\r\n        if (!form) {\r\n            return Promise.resolve({ results: {}, errors: {}, valid: true });\r\n        }\r\n        return form.validate();\r\n    };\r\n}\n\n/**\r\n * The number of form's submission count\r\n */\r\nfunction useSubmitCount() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        var _a;\r\n        return (_a = form === null || form === void 0 ? void 0 : form.submitCount.value) !== null && _a !== void 0 ? _a : 0;\r\n    });\r\n}\n\n/**\r\n * Gives access to a field's current value\r\n */\r\nfunction useFieldValue(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    // We don't want to use self injected context as it doesn't make sense\r\n    const field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            return getFromPath(form === null || form === void 0 ? void 0 : form.values, unref(path));\r\n        }\r\n        return unref(field === null || field === void 0 ? void 0 : field.value);\r\n    });\r\n}\n\n/**\r\n * Gives access to a form's values\r\n */\r\nfunction useFormValues() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        return (form === null || form === void 0 ? void 0 : form.values) || {};\r\n    });\r\n}\n\n/**\r\n * Gives access to all form errors\r\n */\r\nfunction useFormErrors() {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    return computed(() => {\r\n        return ((form === null || form === void 0 ? void 0 : form.errors.value) || {});\r\n    });\r\n}\n\n/**\r\n * Gives access to a single field error\r\n */\r\nfunction useFieldError(path) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    // We don't want to use self injected context as it doesn't make sense\r\n    const field = path ? undefined : inject(FieldContextKey);\r\n    return computed(() => {\r\n        if (path) {\r\n            return form === null || form === void 0 ? void 0 : form.errors.value[unref(path)];\r\n        }\r\n        return field === null || field === void 0 ? void 0 : field.errorMessage.value;\r\n    });\r\n}\n\nfunction useSubmitForm(cb) {\r\n    const form = injectWithSelf(FormContextKey);\r\n    if (!form) {\r\n        warn('No vee-validate <Form /> or `useForm` was detected in the component tree');\r\n    }\r\n    const onSubmit = form ? form.handleSubmit(cb) : undefined;\r\n    return function submitForm(e) {\r\n        if (!onSubmit) {\r\n            return;\r\n        }\r\n        return onSubmit(e);\r\n    };\r\n}\n\nexport { ErrorMessage, Field, FieldArray, FieldContextKey, Form, FormContextKey, IS_ABSENT, configure, defineRule, useField, useFieldArray, useFieldError, useFieldValue, useForm, useFormErrors, useFormValues, useIsFieldDirty, useIsFieldTouched, useIsFieldValid, useIsFormDirty, useIsFormTouched, useIsFormValid, useIsSubmitting, useResetForm, useSubmitCount, useSubmitForm, useValidateField, useValidateForm, validate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}